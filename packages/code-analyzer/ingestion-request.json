{
  "entries": [
    {
      "kind": "Method",
      "name": "recommendPopularSearchTerms",
      "parent": "Recommender",
      "parentKind": "Class",
      "dependencies": [
        "PopularSearchTermsRecommendationRequest",
        "RelewiseRequestOptions"
      ],
      "parameters": [
        {
          "name": "request",
          "type": "PopularSearchTermsRecommendationRequest",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "RelewiseRequestOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "Promise<SearchTermRecommendationResponse | undefined>",
      "isAsync": true
    },
    {
      "kind": "Method",
      "name": "recommendPersonalBrands",
      "parent": "Recommender",
      "parentKind": "Class",
      "dependencies": [
        "PersonalBrandRecommendationRequest",
        "RelewiseRequestOptions"
      ],
      "parameters": [
        {
          "name": "request",
          "type": "PersonalBrandRecommendationRequest",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "RelewiseRequestOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "Promise<BrandRecommendationResponse | undefined>",
      "isAsync": true
    },
    {
      "kind": "Method",
      "name": "recommendPopularBrands",
      "parent": "Recommender",
      "parentKind": "Class",
      "dependencies": [
        "PopularBrandsRecommendationRequest",
        "RelewiseRequestOptions"
      ],
      "parameters": [
        {
          "name": "request",
          "type": "PopularBrandsRecommendationRequest",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "RelewiseRequestOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "Promise<BrandRecommendationResponse | undefined>",
      "isAsync": true
    },
    {
      "kind": "Method",
      "name": "recommendPersonalContentCategories",
      "parent": "Recommender",
      "parentKind": "Class",
      "dependencies": [
        "PersonalContentCategoryRecommendationRequest",
        "RelewiseRequestOptions"
      ],
      "parameters": [
        {
          "name": "request",
          "type": "PersonalContentCategoryRecommendationRequest",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "RelewiseRequestOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "Promise<ContentCategoryRecommendationResponse | undefined>",
      "isAsync": true
    },
    {
      "kind": "Method",
      "name": "recommendPopularContentCategories",
      "parent": "Recommender",
      "parentKind": "Class",
      "dependencies": [
        "PopularContentCategoriesRecommendationRequest",
        "RelewiseRequestOptions"
      ],
      "parameters": [
        {
          "name": "request",
          "type": "PopularContentCategoriesRecommendationRequest",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "RelewiseRequestOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "Promise<ContentCategoryRecommendationResponse | undefined>",
      "isAsync": true
    },
    {
      "kind": "Method",
      "name": "recommendPersonalProductCategories",
      "parent": "Recommender",
      "parentKind": "Class",
      "dependencies": [
        "PersonalProductCategoryRecommendationRequest",
        "RelewiseRequestOptions"
      ],
      "parameters": [
        {
          "name": "request",
          "type": "PersonalProductCategoryRecommendationRequest",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "RelewiseRequestOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "Promise<ProductCategoryRecommendationResponse | undefined>",
      "isAsync": true
    },
    {
      "kind": "Method",
      "name": "recommendPopularProductCategories",
      "parent": "Recommender",
      "parentKind": "Class",
      "dependencies": [
        "PopularProductCategoriesRecommendationRequest",
        "RelewiseRequestOptions"
      ],
      "parameters": [
        {
          "name": "request",
          "type": "PopularProductCategoriesRecommendationRequest",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "RelewiseRequestOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "Promise<ProductCategoryRecommendationResponse | undefined>",
      "isAsync": true
    },
    {
      "kind": "Method",
      "name": "recommendPurchasedWithProduct",
      "parent": "Recommender",
      "parentKind": "Class",
      "dependencies": [
        "PurchasedWithProductRequest",
        "RelewiseRequestOptions"
      ],
      "parameters": [
        {
          "name": "request",
          "type": "PurchasedWithProductRequest",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "RelewiseRequestOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "Promise<ProductRecommendationResponse | undefined>",
      "isAsync": true
    },
    {
      "kind": "Method",
      "name": "recommendPurchasedWithMultipleProducts",
      "parent": "Recommender",
      "parentKind": "Class",
      "dependencies": [
        "PurchasedWithMultipleProductsRequest",
        "RelewiseRequestOptions"
      ],
      "parameters": [
        {
          "name": "request",
          "type": "PurchasedWithMultipleProductsRequest",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "RelewiseRequestOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "Promise<ProductRecommendationResponse | undefined>",
      "isAsync": true
    },
    {
      "kind": "Method",
      "name": "sortVariants",
      "parent": "Recommender",
      "parentKind": "Class",
      "dependencies": [
        "SortVariantsRequest",
        "RelewiseRequestOptions"
      ],
      "parameters": [
        {
          "name": "request",
          "type": "SortVariantsRequest",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "RelewiseRequestOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "Promise<ProductRecommendationResponse | undefined>",
      "isAsync": true
    },
    {
      "kind": "Method",
      "name": "sortProducts",
      "parent": "Recommender",
      "parentKind": "Class",
      "dependencies": [
        "SortProductsRequest",
        "RelewiseRequestOptions"
      ],
      "parameters": [
        {
          "name": "request",
          "type": "SortProductsRequest",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "RelewiseRequestOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "Promise<ProductRecommendationResponse | undefined>",
      "isAsync": true
    },
    {
      "kind": "Method",
      "name": "recommendSimilarProducts",
      "parent": "Recommender",
      "parentKind": "Class",
      "dependencies": [
        "SimilarProductsRequest",
        "RelewiseRequestOptions"
      ],
      "parameters": [
        {
          "name": "request",
          "type": "SimilarProductsRequest",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "RelewiseRequestOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "Promise<ProductRecommendationResponse | undefined>",
      "isAsync": true
    },
    {
      "kind": "Method",
      "name": "recommendSearchTermBasedProducts",
      "parent": "Recommender",
      "parentKind": "Class",
      "dependencies": [
        "SearchTermBasedProductRecommendationRequest",
        "RelewiseRequestOptions"
      ],
      "parameters": [
        {
          "name": "request",
          "type": "SearchTermBasedProductRecommendationRequest",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "RelewiseRequestOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "Promise<ProductRecommendationResponse | undefined>",
      "isAsync": true
    },
    {
      "kind": "Method",
      "name": "recentlyViewedProducts",
      "parent": "Recommender",
      "parentKind": "Class",
      "dependencies": [
        "RecentlyViewedProductsRequest",
        "RelewiseRequestOptions"
      ],
      "parameters": [
        {
          "name": "request",
          "type": "RecentlyViewedProductsRequest",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "RelewiseRequestOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "Promise<ProductRecommendationResponse | undefined>",
      "isAsync": true
    },
    {
      "kind": "Method",
      "name": "recommendPurchasedWithCurrentCart",
      "parent": "Recommender",
      "parentKind": "Class",
      "dependencies": [
        "PurchasedWithCurrentCartRequest",
        "RelewiseRequestOptions"
      ],
      "parameters": [
        {
          "name": "request",
          "type": "PurchasedWithCurrentCartRequest",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "RelewiseRequestOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "Promise<ProductRecommendationResponse | undefined>",
      "isAsync": true
    },
    {
      "kind": "Method",
      "name": "recommendProductsViewedAfterViewingProduct",
      "parent": "Recommender",
      "parentKind": "Class",
      "dependencies": [
        "ProductsViewedAfterViewingProductRequest",
        "RelewiseRequestOptions"
      ],
      "parameters": [
        {
          "name": "request",
          "type": "ProductsViewedAfterViewingProductRequest",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "RelewiseRequestOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "Promise<ProductRecommendationResponse | undefined>",
      "isAsync": true
    },
    {
      "kind": "Method",
      "name": "recommendProductsViewedAfterViewingContent",
      "parent": "Recommender",
      "parentKind": "Class",
      "dependencies": [
        "ProductsViewedAfterViewingContentRequest",
        "RelewiseRequestOptions"
      ],
      "parameters": [
        {
          "name": "request",
          "type": "ProductsViewedAfterViewingContentRequest",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "RelewiseRequestOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "Promise<ProductRecommendationResponse | undefined>",
      "isAsync": true
    },
    {
      "kind": "Method",
      "name": "recommendPopularProducts",
      "parent": "Recommender",
      "parentKind": "Class",
      "dependencies": [
        "PopularProductsRequest",
        "RelewiseRequestOptions"
      ],
      "parameters": [
        {
          "name": "request",
          "type": "PopularProductsRequest",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "RelewiseRequestOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "Promise<ProductRecommendationResponse | undefined>",
      "isAsync": true
    },
    {
      "kind": "Method",
      "name": "recommendPersonalProducts",
      "parent": "Recommender",
      "parentKind": "Class",
      "dependencies": [
        "PersonalProductRecommendationRequest",
        "RelewiseRequestOptions"
      ],
      "parameters": [
        {
          "name": "request",
          "type": "PersonalProductRecommendationRequest",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "RelewiseRequestOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "Promise<ProductRecommendationResponse | undefined>",
      "isAsync": true
    },
    {
      "kind": "Method",
      "name": "recommendPopularContents",
      "parent": "Recommender",
      "parentKind": "Class",
      "dependencies": [
        "PopularContentsRequest",
        "RelewiseRequestOptions"
      ],
      "parameters": [
        {
          "name": "request",
          "type": "PopularContentsRequest",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "RelewiseRequestOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "Promise<ContentRecommendationResponse | undefined>",
      "isAsync": true
    },
    {
      "kind": "Method",
      "name": "recommendPersonalContents",
      "parent": "Recommender",
      "parentKind": "Class",
      "dependencies": [
        "PersonalContentRecommendationRequest",
        "RelewiseRequestOptions"
      ],
      "parameters": [
        {
          "name": "request",
          "type": "PersonalContentRecommendationRequest",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "RelewiseRequestOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "Promise<ContentRecommendationResponse | undefined>",
      "isAsync": true
    },
    {
      "kind": "Method",
      "name": "recommendContentsViewedAfterViewingProduct",
      "parent": "Recommender",
      "parentKind": "Class",
      "dependencies": [
        "ContentsViewedAfterViewingProductRequest",
        "RelewiseRequestOptions"
      ],
      "parameters": [
        {
          "name": "request",
          "type": "ContentsViewedAfterViewingProductRequest",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "RelewiseRequestOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "Promise<ContentRecommendationResponse | undefined>",
      "isAsync": true
    },
    {
      "kind": "Method",
      "name": "recommendContentsViewedAfterViewingMultipleProducts",
      "parent": "Recommender",
      "parentKind": "Class",
      "dependencies": [
        "ContentsViewedAfterViewingMultipleProductsRequest",
        "RelewiseRequestOptions"
      ],
      "parameters": [
        {
          "name": "request",
          "type": "ContentsViewedAfterViewingMultipleProductsRequest",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "RelewiseRequestOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "Promise<ContentRecommendationResponse | undefined>",
      "isAsync": true
    },
    {
      "kind": "Method",
      "name": "recommendContentsViewedAfterViewingMultipleContents",
      "parent": "Recommender",
      "parentKind": "Class",
      "dependencies": [
        "ContentsViewedAfterViewingMultipleContentsRequest",
        "RelewiseRequestOptions"
      ],
      "parameters": [
        {
          "name": "request",
          "type": "ContentsViewedAfterViewingMultipleContentsRequest",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "RelewiseRequestOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "Promise<ContentRecommendationResponse | undefined>",
      "isAsync": true
    },
    {
      "kind": "Method",
      "name": "recommendContentsViewedAfterViewingContent",
      "parent": "Recommender",
      "parentKind": "Class",
      "dependencies": [
        "ContentsViewedAfterViewingContentRequest",
        "RelewiseRequestOptions"
      ],
      "parameters": [
        {
          "name": "request",
          "type": "ContentsViewedAfterViewingContentRequest",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "RelewiseRequestOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "Promise<ContentRecommendationResponse | undefined>",
      "isAsync": true
    },
    {
      "kind": "Method",
      "name": "batchProductRecommendations",
      "parent": "Recommender",
      "parentKind": "Class",
      "dependencies": [
        "ProductRecommendationRequestCollection",
        "RelewiseRequestOptions"
      ],
      "parameters": [
        {
          "name": "request",
          "type": "ProductRecommendationRequestCollection",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "RelewiseRequestOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "Promise<ProductRecommendationResponseCollection | undefined>",
      "isAsync": true
    },
    {
      "kind": "Method",
      "name": "batchContentRecommendations",
      "parent": "Recommender",
      "parentKind": "Class",
      "dependencies": [
        "ContentRecommendationRequestCollection",
        "RelewiseRequestOptions"
      ],
      "parameters": [
        {
          "name": "request",
          "type": "ContentRecommendationRequestCollection",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "RelewiseRequestOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "Promise<ContentRecommendationResponseCollection | undefined>",
      "isAsync": true
    },
    {
      "kind": "Method",
      "name": "batchContentCategoryRecommendations",
      "parent": "Recommender",
      "parentKind": "Class",
      "dependencies": [
        "ContentCategoryRecommendationRequestCollection",
        "RelewiseRequestOptions"
      ],
      "parameters": [
        {
          "name": "request",
          "type": "ContentCategoryRecommendationRequestCollection",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "RelewiseRequestOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "Promise<ContentCategoryRecommendationResponseCollection | undefined>",
      "isAsync": true
    },
    {
      "kind": "Method",
      "name": "batchProductCategoryRecommendations",
      "parent": "Recommender",
      "parentKind": "Class",
      "dependencies": [
        "ProductCategoryRecommendationRequestCollection",
        "RelewiseRequestOptions"
      ],
      "parameters": [
        {
          "name": "request",
          "type": "ProductCategoryRecommendationRequestCollection",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "RelewiseRequestOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "Promise<ProductCategoryRecommendationResponseCollection | undefined>",
      "isAsync": true
    },
    {
      "kind": "Constructor",
      "name": "constructor",
      "parent": "Recommender",
      "parentKind": "Class",
      "parameters": [
        {
          "name": "datasetId",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": true,
          "scope": "protected"
        },
        {
          "name": "apiKey",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": true,
          "scope": "protected"
        },
        {
          "name": "options",
          "type": "RelewiseClientOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ]
    },
    {
      "kind": "Class",
      "name": "Recommender",
      "dependencies": [],
      "isAbstract": false,
      "isDefault": false,
      "properties": [],
      "extends": [
        "RelewiseClient"
      ]
    },
    {
      "kind": "Constructor",
      "name": "constructor",
      "parent": "ProblemDetailsError",
      "parentKind": "Class",
      "dependencies": [
        "HttpProblemDetails | null"
      ],
      "parameters": [
        {
          "name": "message",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "details",
          "type": "HttpProblemDetails | null",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ]
    },
    {
      "kind": "Class",
      "name": "ProblemDetailsError",
      "dependencies": [],
      "isAbstract": false,
      "isDefault": false,
      "properties": [],
      "extends": [
        "Error"
      ]
    },
    {
      "kind": "Constructor",
      "name": "constructor",
      "parent": "RelewiseClient",
      "parentKind": "Class",
      "parameters": [
        {
          "name": "datasetId",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": true,
          "scope": "protected"
        },
        {
          "name": "apiKey",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": true,
          "scope": "protected"
        },
        {
          "name": "options",
          "type": "RelewiseClientOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ]
    },
    {
      "kind": "Class",
      "name": "RelewiseClient",
      "dependencies": [],
      "isAbstract": true,
      "isDefault": false,
      "properties": [],
      "extends": null
    },
    {
      "kind": "Interface",
      "name": "RelewiseClientOptions",
      "extends": [],
      "properties": [
        {
          "name": "serverUrl",
          "type": "string",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "RelewiseRequestOptions",
      "extends": [],
      "properties": [
        {
          "name": "abortSignal",
          "type": "AbortSignal",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "HttpProblemDetails",
      "extends": [],
      "properties": [
        {
          "name": "type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "title",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "status",
          "type": "number",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "traceId",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "detail",
          "type": "string",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "errors",
          "type": "Record<string, string>",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Method",
      "name": "searchProducts",
      "parent": "Searcher",
      "parentKind": "Class",
      "dependencies": [
        "ProductSearchRequest",
        "RelewiseRequestOptions"
      ],
      "parameters": [
        {
          "name": "request",
          "type": "ProductSearchRequest",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "RelewiseRequestOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "Promise<ProductSearchResponse | undefined>",
      "isAsync": true
    },
    {
      "kind": "Method",
      "name": "searchProductCategories",
      "parent": "Searcher",
      "parentKind": "Class",
      "dependencies": [
        "ProductCategorySearchRequest",
        "RelewiseRequestOptions"
      ],
      "parameters": [
        {
          "name": "request",
          "type": "ProductCategorySearchRequest",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "RelewiseRequestOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "Promise<ProductCategorySearchResponse | undefined>",
      "isAsync": true
    },
    {
      "kind": "Method",
      "name": "searchContents",
      "parent": "Searcher",
      "parentKind": "Class",
      "dependencies": [
        "ContentSearchRequest",
        "RelewiseRequestOptions"
      ],
      "parameters": [
        {
          "name": "request",
          "type": "ContentSearchRequest",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "RelewiseRequestOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "Promise<ContentSearchResponse | undefined>",
      "isAsync": true
    },
    {
      "kind": "Method",
      "name": "searchTermPrediction",
      "parent": "Searcher",
      "parentKind": "Class",
      "dependencies": [
        "SearchTermPredictionRequest",
        "RelewiseRequestOptions"
      ],
      "parameters": [
        {
          "name": "request",
          "type": "SearchTermPredictionRequest",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "RelewiseRequestOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "Promise<SearchTermPredictionResponse | undefined>",
      "isAsync": true
    },
    {
      "kind": "Method",
      "name": "batch",
      "parent": "Searcher",
      "parentKind": "Class",
      "dependencies": [
        "SearchRequestCollection",
        "RelewiseRequestOptions"
      ],
      "parameters": [
        {
          "name": "requestCollections",
          "type": "SearchRequestCollection",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "RelewiseRequestOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "Promise<SearchResponseCollection | undefined>",
      "isAsync": true
    },
    {
      "kind": "Constructor",
      "name": "constructor",
      "parent": "Searcher",
      "parentKind": "Class",
      "parameters": [
        {
          "name": "datasetId",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": true,
          "scope": "protected"
        },
        {
          "name": "apiKey",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": true,
          "scope": "protected"
        },
        {
          "name": "options",
          "type": "RelewiseClientOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ]
    },
    {
      "kind": "Class",
      "name": "Searcher",
      "dependencies": [],
      "isAbstract": false,
      "isDefault": false,
      "properties": [],
      "extends": [
        "RelewiseClient"
      ]
    },
    {
      "kind": "Method",
      "name": "trackOrder",
      "parent": "Tracker",
      "parentKind": "Class",
      "dependencies": [
        "{\r\n        user: User,\r\n        subtotal: { currency: string, amount: number },\r\n        orderNumber: string,\r\n        /** @deprecated Use orderNumber instead. */\r\n        trackingNumber?: string,\r\n        lineItems: { productId: string, variantId?: string, lineTotal: number, quantity: number, data?: Record<string, DataValue> }[], \r\n        data?: Record<string, DataValue>, \r\n        cartName?: string\r\n    }",
        "RelewiseRequestOptions"
      ],
      "parameters": [
        {
          "name": "{ user, subtotal, orderNumber, lineItems, cartName = 'default', trackingNumber, data }",
          "type": "{\r\n        user: User,\r\n        subtotal: { currency: string, amount: number },\r\n        orderNumber: string,\r\n        /** @deprecated Use orderNumber instead. */\r\n        trackingNumber?: string,\r\n        lineItems: { productId: string, variantId?: string, lineTotal: number, quantity: number, data?: Record<string, DataValue> }[], \r\n        data?: Record<string, DataValue>, \r\n        cartName?: string\r\n    }",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "RelewiseRequestOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "Promise<void | undefined>",
      "isAsync": true
    },
    {
      "kind": "Method",
      "name": "trackCart",
      "parent": "Tracker",
      "parentKind": "Class",
      "dependencies": [
        "{ \r\n        user?: User, \r\n        subtotal: { currency: string, amount: number }, \r\n        lineItems: { productId: string, variantId?: string, lineTotal: number, quantity: number, data?: Record<string, DataValue> }[], \r\n        data?: Record<string, DataValue>, \r\n        cartName?: string \r\n    }",
        "RelewiseRequestOptions"
      ],
      "parameters": [
        {
          "name": "{ user, subtotal, lineItems, data, cartName = 'default' }",
          "type": "{ \r\n        user?: User, \r\n        subtotal: { currency: string, amount: number }, \r\n        lineItems: { productId: string, variantId?: string, lineTotal: number, quantity: number, data?: Record<string, DataValue> }[], \r\n        data?: Record<string, DataValue>, \r\n        cartName?: string \r\n    }",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "RelewiseRequestOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "Promise<void | undefined>",
      "isAsync": true
    },
    {
      "kind": "Method",
      "name": "trackProductView",
      "parent": "Tracker",
      "parentKind": "Class",
      "dependencies": [
        "{ productId: string, variantId?: string, user: User }",
        "RelewiseRequestOptions"
      ],
      "parameters": [
        {
          "name": "{ productId, variantId, user }",
          "type": "{ productId: string, variantId?: string, user: User }",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "RelewiseRequestOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "Promise<void | undefined>",
      "isAsync": true
    },
    {
      "kind": "Method",
      "name": "trackProductCategoryView",
      "parent": "Tracker",
      "parentKind": "Class",
      "dependencies": [
        "{ idPath: string[], user: User }",
        "RelewiseRequestOptions"
      ],
      "parameters": [
        {
          "name": "{ idPath, user }",
          "type": "{ idPath: string[], user: User }",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "RelewiseRequestOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "Promise<void | undefined>",
      "isAsync": true
    },
    {
      "kind": "Method",
      "name": "trackContentView",
      "parent": "Tracker",
      "parentKind": "Class",
      "dependencies": [
        "{ contentId: string, user: User }",
        "RelewiseRequestOptions"
      ],
      "parameters": [
        {
          "name": "{ contentId, user }",
          "type": "{ contentId: string, user: User }",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "RelewiseRequestOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "Promise<void | undefined>",
      "isAsync": true
    },
    {
      "kind": "Method",
      "name": "trackContentCategoryView",
      "parent": "Tracker",
      "parentKind": "Class",
      "dependencies": [
        "{ idPath: string[], user: User }",
        "RelewiseRequestOptions"
      ],
      "parameters": [
        {
          "name": "{ idPath, user }",
          "type": "{ idPath: string[], user: User }",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "RelewiseRequestOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "Promise<void | undefined>",
      "isAsync": true
    },
    {
      "kind": "Method",
      "name": "trackBrandView",
      "parent": "Tracker",
      "parentKind": "Class",
      "dependencies": [
        "{ brandId: string, user: User }",
        "RelewiseRequestOptions"
      ],
      "parameters": [
        {
          "name": "{ brandId, user }",
          "type": "{ brandId: string, user: User }",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "RelewiseRequestOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "Promise<void | undefined>",
      "isAsync": true
    },
    {
      "kind": "Method",
      "name": "trackSearchTerm",
      "parent": "Tracker",
      "parentKind": "Class",
      "dependencies": [
        "{ term: string, user: User, language: string }",
        "RelewiseRequestOptions"
      ],
      "parameters": [
        {
          "name": "{ term, language, user }",
          "type": "{ term: string, user: User, language: string }",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "RelewiseRequestOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "Promise<void | undefined>",
      "isAsync": true
    },
    {
      "kind": "Method",
      "name": "trackUserUpdate",
      "parent": "Tracker",
      "parentKind": "Class",
      "dependencies": [
        "{ user: User, updateKind?: 'None' | 'UpdateAndAppend' | 'ReplaceProvidedProperties' | 'ClearAndReplace'  }",
        "RelewiseRequestOptions"
      ],
      "parameters": [
        {
          "name": "{ user, updateKind = 'UpdateAndAppend' }",
          "type": "{ user: User, updateKind?: 'None' | 'UpdateAndAppend' | 'ReplaceProvidedProperties' | 'ClearAndReplace'  }",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "RelewiseRequestOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "Promise<void | undefined>",
      "isAsync": true
    },
    {
      "kind": "Constructor",
      "name": "constructor",
      "parent": "Tracker",
      "parentKind": "Class",
      "parameters": [
        {
          "name": "datasetId",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": true,
          "scope": "protected"
        },
        {
          "name": "apiKey",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": true,
          "scope": "protected"
        },
        {
          "name": "options",
          "type": "RelewiseClientOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ]
    },
    {
      "kind": "Class",
      "name": "Tracker",
      "dependencies": [],
      "isAbstract": false,
      "isDefault": false,
      "properties": [],
      "extends": [
        "RelewiseClient"
      ]
    },
    {
      "kind": "Method",
      "name": "addContainsCondition",
      "parent": "ConditionBuilder",
      "parentKind": "Class",
      "dependencies": [
        "DataValueBase<T>",
        "'All' | 'Any'"
      ],
      "parameters": [
        {
          "name": "value",
          "type": "DataValueBase<T>",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "valueCollectionEvaluationMode",
          "type": "'All' | 'Any'",
          "nullable": false,
          "defaultValue": "'All'",
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addDistinctCondition",
      "parent": "ConditionBuilder",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": [
        {
          "name": "numberOfOccurrencesAllowedWithTheSameValue",
          "type": "number",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addEqualsCondition",
      "parent": "ConditionBuilder",
      "parentKind": "Class",
      "dependencies": [
        "DataValueBase<T>"
      ],
      "parameters": [
        {
          "name": "value",
          "type": "DataValueBase<T>",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addGreaterThanCondition",
      "parent": "ConditionBuilder",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": [
        {
          "name": "value",
          "type": "number",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addLessThanCondition",
      "parent": "ConditionBuilder",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": [
        {
          "name": "value",
          "type": "number",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addDataObjectCondition",
      "parent": "ConditionBuilder",
      "parentKind": "Class",
      "dependencies": [
        "(builder: DataObjectFilterConditionBuilder) => void"
      ],
      "parameters": [
        {
          "name": "conditions",
          "type": "(builder: DataObjectFilterConditionBuilder) => void",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "skip",
          "type": "number",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "take",
          "type": "number",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addHasValueCondition",
      "parent": "ConditionBuilder",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": [
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        }
      ],
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addRelativeDateTimeCondition",
      "parent": "ConditionBuilder",
      "parentKind": "Class",
      "dependencies": [
        "'Before' | 'After'",
        "'UnixMilliseconds' | 'UnixSeconds' | 'UnixMinutes'"
      ],
      "parameters": [
        {
          "name": "comparison",
          "type": "'Before' | 'After'",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "unit",
          "type": "'UnixMilliseconds' | 'UnixSeconds' | 'UnixMinutes'",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "currentTimeOffset",
          "type": "number",
          "nullable": false,
          "defaultValue": "0",
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        }
      ],
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "build",
      "parent": "ConditionBuilder",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": [],
      "returnType": "ValueConditionCollection | null",
      "isAsync": false
    },
    {
      "kind": "Class",
      "name": "ConditionBuilder",
      "dependencies": [
        "Conditions[]"
      ],
      "isAbstract": false,
      "isDefault": false,
      "properties": [
        {
          "name": "conditions",
          "type": "Conditions[]",
          "nullable": false,
          "defaultValue": "[]"
        }
      ],
      "extends": null
    },
    {
      "kind": "Method",
      "name": "addContainsCondition",
      "parent": "DataObjectFilterConditionBuilder",
      "parentKind": "Class",
      "dependencies": [
        "DataValueBase<T>",
        "'All' | 'Any'"
      ],
      "parameters": [
        {
          "name": "key",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "value",
          "type": "DataValueBase<T>",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "mode",
          "type": "'All' | 'Any'",
          "nullable": false,
          "defaultValue": "'All'",
          "isReadonly": false
        },
        {
          "name": "objectPath",
          "type": "string[]",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addEqualsCondition",
      "parent": "DataObjectFilterConditionBuilder",
      "parentKind": "Class",
      "dependencies": [
        "DataValueBase<T>"
      ],
      "parameters": [
        {
          "name": "key",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "value",
          "type": "DataValueBase<T>",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "objectPath",
          "type": "string[]",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addInRangeCondition",
      "parent": "DataObjectFilterConditionBuilder",
      "parentKind": "Class",
      "dependencies": [
        "DoubleRange"
      ],
      "parameters": [
        {
          "name": "key",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "range",
          "type": "DoubleRange",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "objectPath",
          "type": "string[]",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addGreaterThanCondition",
      "parent": "DataObjectFilterConditionBuilder",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": [
        {
          "name": "key",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "value",
          "type": "number",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "objectPath",
          "type": "string[]",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addLessThanCondition",
      "parent": "DataObjectFilterConditionBuilder",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": [
        {
          "name": "key",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "value",
          "type": "number",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "objectPath",
          "type": "string[]",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addMinByCondition",
      "parent": "DataObjectFilterConditionBuilder",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": [
        {
          "name": "key",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "objectPath",
          "type": "string[]",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addMaxByCondition",
      "parent": "DataObjectFilterConditionBuilder",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": [
        {
          "name": "key",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "objectPath",
          "type": "string[]",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addObjectValueIsSubsetOfCondition",
      "parent": "DataObjectFilterConditionBuilder",
      "parentKind": "Class",
      "dependencies": [
        "DataValueBase<T>"
      ],
      "parameters": [
        {
          "name": "key",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "value",
          "type": "DataValueBase<T>",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "objectPath",
          "type": "string[]",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "build",
      "parent": "DataObjectFilterConditionBuilder",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": [],
      "returnType": "DataObjectFilterConditions[] | null",
      "isAsync": false
    },
    {
      "kind": "Class",
      "name": "DataObjectFilterConditionBuilder",
      "dependencies": [
        "DataObjectFilterConditions[]"
      ],
      "isAbstract": false,
      "isDefault": false,
      "properties": [
        {
          "name": "conditions",
          "type": "DataObjectFilterConditions[]",
          "nullable": false,
          "defaultValue": "[]"
        }
      ],
      "extends": null
    },
    {
      "kind": "Method",
      "name": "addProductAssortmentFilter",
      "parent": "FilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Adds a product assortment filter to the request.\r\n     * @param assortmentIds - Array of assortment IDs or a single ID.\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The FilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "FilterOptions"
      ],
      "parameters": [
        {
          "name": "assortmentIds",
          "type": "number[] | number",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "FilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addVariantAssortmentFilter",
      "parent": "FilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Adds a variant assortment filter to the request.\r\n     * @param assortmentIds - Array of assortment IDs or a single ID.\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The FilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "FilterOptions"
      ],
      "parameters": [
        {
          "name": "assortmentIds",
          "type": "number[] | number",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "FilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addBrandAssortmentFilter",
      "parent": "FilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Adds a brand assortment filter to the request.\r\n     * @param assortmentIds - Array of assortment IDs or a single ID.\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The FilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "FilterOptions"
      ],
      "parameters": [
        {
          "name": "assortmentIds",
          "type": "number[] | number",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "FilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addContentAssortmentFilter",
      "parent": "FilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Adds a content assortment filter to the request.\r\n     * @param assortmentIds - Array of assortment IDs or a single ID.\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The FilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "FilterOptions"
      ],
      "parameters": [
        {
          "name": "assortmentIds",
          "type": "number[] | number",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "FilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addContentCategoryAssortmentFilter",
      "parent": "FilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Adds a content category assortment filter to the request.\r\n     * @param assortmentIds - Array of assortment IDs or a single ID.\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The FilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "FilterOptions"
      ],
      "parameters": [
        {
          "name": "assortmentIds",
          "type": "number[] | number",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "FilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addProductCategoryAssortmentFilter",
      "parent": "FilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Adds a product category assortment filter to the request.\r\n     * @param assortmentIds - Array of assortment IDs or a single ID.\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The FilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "FilterOptions"
      ],
      "parameters": [
        {
          "name": "assortmentIds",
          "type": "number[] | number",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "FilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addProductCategoryIdFilter",
      "parent": "FilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Filters the request to only return products within the specified categories.\r\n     * @param evaluationScope - Scope of the category evaluation (ImmediateParent, ImmediateParentOrItsParent, Ancestor).\r\n     * @param categoryIds - Array of category IDs or a single ID.\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The FilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "'ImmediateParent' | 'ImmediateParentOrItsParent' | 'Ancestor'",
        "FilterOptions"
      ],
      "parameters": [
        {
          "name": "evaluationScope",
          "type": "'ImmediateParent' | 'ImmediateParentOrItsParent' | 'Ancestor'",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "categoryIds",
          "type": "string[] | string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "FilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addContentCategoryIdFilter",
      "parent": "FilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Filters the request to only return contents within the specified categories.\r\n     * @param evaluationScope - Scope of the category evaluation (ImmediateParent, ImmediateParentOrItsParent, Ancestor).\r\n     * @param categoryIds - Array of category IDs or a single ID.\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The FilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "'ImmediateParent' | 'ImmediateParentOrItsParent' | 'Ancestor'",
        "FilterOptions"
      ],
      "parameters": [
        {
          "name": "evaluationScope",
          "type": "'ImmediateParent' | 'ImmediateParentOrItsParent' | 'Ancestor'",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "categoryIds",
          "type": "string[] | string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "FilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addProductIdFilter",
      "parent": "FilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Filters the request to only return the specified products.\r\n     * @param productIds - Array of product IDs or a single ID.\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The FilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "FilterOptions"
      ],
      "parameters": [
        {
          "name": "productIds",
          "type": "string | string[]",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "FilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addVariantIdFilter",
      "parent": "FilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Filters the request to only return the specified variants.\r\n     * @param variantIds - Array of variant IDs or a single ID.\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The FilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "FilterOptions"
      ],
      "parameters": [
        {
          "name": "variantIds",
          "type": "string | string[]",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "FilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addBrandIdFilter",
      "parent": "FilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Filters the request to only return the specified brands.\r\n     * @param brandIds - Array of brand IDs or a single ID.\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The FilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "FilterOptions"
      ],
      "parameters": [
        {
          "name": "brandIds",
          "type": "string | string[]",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "FilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addContentIdFilter",
      "parent": "FilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Filters the request to only return the specified contents.\r\n     * @param contentIds - Array of content IDs or a single ID.\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The FilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "FilterOptions"
      ],
      "parameters": [
        {
          "name": "contentIds",
          "type": "string | string[]",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "FilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addCompanyIdFilter",
      "parent": "FilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Filters the request to only return the specified companies.\r\n     * @param companyIds - Array of company IDs or a single ID.\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The FilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "FilterOptions"
      ],
      "parameters": [
        {
          "name": "companyIds",
          "type": "string | string[]",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "FilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addProductHasVariantsFilter",
      "parent": "FilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Adds a range filter to the request ensuring the product has a certain range of variants.\r\n     * @param lowerBound - Lower bound of the range (inclusive).\r\n     * @param upperBound - Upper bound of the range (inclusive).\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The FilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "FilterOptions & { includeDisabled?: boolean }"
      ],
      "parameters": [
        {
          "name": "lowerBound",
          "type": "number",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "upperBound",
          "type": "number",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "FilterOptions & { includeDisabled?: boolean }",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addProductRecentlyPurchasedByUserFilter",
      "parent": "FilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Filters the request to only return products purchased since a certain point in time.\r\n     * @param sinceUtc - Date-time string indicating the point in time.\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The FilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "FilterOptions"
      ],
      "parameters": [
        {
          "name": "sinceUtc",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "FilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addProductRecentlyViewedByUserFilter",
      "parent": "FilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Filters the request to only return products viewed since a certain point in time.\r\n     * @param sinceUtc - Date-time string indicating the point in time.\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The FilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "FilterOptions"
      ],
      "parameters": [
        {
          "name": "sinceUtc",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "FilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addProductSalesPriceFilter",
      "parent": "FilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Filters the request to only return products within a certain sales price range.\r\n     * @param lowerBound - Lower bound of the price range (inclusive).\r\n     * @param upperBound - Upper bound of the price range (inclusive).\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The FilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "FilterOptions"
      ],
      "parameters": [
        {
          "name": "lowerBound",
          "type": "number",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "upperBound",
          "type": "number",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "FilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addProductListPriceFilter",
      "parent": "FilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Filters the request to only return products within a certain list price range.\r\n     * @param lowerBound - Lower bound of the price range (inclusive).\r\n     * @param upperBound - Upper bound of the price range (inclusive).\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The FilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "FilterOptions"
      ],
      "parameters": [
        {
          "name": "lowerBound",
          "type": "number",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "upperBound",
          "type": "number",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "FilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addVariantSalesPriceFilter",
      "parent": "FilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Filters the request to only return variants within a certain sales price range.\r\n     * @param lowerBound - Lower bound of the price range (inclusive).\r\n     * @param upperBound - Upper bound of the price range (inclusive).\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The FilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "FilterOptions"
      ],
      "parameters": [
        {
          "name": "lowerBound",
          "type": "number",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "upperBound",
          "type": "number",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "FilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addVariantListPriceFilter",
      "parent": "FilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Filters the request to only return variants within a certain list price range.\r\n     * @param lowerBound - Lower bound of the price range (inclusive).\r\n     * @param upperBound - Upper bound of the price range (inclusive).\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The FilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "FilterOptions"
      ],
      "parameters": [
        {
          "name": "lowerBound",
          "type": "number",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "upperBound",
          "type": "number",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "FilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addVariantSpecificationFilter",
      "parent": "FilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Filters the request to only return variants with a certain specification.\r\n     * @param key - Specification key.\r\n     * @param equalTo - Specification value to match.\r\n     * @param filterOutIfKeyIsNotFound - If true, filters out variants without the key (default is true).\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The FilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "FilterOptions"
      ],
      "parameters": [
        {
          "name": "key",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "equalTo",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "filterOutIfKeyIsNotFound",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "true",
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "FilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "and",
      "parent": "FilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Combines filters using logical AND.\r\n     * @param filterBuilder - Function to build the AND filter.\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The FilterBuilder instance for chaining.\r\n     * @throws Error if no filters are provided.\r\n     */",
      "dependencies": [
        "(builder: FilterBuilder) => void",
        "FilterOptions"
      ],
      "parameters": [
        {
          "name": "filterBuilder",
          "type": "(builder: FilterBuilder) => void",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "FilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "or",
      "parent": "FilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Combines filters using logical OR.\r\n     * @param filterBuilder - Function to build the OR filter.\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The FilterBuilder instance for chaining.\r\n     * @throws Error if no filters are provided.\r\n     */",
      "dependencies": [
        "(builder: FilterBuilder) => void",
        "FilterOptions"
      ],
      "parameters": [
        {
          "name": "filterBuilder",
          "type": "(builder: FilterBuilder) => void",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "FilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addProductDataFilter",
      "parent": "FilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Adds a product data filter to the request.\r\n     * @param key - Data key.\r\n     * @param conditionBuilder - Function to build the condition.\r\n     * @param mustMatchAllConditions - If true, all conditions must be met (default is true).\r\n     * @param filterOutIfKeyIsNotFound - If true, filters out products without the key (default is true).\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The FilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "(builder: ConditionBuilder) => void",
        "EntityDataFilterOptions"
      ],
      "parameters": [
        {
          "name": "key",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "conditionBuilder",
          "type": "(builder: ConditionBuilder) => void",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "mustMatchAllConditions",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "true",
          "isReadonly": false
        },
        {
          "name": "filterOutIfKeyIsNotFound",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "true",
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "EntityDataFilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addVariantDataFilter",
      "parent": "FilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Adds a variant data filter to the request.\r\n     * @param key - Data key.\r\n     * @param conditionBuilder - Function to build the condition.\r\n     * @param mustMatchAllConditions - If true, all conditions must be met (default is true).\r\n     * @param filterOutIfKeyIsNotFound - If true, filters out variants without the key (default is true).\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The FilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "(builder: ConditionBuilder) => void",
        "EntityDataFilterOptions"
      ],
      "parameters": [
        {
          "name": "key",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "conditionBuilder",
          "type": "(builder: ConditionBuilder) => void",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "mustMatchAllConditions",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "true",
          "isReadonly": false
        },
        {
          "name": "filterOutIfKeyIsNotFound",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "true",
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "EntityDataFilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addBrandDataFilter",
      "parent": "FilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Adds a brand data filter to the request.\r\n     * @param key - Data key.\r\n     * @param conditionBuilder - Function to build the condition.\r\n     * @param mustMatchAllConditions - If true, all conditions must be met (default is true).\r\n     * @param filterOutIfKeyIsNotFound - If true, filters out brands without the key (default is true).\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The FilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "(builder: ConditionBuilder) => void",
        "EntityDataFilterOptions"
      ],
      "parameters": [
        {
          "name": "key",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "conditionBuilder",
          "type": "(builder: ConditionBuilder) => void",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "mustMatchAllConditions",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "true",
          "isReadonly": false
        },
        {
          "name": "filterOutIfKeyIsNotFound",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "true",
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "EntityDataFilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addCartDataFilter",
      "parent": "FilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Adds a cart data filter to the request.\r\n     * @param key - Data key.\r\n     * @param conditionBuilder - Function to build the condition.\r\n     * @param mustMatchAllConditions - If true, all conditions must be met (default is true).\r\n     * @param filterOutIfKeyIsNotFound - If true, filters out carts without the key (default is true).\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The FilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "(builder: ConditionBuilder) => void",
        "FilterOptions"
      ],
      "parameters": [
        {
          "name": "key",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "conditionBuilder",
          "type": "(builder: ConditionBuilder) => void",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "mustMatchAllConditions",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "true",
          "isReadonly": false
        },
        {
          "name": "filterOutIfKeyIsNotFound",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "true",
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "FilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addContentCategoryDataFilter",
      "parent": "FilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Adds a content category data filter to the request.\r\n     * @param key - Data key.\r\n     * @param conditionBuilder - Function to build the condition.\r\n     * @param mustMatchAllConditions - If true, all conditions must be met (default is true).\r\n     * @param filterOutIfKeyIsNotFound - If true, filters out content categories without the key (default is true).\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The FilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "(builder: ConditionBuilder) => void",
        "EntityDataFilterOptions"
      ],
      "parameters": [
        {
          "name": "key",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "conditionBuilder",
          "type": "(builder: ConditionBuilder) => void",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "mustMatchAllConditions",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "true",
          "isReadonly": false
        },
        {
          "name": "filterOutIfKeyIsNotFound",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "true",
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "EntityDataFilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addContentDataFilter",
      "parent": "FilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Adds a content data filter to the request.\r\n     * @param key - Data key.\r\n     * @param conditionBuilder - Function to build the condition.\r\n     * @param mustMatchAllConditions - If true, all conditions must be met (default is true).\r\n     * @param filterOutIfKeyIsNotFound - If true, filters out contents without the key (default is true).\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The FilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "(builder: ConditionBuilder) => void",
        "EntityDataFilterOptions"
      ],
      "parameters": [
        {
          "name": "key",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "conditionBuilder",
          "type": "(builder: ConditionBuilder) => void",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "mustMatchAllConditions",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "true",
          "isReadonly": false
        },
        {
          "name": "filterOutIfKeyIsNotFound",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "true",
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "EntityDataFilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addProductCategoryDataFilter",
      "parent": "FilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Adds a product category data filter to the request.\r\n     * @param key - Data key.\r\n     * @param conditionBuilder - Function to build the condition.\r\n     * @param mustMatchAllConditions - If true, all conditions must be met (default is true).\r\n     * @param filterOutIfKeyIsNotFound - If true, filters out product categories without the key (default is true).\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The FilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "(builder: ConditionBuilder) => void",
        "EntityDataFilterOptions"
      ],
      "parameters": [
        {
          "name": "key",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "conditionBuilder",
          "type": "(builder: ConditionBuilder) => void",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "mustMatchAllConditions",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "true",
          "isReadonly": false
        },
        {
          "name": "filterOutIfKeyIsNotFound",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "true",
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "EntityDataFilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addCompanyDataFilter",
      "parent": "FilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Adds a company data filter to the request.\r\n     * @param key - Data key.\r\n     * @param conditionBuilder - Function to build the condition.\r\n     * @param mustMatchAllConditions - If true, all conditions must be met (default is true).\r\n     * @param filterOutIfKeyIsNotFound - If true, filters out companies without the key (default is true).\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The FilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "(builder: ConditionBuilder) => void",
        "EntityDataFilterOptions"
      ],
      "parameters": [
        {
          "name": "key",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "conditionBuilder",
          "type": "(builder: ConditionBuilder) => void",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "mustMatchAllConditions",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "true",
          "isReadonly": false
        },
        {
          "name": "filterOutIfKeyIsNotFound",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "true",
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "EntityDataFilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addProductDisplayNameFilter",
      "parent": "FilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Adds a product display name filter to the request.\r\n     * @param conditionBuilder - Function to build the condition.\r\n     * @param mustMatchAllConditions - If true, all conditions must be met (default is true).\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The FilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "(builder: ConditionBuilder) => void",
        "FilterOptions"
      ],
      "parameters": [
        {
          "name": "conditionBuilder",
          "type": "(builder: ConditionBuilder) => void",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "mustMatchAllConditions",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "true",
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "FilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addProductAndVariantIdFilter",
      "parent": "FilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Adds a product and variant ID filter to the request.\r\n     * @param products - Array of product and variant IDs or a single ID.\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The FilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "ProductAndVariantId | ProductAndVariantId[]",
        "FilterOptions"
      ],
      "parameters": [
        {
          "name": "products",
          "type": "ProductAndVariantId | ProductAndVariantId[]",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "FilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addProductCategoryLevelFilter",
      "parent": "FilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Adds a product category level filter to the request.\r\n     * @param levels - Array of category levels or a single level.\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The FilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "FilterOptions"
      ],
      "parameters": [
        {
          "name": "levels",
          "type": "number | number[]",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "FilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addProductCategoryHasParentFilter",
      "parent": "FilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Adds a product category has parent filter to the request.\r\n     * @param categoryIds - Array of category IDs or a single ID (optional).\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The FilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "FilterOptions"
      ],
      "parameters": [
        {
          "name": "categoryIds",
          "type": "string | string[]",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "FilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addProductCategoryHasChildFilter",
      "parent": "FilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Adds a product category has child filter to the request.\r\n     * @param categoryIds - Array of category IDs or a single ID (optional).\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The FilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "FilterOptions"
      ],
      "parameters": [
        {
          "name": "categoryIds",
          "type": "string | string[]",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "FilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addProductCategoryHasAncestorFilter",
      "parent": "FilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Adds a product category has ancestor filter to the request.\r\n     * @param categoryIds - Array of category IDs or a single ID (optional).\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The FilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "FilterOptions"
      ],
      "parameters": [
        {
          "name": "categoryIds",
          "type": "string | string[]",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "FilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addContentCategoryLevelFilter",
      "parent": "FilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Adds a content category level filter to the request.\r\n     * @param levels - Array of category levels or a single level.\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The FilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "FilterOptions"
      ],
      "parameters": [
        {
          "name": "levels",
          "type": "number | number[]",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "FilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addContentCategoryHasParentFilter",
      "parent": "FilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Adds a content category has parent filter to the request.\r\n     * @param categoryIds - Array of category IDs or a single ID (optional).\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The FilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "FilterOptions"
      ],
      "parameters": [
        {
          "name": "categoryIds",
          "type": "string | string[]",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "FilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addContentCategoryHasChildFilter",
      "parent": "FilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Adds a content category has child filter to the request.\r\n     * @param categoryIds - Array of category IDs or a single ID (optional).\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The FilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "FilterOptions"
      ],
      "parameters": [
        {
          "name": "categoryIds",
          "type": "string | string[]",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "FilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addContentCategoryHasAncestorFilter",
      "parent": "FilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Adds a content category has ancestor filter to the request.\r\n     * @param categoryIds - Array of category IDs or a single ID (optional).\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The FilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "FilterOptions"
      ],
      "parameters": [
        {
          "name": "categoryIds",
          "type": "string | string[]",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "FilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addProductCategoryHasProductsFilter",
      "parent": "FilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Adds a product category has products filter to the request ensuring that only categories with products in them are returned.\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The FilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "FilterOptions"
      ],
      "parameters": [
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "FilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addContentCategoryHasContentsFilter",
      "parent": "FilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Adds a content category has contents filter to the request ensuring that only categories with content in them are returned.\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The FilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "FilterOptions"
      ],
      "parameters": [
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "FilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addBrandDataHasKeyFilter",
      "parent": "FilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Adds a brand data has key filter to the request.\r\n     * @param key - Data key.\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The FilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "FilterOptions"
      ],
      "parameters": [
        {
          "name": "key",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "FilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addBrandDisabledFilter",
      "parent": "FilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Adds a brand is disabled filter to the request. Only works for brand queries, not in searches or recommendations.\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The FilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "FilterOptions"
      ],
      "parameters": [
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "FilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addCompanyDataHasKeyFilter",
      "parent": "FilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Adds a company data has key filter to the request.\r\n     * @param key - Data key.\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The FilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "FilterOptions"
      ],
      "parameters": [
        {
          "name": "key",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "FilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addCompanyDisabledFilter",
      "parent": "FilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Adds a company is disabled filter to the request. Only works for company queries, not in searches or recommendations.\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The FilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "FilterOptions"
      ],
      "parameters": [
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "FilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addVariantDataHasKeyFilter",
      "parent": "FilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Adds a variant data has key filter to the request.\r\n     * @param key - Data key.\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The FilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "FilterOptions"
      ],
      "parameters": [
        {
          "name": "key",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "FilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addVariantDisabledFilter",
      "parent": "FilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Adds a variant is disabled filter to the request. Only works for product queries, not in searches or recommendations.\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The FilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "FilterOptions"
      ],
      "parameters": [
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "FilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addContentCategoryDataHasKeyFilter",
      "parent": "FilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Adds a content category data has key filter to the request.\r\n     * @param key - Data key.\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The FilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "FilterOptions"
      ],
      "parameters": [
        {
          "name": "key",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "FilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addContentCategoryDisabledFilter",
      "parent": "FilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Adds a content category is disabled filter to the request. Only works for content queries, not in searches or recommendations.\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The FilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "FilterOptions"
      ],
      "parameters": [
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "FilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addContentCategoryRecentlyViewedByUserFilter",
      "parent": "FilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Adds a content category recently viewed by user filter to the request.\r\n     * @param sinceMinutesAgo - Time in minutes since the content category was viewed.\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The FilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "FilterOptions"
      ],
      "parameters": [
        {
          "name": "sinceMinutesAgo",
          "type": "number",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "FilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addContentDataHasKeyFilter",
      "parent": "FilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Adds a content data has key filter to the request.\r\n     * @param key - Data key.\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The FilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "FilterOptions"
      ],
      "parameters": [
        {
          "name": "key",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "FilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addContentDisabledFilter",
      "parent": "FilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Adds a content is disabled filter to the request. Only works for content queries, not in searches or recommendations.\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The FilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "FilterOptions"
      ],
      "parameters": [
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "FilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addContentRecentlyViewedByUserFilter",
      "parent": "FilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Adds a content recently viewed by user filter to the request.\r\n     * @param sinceMinutesAgo - Time in minutes since the content was viewed.\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The FilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "FilterOptions"
      ],
      "parameters": [
        {
          "name": "sinceMinutesAgo",
          "type": "number",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "FilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addContentHasCategoriesFilter",
      "parent": "FilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Adds a content has categories filter to the request.\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The FilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "FilterOptions"
      ],
      "parameters": [
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "FilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addProductDisabledFilter",
      "parent": "FilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Adds a product is disabled filter to the request. Only works for product queries, not in searches or recommendations.\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The FilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "FilterOptions"
      ],
      "parameters": [
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "FilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addProductDataHasKeyFilter",
      "parent": "FilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Adds a product data has key filter to the request.\r\n     * @param key - Data key.\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The FilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "FilterOptions"
      ],
      "parameters": [
        {
          "name": "key",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "FilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addProductHasCategoriesFilter",
      "parent": "FilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Adds a product has categories filter to the request.\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The FilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "FilterOptions"
      ],
      "parameters": [
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "FilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addProductRecentlyPurchasedByCompanyFilter",
      "parent": "FilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Adds a filter to only return products recently purchased by a company.\r\n     * @param sinceMinutesAgo - Time in minutes since the purchase.\r\n     * @param companyIds - Array of company IDs or a single ID.\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The FilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "FilterOptions"
      ],
      "parameters": [
        {
          "name": "sinceMinutesAgo",
          "type": "number",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "companyIds",
          "type": "string | string[]",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "FilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addProductRecentlyPurchasedByUserCompanyFilter",
      "parent": "FilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Adds a filter to only return products recently purchased by the user's company.\r\n     * @param sinceMinutesAgo - Time in minutes since the purchase.\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The FilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "FilterOptions"
      ],
      "parameters": [
        {
          "name": "sinceMinutesAgo",
          "type": "number",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "FilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addProductRecentlyPurchasedByUserParentCompanyFilter",
      "parent": "FilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Adds a filter to only return products recently purchased by the user's parent company.\r\n     * @param sinceMinutesAgo - Time in minutes since the purchase.\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The FilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "FilterOptions"
      ],
      "parameters": [
        {
          "name": "sinceMinutesAgo",
          "type": "number",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "FilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addProductRecentlyViewedByCompanyFilter",
      "parent": "FilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Adds a filter to only return products recently viewed by a company.\r\n     * @param sinceMinutesAgo - Time in minutes since the view.\r\n     * @param companyIds - Array of company IDs or a single ID.\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The FilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "FilterOptions"
      ],
      "parameters": [
        {
          "name": "sinceMinutesAgo",
          "type": "number",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "companyIds",
          "type": "string | string[]",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "FilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addProductRecentlyViewedByUserCompanyFilter",
      "parent": "FilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Adds a filter to only return products recently viewed by the user's company.\r\n     * @param sinceMinutesAgo - Time in minutes since the view.\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The FilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "FilterOptions"
      ],
      "parameters": [
        {
          "name": "sinceMinutesAgo",
          "type": "number",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "FilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addProductRecentlyViewedByUserParentCompanyFilter",
      "parent": "FilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Adds a filter to only return products recently viewed by the user's parent company.\r\n     * @param sinceMinutesAgo - Time in minutes since the view.\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The FilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "FilterOptions"
      ],
      "parameters": [
        {
          "name": "sinceMinutesAgo",
          "type": "number",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "FilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addProductInCartFilter",
      "parent": "FilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Adds a filter to only return products in the user's cart.\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The ProductFilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "FilterOptions"
      ],
      "parameters": [
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "FilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "reset",
      "parent": "FilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Resets all filters and filter builders.\r\n     * @returns The FilterBuilder instance for chaining.\r\n     */",
      "dependencies": [],
      "parameters": [],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "build",
      "parent": "FilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Builds and combines all filters into a FilterCollection.\r\n     * @returns The combined FilterCollection or null if no filters are set.\r\n     */",
      "dependencies": [],
      "parameters": [],
      "returnType": "FilterCollection | null",
      "isAsync": false
    },
    {
      "kind": "Class",
      "name": "FilterBuilder",
      "dependencies": [],
      "isAbstract": false,
      "isDefault": false,
      "properties": [],
      "extends": null
    },
    {
      "kind": "Method",
      "name": "fill",
      "parent": "FilterScopesBuilder",
      "parentKind": "Class",
      "dependencies": [
        "{ apply: boolean; }"
      ],
      "parameters": [
        {
          "name": "{ apply }",
          "type": "{ apply: boolean; }",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "default",
      "parent": "FilterScopesBuilder",
      "parentKind": "Class",
      "dependencies": [
        "{ apply: boolean; }"
      ],
      "parameters": [
        {
          "name": "{ apply }",
          "type": "{ apply: boolean; }",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "build",
      "parent": "FilterScopesBuilder",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": [],
      "returnType": "FilterScopes | null",
      "isAsync": false
    },
    {
      "kind": "Class",
      "name": "FilterScopesBuilder",
      "dependencies": [],
      "isAbstract": false,
      "isDefault": false,
      "properties": [],
      "extends": null
    },
    {
      "kind": "Method",
      "name": "scopes",
      "parent": "FilterSettingsBuilder",
      "parentKind": "Class",
      "dependencies": [
        "(builder: FilterScopesBuilder) => void"
      ],
      "parameters": [
        {
          "name": "builder",
          "type": "(builder: FilterScopesBuilder) => void",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "build",
      "parent": "FilterSettingsBuilder",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": [],
      "returnType": "FilterSettings | null",
      "isAsync": false
    },
    {
      "kind": "Class",
      "name": "FilterSettingsBuilder",
      "dependencies": [],
      "isAbstract": false,
      "isDefault": false,
      "properties": [],
      "extends": null
    },
    {
      "kind": "Method",
      "name": "setPageSize",
      "parent": "PaginationBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Defines how many results to return\r\n     * @param pageSize \r\n     * @returns \r\n     */",
      "dependencies": [],
      "parameters": [
        {
          "name": "pageSize",
          "type": "number",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "setPage",
      "parent": "PaginationBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Page starts at 1, so this to skip 'X' pages of results\r\n     * @param pageNumber \r\n     * @returns \r\n     */",
      "dependencies": [],
      "parameters": [
        {
          "name": "pageNumber",
          "type": "number",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "build",
      "parent": "PaginationBuilder",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": [],
      "returnType": "Pagination",
      "isAsync": false
    },
    {
      "kind": "Class",
      "name": "PaginationBuilder",
      "dependencies": [],
      "isAbstract": false,
      "isDefault": false,
      "properties": [],
      "extends": null
    },
    {
      "kind": "Method",
      "name": "addBrandIdRelevanceModifier",
      "parent": "RelevanceModifierBuilder",
      "parentKind": "Class",
      "dependencies": [
        "(builder: FilterBuilder) => void"
      ],
      "parameters": [
        {
          "name": "brandId",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "ifProductIsBrandMultiplyWeightBy",
          "type": "number",
          "nullable": false,
          "defaultValue": "1",
          "isReadonly": false
        },
        {
          "name": "ifProductIsNotBrandMultiplyWeightBy",
          "type": "number",
          "nullable": false,
          "defaultValue": "1",
          "isReadonly": false
        },
        {
          "name": "filter",
          "type": "(builder: FilterBuilder) => void",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addProductAssortmentRelevanceModifier",
      "parent": "RelevanceModifierBuilder",
      "parentKind": "Class",
      "dependencies": [
        "(builder: FilterBuilder) => void"
      ],
      "parameters": [
        {
          "name": "assortments",
          "type": "number[]",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "multiplyWeightBy",
          "type": "number",
          "nullable": false,
          "defaultValue": "1",
          "isReadonly": false
        },
        {
          "name": "filter",
          "type": "(builder: FilterBuilder) => void",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addVariantAssortmentRelevanceModifier",
      "parent": "RelevanceModifierBuilder",
      "parentKind": "Class",
      "dependencies": [
        "(builder: FilterBuilder) => void"
      ],
      "parameters": [
        {
          "name": "assortments",
          "type": "number[]",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "multiplyWeightBy",
          "type": "number",
          "nullable": false,
          "defaultValue": "1",
          "isReadonly": false
        },
        {
          "name": "filter",
          "type": "(builder: FilterBuilder) => void",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addProductCategoryIdRelevanceModifier",
      "parent": "RelevanceModifierBuilder",
      "parentKind": "Class",
      "dependencies": [
        "'ImmediateParent' | 'ImmediateParentOrItsParent' | 'Ancestor'",
        "(builder: FilterBuilder) => void"
      ],
      "parameters": [
        {
          "name": "categoryId",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "evaluationScope",
          "type": "'ImmediateParent' | 'ImmediateParentOrItsParent' | 'Ancestor'",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "multiplyWeightBy",
          "type": "number",
          "nullable": false,
          "defaultValue": "1",
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "filter",
          "type": "(builder: FilterBuilder) => void",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addProductDataRelevanceModifier",
      "parent": "RelevanceModifierBuilder",
      "parentKind": "Class",
      "dependencies": [
        "(builder: ConditionBuilder) => void",
        "DataDoubleSelector | FixedDoubleValueSelector",
        "(builder: FilterBuilder) => void"
      ],
      "parameters": [
        {
          "name": "key",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "conditions",
          "type": "(builder: ConditionBuilder) => void",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "multiplierSelector",
          "type": "DataDoubleSelector | FixedDoubleValueSelector",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "mustMatchAllConditions",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "true",
          "isReadonly": false
        },
        {
          "name": "considerAsMatchIfKeyIsNotFound",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "filter",
          "type": "(builder: FilterBuilder) => void",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addVariantDataRelevanceModifier",
      "parent": "RelevanceModifierBuilder",
      "parentKind": "Class",
      "dependencies": [
        "(builder: ConditionBuilder) => void",
        "DataDoubleSelector | FixedDoubleValueSelector",
        "(builder: FilterBuilder) => void"
      ],
      "parameters": [
        {
          "name": "key",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "conditions",
          "type": "(builder: ConditionBuilder) => void",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "multiplierSelector",
          "type": "DataDoubleSelector | FixedDoubleValueSelector",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "mustMatchAllConditions",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "true",
          "isReadonly": false
        },
        {
          "name": "considerAsMatchIfKeyIsNotFound",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "filter",
          "type": "(builder: FilterBuilder) => void",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addContentCategoryDataRelevanceModifier",
      "parent": "RelevanceModifierBuilder",
      "parentKind": "Class",
      "dependencies": [
        "(builder: ConditionBuilder) => void",
        "DataDoubleSelector | FixedDoubleValueSelector",
        "(builder: FilterBuilder) => void"
      ],
      "parameters": [
        {
          "name": "key",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "conditions",
          "type": "(builder: ConditionBuilder) => void",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "multiplierSelector",
          "type": "DataDoubleSelector | FixedDoubleValueSelector",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "mustMatchAllConditions",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "true",
          "isReadonly": false
        },
        {
          "name": "considerAsMatchIfKeyIsNotFound",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "filter",
          "type": "(builder: FilterBuilder) => void",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addContentDataRelevanceModifier",
      "parent": "RelevanceModifierBuilder",
      "parentKind": "Class",
      "dependencies": [
        "(builder: ConditionBuilder) => void",
        "DataDoubleSelector | FixedDoubleValueSelector",
        "(builder: FilterBuilder) => void"
      ],
      "parameters": [
        {
          "name": "key",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "conditions",
          "type": "(builder: ConditionBuilder) => void",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "multiplierSelector",
          "type": "DataDoubleSelector | FixedDoubleValueSelector",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "mustMatchAllConditions",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "true",
          "isReadonly": false
        },
        {
          "name": "considerAsMatchIfKeyIsNotFound",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "filter",
          "type": "(builder: FilterBuilder) => void",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addProductCategoryDataRelevanceModifier",
      "parent": "RelevanceModifierBuilder",
      "parentKind": "Class",
      "dependencies": [
        "(builder: ConditionBuilder) => void",
        "DataDoubleSelector | FixedDoubleValueSelector",
        "(builder: FilterBuilder) => void"
      ],
      "parameters": [
        {
          "name": "key",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "conditions",
          "type": "(builder: ConditionBuilder) => void",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "multiplierSelector",
          "type": "DataDoubleSelector | FixedDoubleValueSelector",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "mustMatchAllConditions",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "true",
          "isReadonly": false
        },
        {
          "name": "considerAsMatchIfKeyIsNotFound",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "filter",
          "type": "(builder: FilterBuilder) => void",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addVariantIdRelevanceModifier",
      "parent": "RelevanceModifierBuilder",
      "parentKind": "Class",
      "dependencies": [
        "(builder: FilterBuilder) => void"
      ],
      "parameters": [
        {
          "name": "variantIds",
          "type": "string[]",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "multiplyWeightBy",
          "type": "number",
          "nullable": false,
          "defaultValue": "1",
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "filter",
          "type": "(builder: FilterBuilder) => void",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addProductIdRelevanceModifier",
      "parent": "RelevanceModifierBuilder",
      "parentKind": "Class",
      "dependencies": [
        "(builder: FilterBuilder) => void"
      ],
      "parameters": [
        {
          "name": "productIds",
          "type": "string[]",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "multiplyWeightBy",
          "type": "number",
          "nullable": false,
          "defaultValue": "1",
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "filter",
          "type": "(builder: FilterBuilder) => void",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addProductListPriceRelevanceModifier",
      "parent": "RelevanceModifierBuilder",
      "parentKind": "Class",
      "dependencies": [
        "(builder: FilterBuilder) => void"
      ],
      "parameters": [
        {
          "name": "currency",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "lowerBound",
          "type": "number | null | undefined",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "upperBound",
          "type": "number | null | undefined",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "multiplyWeightBy",
          "type": "number",
          "nullable": false,
          "defaultValue": "1",
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "filter",
          "type": "(builder: FilterBuilder) => void",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addProductSalesPriceRelevanceModifier",
      "parent": "RelevanceModifierBuilder",
      "parentKind": "Class",
      "dependencies": [
        "(builder: FilterBuilder) => void"
      ],
      "parameters": [
        {
          "name": "currency",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "lowerBound",
          "type": "number | null | undefined",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "upperBound",
          "type": "number | null | undefined",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "multiplyWeightBy",
          "type": "number",
          "nullable": false,
          "defaultValue": "1",
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "filter",
          "type": "(builder: FilterBuilder) => void",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addVariantListPriceRelevanceModifier",
      "parent": "RelevanceModifierBuilder",
      "parentKind": "Class",
      "dependencies": [
        "(builder: FilterBuilder) => void"
      ],
      "parameters": [
        {
          "name": "currency",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "lowerBound",
          "type": "number | null | undefined",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "upperBound",
          "type": "number | null | undefined",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "multiplyWeightBy",
          "type": "number",
          "nullable": false,
          "defaultValue": "1",
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "filter",
          "type": "(builder: FilterBuilder) => void",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addVariantSalesPriceRelevanceModifier",
      "parent": "RelevanceModifierBuilder",
      "parentKind": "Class",
      "dependencies": [
        "(builder: FilterBuilder) => void"
      ],
      "parameters": [
        {
          "name": "currency",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "lowerBound",
          "type": "number | null | undefined",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "upperBound",
          "type": "number | null | undefined",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "multiplyWeightBy",
          "type": "number",
          "nullable": false,
          "defaultValue": "1",
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "filter",
          "type": "(builder: FilterBuilder) => void",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addVariantSpecificationsInCommonRelevanceModifier",
      "parent": "RelevanceModifierBuilder",
      "parentKind": "Class",
      "dependencies": [
        "{ key: string, multiplier: number }[]",
        "(builder: FilterBuilder) => void"
      ],
      "parameters": [
        {
          "name": "specificationKeysAndMultipliers",
          "type": "{ key: string, multiplier: number }[]",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "filter",
          "type": "(builder: FilterBuilder) => void",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addVariantSpecificationValueRelevanceModifier",
      "parent": "RelevanceModifierBuilder",
      "parentKind": "Class",
      "dependencies": [
        "(builder: FilterBuilder) => void"
      ],
      "parameters": [
        {
          "name": "key",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "value",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "ifIdenticalMultiplyWeightBy",
          "type": "number",
          "nullable": false,
          "defaultValue": "1",
          "isReadonly": false
        },
        {
          "name": "ifNotIdenticalMultiplyWeightBy",
          "type": "number",
          "nullable": false,
          "defaultValue": "0",
          "isReadonly": false
        },
        {
          "name": "ifSpecificationKeyNotFoundApplyNotEqualMultiplier",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "filter",
          "type": "(builder: FilterBuilder) => void",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addProductRecentlyPurchasedByUserRelevanceModifier",
      "parent": "RelevanceModifierBuilder",
      "parentKind": "Class",
      "dependencies": [
        "(builder: FilterBuilder) => void"
      ],
      "parameters": [
        {
          "name": "sinceUtc",
          "type": "Date",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "ifNotPreviouslyPurchasedByUserMultiplyWeightBy",
          "type": "number",
          "nullable": false,
          "defaultValue": "1",
          "isReadonly": false
        },
        {
          "name": "ifPreviouslyPurchasedByUserMultiplyWeightBy",
          "type": "number",
          "nullable": false,
          "defaultValue": "1",
          "isReadonly": false
        },
        {
          "name": "filter",
          "type": "(builder: FilterBuilder) => void",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addProductRecentlyPurchasedByCompanyRelevanceModifier",
      "parent": "RelevanceModifierBuilder",
      "parentKind": "Class",
      "dependencies": [
        "(builder: FilterBuilder) => void"
      ],
      "parameters": [
        {
          "name": "sinceMinutesAgo",
          "type": "number",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "companyIds",
          "type": "string[]",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "ifPurchasedByCompanyMultiplyWeightBy",
          "type": "number",
          "nullable": false,
          "defaultValue": "1",
          "isReadonly": false
        },
        {
          "name": "elseIfNotPurchasedByCompanyMultiplyWeightBy",
          "type": "number",
          "nullable": false,
          "defaultValue": "1",
          "isReadonly": false
        },
        {
          "name": "filter",
          "type": "(builder: FilterBuilder) => void",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addProductRecentlyPurchasedByUserCompanyRelevanceModifier",
      "parent": "RelevanceModifierBuilder",
      "parentKind": "Class",
      "dependencies": [
        "(builder: FilterBuilder) => void"
      ],
      "parameters": [
        {
          "name": "sinceMinutesAgo",
          "type": "number",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "ifPurchasedByCompanyMultiplyWeightBy",
          "type": "number",
          "nullable": false,
          "defaultValue": "1",
          "isReadonly": false
        },
        {
          "name": "elseIfPurchasedByParentCompanyMultiplyWeightBy",
          "type": "number",
          "nullable": false,
          "defaultValue": "1",
          "isReadonly": false
        },
        {
          "name": "elseIfNotPurchasedByEitherCompanyMultiplyWeightBy",
          "type": "number",
          "nullable": false,
          "defaultValue": "1",
          "isReadonly": false
        },
        {
          "name": "filter",
          "type": "(builder: FilterBuilder) => void",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addProductRecentlyViewedByUserRelevanceModifier",
      "parent": "RelevanceModifierBuilder",
      "parentKind": "Class",
      "dependencies": [
        "(builder: FilterBuilder) => void"
      ],
      "parameters": [
        {
          "name": "sinceUtc",
          "type": "Date",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "ifNotPreviouslyViewedByUserMultiplyWeightBy",
          "type": "number",
          "nullable": false,
          "defaultValue": "1",
          "isReadonly": false
        },
        {
          "name": "ifPreviouslyViewedByUserMultiplyWeightBy",
          "type": "number",
          "nullable": false,
          "defaultValue": "1",
          "isReadonly": false
        },
        {
          "name": "filter",
          "type": "(builder: FilterBuilder) => void",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addProductRecentlyViewedByCompanyRelevanceModifier",
      "parent": "RelevanceModifierBuilder",
      "parentKind": "Class",
      "dependencies": [
        "(builder: FilterBuilder) => void"
      ],
      "parameters": [
        {
          "name": "sinceMinutesAgo",
          "type": "number",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "companyIds",
          "type": "string[]",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "ifViewedByCompanyMultiplyWeightBy",
          "type": "number",
          "nullable": false,
          "defaultValue": "1",
          "isReadonly": false
        },
        {
          "name": "elseIfNotViewedByCompanyMultiplyWeightBy",
          "type": "number",
          "nullable": false,
          "defaultValue": "1",
          "isReadonly": false
        },
        {
          "name": "filter",
          "type": "(builder: FilterBuilder) => void",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addProductRecentlyViewedByUserCompanyRelevanceModifier",
      "parent": "RelevanceModifierBuilder",
      "parentKind": "Class",
      "dependencies": [
        "(builder: FilterBuilder) => void"
      ],
      "parameters": [
        {
          "name": "sinceMinutesAgo",
          "type": "number",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "ifViewedByUserCompanyMultiplyWeightBy",
          "type": "number",
          "nullable": false,
          "defaultValue": "1",
          "isReadonly": false
        },
        {
          "name": "elseIfViewedByUserParentCompanyMultiplyWeightBy",
          "type": "number",
          "nullable": false,
          "defaultValue": "1",
          "isReadonly": false
        },
        {
          "name": "elseIfNotViewedByEitherCompanyMultiplyWeightBy",
          "type": "number",
          "nullable": false,
          "defaultValue": "1",
          "isReadonly": false
        },
        {
          "name": "filter",
          "type": "(builder: FilterBuilder) => void",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addProductCategoryRecentlyViewedByUserRelevanceModifier",
      "parent": "RelevanceModifierBuilder",
      "parentKind": "Class",
      "dependencies": [
        "(builder: FilterBuilder) => void"
      ],
      "parameters": [
        {
          "name": "sinceUtc",
          "type": "Date",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "ifNotPreviouslyViewedByUserMultiplyWeightBy",
          "type": "number",
          "nullable": false,
          "defaultValue": "1",
          "isReadonly": false
        },
        {
          "name": "ifPreviouslyViewedByUserMultiplyWeightBy",
          "type": "number",
          "nullable": false,
          "defaultValue": "1",
          "isReadonly": false
        },
        {
          "name": "filter",
          "type": "(builder: FilterBuilder) => void",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addContentRecentlyViewedByUserRelevanceModifier",
      "parent": "RelevanceModifierBuilder",
      "parentKind": "Class",
      "dependencies": [
        "(builder: FilterBuilder) => void"
      ],
      "parameters": [
        {
          "name": "sinceUtc",
          "type": "Date",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "ifNotPreviouslyViewedByUserMultiplyWeightBy",
          "type": "number",
          "nullable": false,
          "defaultValue": "1",
          "isReadonly": false
        },
        {
          "name": "ifPreviouslyViewedByUserMultiplyWeightBy",
          "type": "number",
          "nullable": false,
          "defaultValue": "1",
          "isReadonly": false
        },
        {
          "name": "filter",
          "type": "(builder: FilterBuilder) => void",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addContentCategoryRecentlyViewedByUserRelevanceModifier",
      "parent": "RelevanceModifierBuilder",
      "parentKind": "Class",
      "dependencies": [
        "(builder: FilterBuilder) => void"
      ],
      "parameters": [
        {
          "name": "sinceUtc",
          "type": "Date",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "ifNotPreviouslyViewedByUserMultiplyWeightBy",
          "type": "number",
          "nullable": false,
          "defaultValue": "1",
          "isReadonly": false
        },
        {
          "name": "ifPreviouslyViewedByUserMultiplyWeightBy",
          "type": "number",
          "nullable": false,
          "defaultValue": "1",
          "isReadonly": false
        },
        {
          "name": "filter",
          "type": "(builder: FilterBuilder) => void",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addUserFavoriteProductRelevanceModifier",
      "parent": "RelevanceModifierBuilder",
      "parentKind": "Class",
      "dependencies": [
        "(builder: FilterBuilder) => void"
      ],
      "parameters": [
        {
          "name": "sinceMinutesAgo",
          "type": "number",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "ifNotPurchasedBaseWeight",
          "type": "number",
          "nullable": false,
          "defaultValue": "1",
          "isReadonly": false
        },
        {
          "name": "mostRecentPurchaseWeight",
          "type": "number",
          "nullable": false,
          "defaultValue": "1",
          "isReadonly": false
        },
        {
          "name": "numberOfPurchasesWeight",
          "type": "number",
          "nullable": false,
          "defaultValue": "1",
          "isReadonly": false
        },
        {
          "name": "filter",
          "type": "(builder: FilterBuilder) => void",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "build",
      "parent": "RelevanceModifierBuilder",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": [],
      "returnType": "RelevanceModifierCollection | null",
      "isAsync": false
    },
    {
      "kind": "Class",
      "name": "RelevanceModifierBuilder",
      "dependencies": [],
      "isAbstract": false,
      "isDefault": false,
      "properties": [],
      "extends": null
    },
    {
      "kind": "Method",
      "name": "string",
      "parent": "DataValueFactory",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": [
        {
          "name": "value",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "StringDataValue",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "stringCollection",
      "parent": "DataValueFactory",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": [
        {
          "name": "collection",
          "type": "string[]",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "StringCollectionDataValue",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "number",
      "parent": "DataValueFactory",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": [
        {
          "name": "value",
          "type": "number",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "NumberDataValue",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "doubleCollection",
      "parent": "DataValueFactory",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": [
        {
          "name": "collection",
          "type": "number[]",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "DoubleCollectionDataValue",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "boolean",
      "parent": "DataValueFactory",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": [
        {
          "name": "value",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "BooleanDataValue",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "booleanCollection",
      "parent": "DataValueFactory",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": [
        {
          "name": "collection",
          "type": "boolean[]",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "BooleanCollectionDataValue",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "multiCurrency",
      "parent": "DataValueFactory",
      "parentKind": "Class",
      "dependencies": [
        "{ amount: number, currency: string }[]"
      ],
      "parameters": [
        {
          "name": "values",
          "type": "{ amount: number, currency: string }[]",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "MultiCurrencyDataValue",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "multilingual",
      "parent": "DataValueFactory",
      "parentKind": "Class",
      "dependencies": [
        "{ value: string, language: string }[]"
      ],
      "parameters": [
        {
          "name": "values",
          "type": "{ value: string, language: string }[]",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "MultilingualDataValue",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "multilingualCollection",
      "parent": "DataValueFactory",
      "parentKind": "Class",
      "dependencies": [
        "{ values: string[], language: string }[]"
      ],
      "parameters": [
        {
          "name": "values",
          "type": "{ values: string[], language: string }[]",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "MultilingualCollectionDataValue",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "object",
      "parent": "DataValueFactory",
      "parentKind": "Class",
      "dependencies": [
        "{ [key: string]: DataValue }"
      ],
      "parameters": [
        {
          "name": "data",
          "type": "{ [key: string]: DataValue }",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "ObjectDataValue",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "objectCollection",
      "parent": "DataValueFactory",
      "parentKind": "Class",
      "dependencies": [
        "{ [key: string]: DataValue }[]"
      ],
      "parameters": [
        {
          "name": "objects",
          "type": "{ [key: string]: DataValue }[]",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "ObjectCollectionDataValue",
      "isAsync": false
    },
    {
      "kind": "Class",
      "name": "DataValueFactory",
      "dependencies": [],
      "isAbstract": false,
      "isDefault": false,
      "properties": [],
      "extends": null
    },
    {
      "kind": "Method",
      "name": "anonymous",
      "parent": "UserFactory",
      "parentKind": "Class",
      "dependencies": [
        "PartialUser<'temporaryId'|'fingerprint'|'authenticatedId'>"
      ],
      "parameters": [
        {
          "name": "user",
          "type": "PartialUser<'temporaryId'|'fingerprint'|'authenticatedId'>",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "User",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "byAuthenticatedId",
      "parent": "UserFactory",
      "parentKind": "Class",
      "dependencies": [
        "PartialUser<'temporaryId'|'authenticatedId'>"
      ],
      "parameters": [
        {
          "name": "authenticatedId",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "temporaryId",
          "type": "string",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "user",
          "type": "PartialUser<'temporaryId'|'authenticatedId'>",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "User",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "byTemporaryId",
      "parent": "UserFactory",
      "parentKind": "Class",
      "dependencies": [
        "PartialUser<'temporaryId'>"
      ],
      "parameters": [
        {
          "name": "temporaryId",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "user",
          "type": "PartialUser<'temporaryId'>",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "User",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "byIdentifier",
      "parent": "UserFactory",
      "parentKind": "Class",
      "dependencies": [
        "PartialUser<'identifiers'>"
      ],
      "parameters": [
        {
          "name": "key",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "value",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "user",
          "type": "PartialUser<'identifiers'>",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "User",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "byIdentifiers",
      "parent": "UserFactory",
      "parentKind": "Class",
      "dependencies": [
        "Record<string, string>",
        "PartialUser<'identifiers'>"
      ],
      "parameters": [
        {
          "name": "identifiers",
          "type": "Record<string, string>",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "user",
          "type": "PartialUser<'identifiers'>",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "User",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "byEmail",
      "parent": "UserFactory",
      "parentKind": "Class",
      "dependencies": [
        "PartialUser<'email'>"
      ],
      "parameters": [
        {
          "name": "email",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "user",
          "type": "PartialUser<'email'>",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "User",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "byFingerprint",
      "parent": "UserFactory",
      "parentKind": "Class",
      "dependencies": [
        "PartialUser<'fingerprint'>"
      ],
      "parameters": [
        {
          "name": "fingerprint",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "user",
          "type": "PartialUser<'fingerprint'>",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "User",
      "isAsync": false
    },
    {
      "kind": "Class",
      "name": "UserFactory",
      "dependencies": [],
      "isAbstract": false,
      "isDefault": false,
      "properties": [],
      "extends": null
    },
    {
      "kind": "Method",
      "name": "dataDoubleSelector",
      "parent": "ValueSelectorFactory",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": [
        {
          "name": "key",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "DataDoubleSelector",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "fixedDoubleValueSelector",
      "parent": "ValueSelectorFactory",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": [
        {
          "name": "value",
          "type": "number",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "FixedDoubleValueSelector",
      "isAsync": false
    },
    {
      "kind": "Class",
      "name": "ValueSelectorFactory",
      "dependencies": [],
      "isAbstract": false,
      "isDefault": false,
      "properties": [],
      "extends": null
    },
    {
      "kind": "Interface",
      "name": "AbandonedCartTriggerResultTriggerConfiguration",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "custom",
          "type": "Record<string, string | null>",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "id",
          "type": "string",
          "docs": "/** @format uuid */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "name",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "description",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "group",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "enabled",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "created",
          "type": "string",
          "docs": "/** @format date-time */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "createdBy",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "modified",
          "type": "string",
          "docs": "/** @format date-time */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "modifiedBy",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "withinTimeSpanMinutes",
          "type": "number",
          "docs": "/** @format int32 */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "settings",
          "type": "Record<string, string | null>",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "userConditions",
          "type": "UserConditionCollection | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "AbandonedSearchTriggerResultTriggerConfiguration",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "custom",
          "type": "Record<string, string | null>",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "id",
          "type": "string",
          "docs": "/** @format uuid */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "name",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "description",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "group",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "enabled",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "created",
          "type": "string",
          "docs": "/** @format date-time */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "createdBy",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "modified",
          "type": "string",
          "docs": "/** @format date-time */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "modifiedBy",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "withinTimeSpanMinutes",
          "type": "number",
          "docs": "/** @format int32 */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "settings",
          "type": "Record<string, string | null>",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "userConditions",
          "type": "UserConditionCollection | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "AdvertiserAdvertiserEntityStateEntityResponse",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "entities",
          "type": "Advertiser[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "hits",
          "type": "number",
          "docs": "/** @format int32 */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "hitsPerState",
          "type": "{\r\n    /** @format int32 */\r\n    Active: number;\r\n    /** @format int32 */\r\n    Inactive: number;\r\n    /** @format int32 */\r\n    Archived: number;\r\n  } | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "statistics",
          "type": "Statistics | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "AdvertiserEntityStateAdvertiserMetadataValuesAdvertisersRequestSortByAdvertisersRequestEntityFiltersEntitiesRequest",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "filters",
          "type": "AdvertisersRequestEntityFilters | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "sorting",
          "type": "AdvertisersRequestSortBySorting | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "skip",
          "type": "number",
          "docs": "/** @format int32 */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "take",
          "type": "number",
          "docs": "/** @format int32 */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "custom",
          "type": "Record<string, string | null>",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "AdvertiserEntityStateAdvertiserMetadataValuesRetailMediaEntity",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "state",
          "type": "\"Active\" | \"Inactive\" | \"Archived\"",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "metadata",
          "type": "AdvertiserMetadataValues",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "id",
          "type": "string | null",
          "docs": "/** @format uuid */",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "AdvertiserSaveEntitiesRequest",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "entities",
          "type": "Advertiser[]",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "modifiedBy",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "custom",
          "type": "Record<string, string | null>",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "AdvertiserSaveEntitiesResponse",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "entities",
          "type": "Advertiser[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "statistics",
          "type": "Statistics | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "AdvertisersRequestSortBySorting",
      "extends": [],
      "properties": [
        {
          "name": "sortBy",
          "type": "\"Created\" | \"Modified\" | \"Name\"",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "sortOrder",
          "type": "\"Ascending\" | \"Descending\"",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "AnalyzerRequest",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "language",
          "type": "Language | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "currency",
          "type": "Currency | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "custom",
          "type": "Record<string, string | null>",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "ApplicableIndexes",
      "extends": [],
      "properties": [
        {
          "name": "indexes",
          "type": "string[] | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "ApplicableLanguages",
      "extends": [],
      "properties": [
        {
          "name": "languages",
          "type": "Language[] | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "AssortmentFacet",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "assortmentFilterType",
          "type": "\"Or\"",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "selected",
          "type": "number[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "field",
          "type": "\"Category\" | \"Assortment\" | \"ListPrice\" | \"SalesPrice\" | \"Brand\" | \"Data\" | \"VariantSpecification\" | \"User\"",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "settings",
          "type": "FacetSettings | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "AssortmentFacetResult",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "assortmentFilterType",
          "type": "\"Or\"",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "selected",
          "type": "number[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "available",
          "type": "Int32AvailableFacetValue[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "field",
          "type": "\"Category\" | \"Assortment\" | \"ListPrice\" | \"SalesPrice\" | \"Brand\" | \"Data\" | \"VariantSpecification\" | \"User\"",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "BooleanAvailableFacetValue",
      "extends": [],
      "properties": [
        {
          "name": "value",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "hits",
          "type": "number",
          "docs": "/** @format int32 */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "selected",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "BooleanBooleanValueFacetResult",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "selected",
          "type": "boolean[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "available",
          "type": "BooleanAvailableFacetValue[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "field",
          "type": "\"Category\" | \"Assortment\" | \"ListPrice\" | \"SalesPrice\" | \"Brand\" | \"Data\" | \"VariantSpecification\" | \"User\"",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "BooleanContentDataValueFacet",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "key",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "collectionFilterType",
          "type": "\"Or\" | \"And\" | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "selected",
          "type": "boolean[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "field",
          "type": "\"Category\" | \"Assortment\" | \"ListPrice\" | \"SalesPrice\" | \"Brand\" | \"Data\" | \"VariantSpecification\" | \"User\"",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "settings",
          "type": "FacetSettings | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "BooleanContentDataValueFacetResult",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "key",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "collectionFilterType",
          "type": "\"Or\" | \"And\" | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "selected",
          "type": "boolean[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "available",
          "type": "BooleanAvailableFacetValue[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "field",
          "type": "\"Category\" | \"Assortment\" | \"ListPrice\" | \"SalesPrice\" | \"Brand\" | \"Data\" | \"VariantSpecification\" | \"User\"",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "BooleanDataObjectValueFacet",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "key",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "collectionFilterType",
          "type": "\"Or\" | \"And\" | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "selected",
          "type": "boolean[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "field",
          "type": "\"Category\" | \"Assortment\" | \"ListPrice\" | \"SalesPrice\" | \"Brand\" | \"Data\" | \"VariantSpecification\" | \"User\"",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "settings",
          "type": "FacetSettings | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "BooleanDataObjectValueFacetResult",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "key",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "collectionFilterType",
          "type": "\"Or\" | \"And\" | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "selected",
          "type": "boolean[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "available",
          "type": "BooleanAvailableFacetValue[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "field",
          "type": "\"Category\" | \"Assortment\" | \"ListPrice\" | \"SalesPrice\" | \"Brand\" | \"Data\" | \"VariantSpecification\" | \"User\"",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "BooleanProductCategoryDataValueFacet",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "key",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "collectionFilterType",
          "type": "\"Or\" | \"And\" | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "selected",
          "type": "boolean[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "field",
          "type": "\"Category\" | \"Assortment\" | \"ListPrice\" | \"SalesPrice\" | \"Brand\" | \"Data\" | \"VariantSpecification\" | \"User\"",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "settings",
          "type": "FacetSettings | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "BooleanProductCategoryDataValueFacetResult",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "key",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "collectionFilterType",
          "type": "\"Or\" | \"And\" | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "selected",
          "type": "boolean[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "available",
          "type": "BooleanAvailableFacetValue[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "field",
          "type": "\"Category\" | \"Assortment\" | \"ListPrice\" | \"SalesPrice\" | \"Brand\" | \"Data\" | \"VariantSpecification\" | \"User\"",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "BooleanProductDataValueFacet",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "dataSelectionStrategy",
          "type": "\"Product\" | \"Variant\" | \"VariantWithFallbackToProduct\" | \"ProductWithFallbackToVariant\"",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "key",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "collectionFilterType",
          "type": "\"Or\" | \"And\" | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "selected",
          "type": "boolean[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "field",
          "type": "\"Category\" | \"Assortment\" | \"ListPrice\" | \"SalesPrice\" | \"Brand\" | \"Data\" | \"VariantSpecification\" | \"User\"",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "settings",
          "type": "FacetSettings | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "BooleanProductDataValueFacetResult",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "dataSelectionStrategy",
          "type": "\"Product\" | \"Variant\" | \"VariantWithFallbackToProduct\" | \"ProductWithFallbackToVariant\"",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "key",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "collectionFilterType",
          "type": "\"Or\" | \"And\" | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "selected",
          "type": "boolean[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "available",
          "type": "BooleanAvailableFacetValue[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "field",
          "type": "\"Category\" | \"Assortment\" | \"ListPrice\" | \"SalesPrice\" | \"Brand\" | \"Data\" | \"VariantSpecification\" | \"User\"",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "BooleanValueFacet",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "selected",
          "type": "boolean[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "field",
          "type": "\"Category\" | \"Assortment\" | \"ListPrice\" | \"SalesPrice\" | \"Brand\" | \"Data\" | \"VariantSpecification\" | \"User\"",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "settings",
          "type": "FacetSettings | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "Brand",
      "extends": [],
      "properties": [
        {
          "name": "id",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "displayName",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "assortments",
          "type": "number[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "data",
          "type": "Record<string, DataValue>",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "BrandIndexConfiguration",
      "extends": [],
      "properties": [
        {
          "name": "id",
          "type": "FieldIndexConfiguration | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "displayName",
          "type": "FieldIndexConfiguration | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "BrandNameAndIdResult",
      "extends": [],
      "properties": [
        {
          "name": "id",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "displayName",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "BrandNameAndIdResultAvailableFacetValue",
      "extends": [],
      "properties": [
        {
          "name": "value",
          "type": "BrandNameAndIdResult | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "hits",
          "type": "number",
          "docs": "/** @format int32 */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "selected",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "BrandRecommendationRequest",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "settings",
          "type": "BrandRecommendationRequestSettings",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "language",
          "type": "Language | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "user",
          "type": "User | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "relevanceModifiers",
          "type": "RelevanceModifierCollection",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "filters",
          "type": "FilterCollection",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "displayedAtLocationType",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "currency",
          "type": "Currency | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "channel",
          "type": "Channel | null",
          "docs": "/** @deprecated */",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "custom",
          "type": "Record<string, string | null>",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "BrandRecommendationRequestSettings",
      "extends": [],
      "properties": [
        {
          "name": "numberOfRecommendations",
          "type": "number",
          "docs": "/** @format int32 */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "allowFillIfNecessaryToReachNumberOfRecommendations",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "allowReplacingOfRecentlyShownRecommendations",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "prioritizeDiversityBetweenRequests",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "selectedBrandProperties",
          "type": "SelectedBrandPropertiesSettings | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "custom",
          "type": "Record<string, string>",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "prioritizeResultsNotRecommendedWithinSeconds",
          "type": "number | null",
          "docs": "/** @format int32 */",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "BrandRecommendationWeights",
      "extends": [],
      "properties": [
        {
          "name": "brandViews",
          "type": "number",
          "docs": "/** @format double */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "productViews",
          "type": "number",
          "docs": "/** @format double */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "productPurchases",
          "type": "number",
          "docs": "/** @format double */",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "BrandResult",
      "extends": [],
      "properties": [
        {
          "name": "id",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "displayName",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "rank",
          "type": "number",
          "docs": "/** @format int32 */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "viewedByUser",
          "type": "ViewedByUserInfo | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "assortments",
          "type": "number[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "data",
          "type": "Record<string, DataValue>",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "custom",
          "type": "Record<string, string | null>",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "BrandResultDetails",
      "extends": [],
      "properties": [
        {
          "name": "brandId",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "displayName",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "assortments",
          "type": "number[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "data",
          "type": "Record<string, DataValue>",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "viewedByUser",
          "type": "ViewedByUserInfo | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "createdUtc",
          "type": "string",
          "docs": "/** @format date-time */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "lastViewedUtc",
          "type": "string | null",
          "docs": "/** @format date-time */",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "viewedTotalNumberOfTimes",
          "type": "number",
          "docs": "/** @format int64 */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "viewedByDifferentNumberOfUsers",
          "type": "number",
          "docs": "/** @format int32 */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "disabled",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "custom",
          "type": "Record<string, string | null>",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "purchasedFromByDifferentNumberOfUsers",
          "type": "number",
          "docs": "/** @format int32 */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "purchasedByUser",
          "type": "PurchasedByUserInfo | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "Budget",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "maxTotalCost",
          "type": "number | null",
          "docs": "/** @format double */",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "totalCost",
          "type": "number",
          "docs": "/** @format double */",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "CampaignAnalytics",
      "extends": [],
      "properties": [
        {
          "name": "products",
          "type": "CampaignAnalyticsProductAnalytics | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "CampaignAnalyticsProductAnalytics",
      "extends": [],
      "properties": [
        {
          "name": "timeSeries",
          "type": "CampaignAnalyticsProductAnalyticsPeriodMetrics[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "promotions",
          "type": "number",
          "docs": "/** @format int32 */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "promotedProducts",
          "type": "CampaignAnalyticsProductAnalyticsPromotedProductMetrics[] | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "CampaignAnalyticsProductAnalyticsPeriodMetrics",
      "extends": [],
      "properties": [
        {
          "name": "periodFromUtc",
          "type": "string",
          "docs": "/** @format date-time */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "views",
          "type": "number",
          "docs": "/** @format int32 */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "salesQuantity",
          "type": "number",
          "docs": "/** @format int32 */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "currencies",
          "type": "CampaignAnalyticsProductAnalyticsPeriodMetricsCurrencyMetrics[] | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "CampaignAnalyticsProductAnalyticsPeriodMetricsCurrencyMetrics",
      "extends": [],
      "properties": [
        {
          "name": "currency",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "revenue",
          "type": "number",
          "docs": "/** @format double */",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "CampaignAnalyticsProductAnalyticsPromotedProductMetrics",
      "extends": [],
      "properties": [
        {
          "name": "productId",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "promotions",
          "type": "number",
          "docs": "/** @format int32 */",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "CampaignCampaignEntityStateEntityResponse",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "entities",
          "type": "Campaign[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "hits",
          "type": "number",
          "docs": "/** @format int32 */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "hitsPerState",
          "type": "{\r\n    /** @format int32 */\r\n    Proposed: number;\r\n    /** @format int32 */\r\n    Approved: number;\r\n    /** @format int32 */\r\n    Archived: number;\r\n  } | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "statistics",
          "type": "Statistics | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "CampaignEntityStateCampaignMetadataValuesCampaignsRequestSortByCampaignsRequestEntityFiltersEntitiesRequest",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "filters",
          "type": "CampaignsRequestEntityFilters | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "sorting",
          "type": "CampaignsRequestSortBySorting | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "skip",
          "type": "number",
          "docs": "/** @format int32 */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "take",
          "type": "number",
          "docs": "/** @format int32 */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "custom",
          "type": "Record<string, string | null>",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "CampaignEntityStateCampaignMetadataValuesRetailMediaEntity",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "state",
          "type": "\"Proposed\" | \"Approved\" | \"Archived\"",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "metadata",
          "type": "CampaignMetadataValues",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "id",
          "type": "string | null",
          "docs": "/** @format uuid */",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "CampaignSaveEntitiesRequest",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "entities",
          "type": "Campaign[]",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "modifiedBy",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "custom",
          "type": "Record<string, string | null>",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "CampaignSaveEntitiesResponse",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "entities",
          "type": "Campaign[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "statistics",
          "type": "Statistics | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "CampaignStatusWithHistory",
      "extends": [],
      "properties": [
        {
          "name": "current",
          "type": "\"Active\" | \"Inactive\" | \"ScheduleCompleted\" | \"BudgetReached\"",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "history",
          "type": "CampaignStatusWithHistoryChange[]",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "CampaignStatusWithHistoryChange",
      "extends": [],
      "properties": [
        {
          "name": "utcTime",
          "type": "string",
          "docs": "/** @format date-time */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "status",
          "type": "\"Active\" | \"Inactive\" | \"ScheduleCompleted\" | \"BudgetReached\"",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "CampaignsRequestSortBySorting",
      "extends": [],
      "properties": [
        {
          "name": "sortBy",
          "type": "\"Created\" | \"Modified\" | \"Name\"",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "sortOrder",
          "type": "\"Ascending\" | \"Descending\"",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "CartDetails",
      "extends": [],
      "properties": [
        {
          "name": "name",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "modifiedUtc",
          "type": "string",
          "docs": "/** @format date-time */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "lineItems",
          "type": "LineItem[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "subtotal",
          "type": "Money | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "data",
          "type": "Record<string, DataValue>",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "Category",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "id",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "displayName",
          "type": "Multilingual | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "categoryPaths",
          "type": "CategoryPath[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "assortments",
          "type": "number[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "data",
          "type": "Record<string, DataValue>",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "custom",
          "type": "Record<string, string | null>",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "CategoryAdministrativeAction",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "filters",
          "type": "FilterCollection",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "language",
          "type": "Language | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "kind",
          "type": "\"Disable\" | \"Enable\" | \"Delete\"",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "currency",
          "type": "Currency | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "custom",
          "type": "Record<string, string | null>",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "CategoryHierarchyFacetResultCategoryNode",
      "extends": [],
      "properties": [
        {
          "name": "category",
          "type": "ContentCategoryResult | ProductCategoryResult",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "hits",
          "type": "number",
          "docs": "/** @format int32 */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "parentId",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "children",
          "type": "CategoryHierarchyFacetResultCategoryNode[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "selected",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "CategoryIdFilter",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "categoryIds",
          "type": "string[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "evaluationScope",
          "type": "\"ImmediateParent\" | \"ImmediateParentOrItsParent\" | \"Ancestor\"",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "custom",
          "type": "Record<string, string>",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "settings",
          "type": "FilterSettings | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "CategoryIndexConfiguration",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "unspecified",
          "type": "CategoryIndexConfigurationEntry | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "CategoryIndexConfigurationEntry",
      "extends": [],
      "properties": [
        {
          "name": "id",
          "type": "FieldIndexConfiguration | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "displayName",
          "type": "FieldIndexConfiguration | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "data",
          "type": "DataIndexConfiguration | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "CategoryLevelFilter",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "levels",
          "type": "number[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "custom",
          "type": "Record<string, string>",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "settings",
          "type": "FilterSettings | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "CategoryNameAndId",
      "extends": [],
      "properties": [
        {
          "name": "id",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "displayName",
          "type": "Multilingual | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "CategoryNameAndIdResult",
      "extends": [],
      "properties": [
        {
          "name": "id",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "displayName",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "CategoryNameAndIdResultAvailableFacetValue",
      "extends": [],
      "properties": [
        {
          "name": "value",
          "type": "CategoryNameAndIdResult | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "hits",
          "type": "number",
          "docs": "/** @format int32 */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "selected",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "CategoryPath",
      "extends": [],
      "properties": [
        {
          "name": "breadcrumbPathStartingFromRoot",
          "type": "CategoryNameAndId[]",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "CategoryPathResult",
      "extends": [],
      "properties": [
        {
          "name": "pathFromRoot",
          "type": "CategoryNameAndIdResult[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "rank",
          "type": "number",
          "docs": "/** @format int32 */",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "CategoryPathResultDetails",
      "extends": [],
      "properties": [
        {
          "name": "breadcrumbPathStartingFromRoot",
          "type": "CategoryNameAndId[] | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "CategoryPathValueFacet",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "selected",
          "type": "CategoryPath[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "field",
          "type": "\"Category\" | \"Assortment\" | \"ListPrice\" | \"SalesPrice\" | \"Brand\" | \"Data\" | \"VariantSpecification\" | \"User\"",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "settings",
          "type": "FacetSettings | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "CategoryResult",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "categoryId",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "displayName",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "rank",
          "type": "number",
          "docs": "/** @format int32 */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "viewedByUser",
          "type": "ViewedByUserInfo | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "paths",
          "type": "CategoryPathResult[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "assortments",
          "type": "number[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "data",
          "type": "Record<string, DataValue>",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "custom",
          "type": "Record<string, string | null>",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "CategoryUpdate",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "kind",
          "type": "\"UpdateAndAppend\" | \"ReplaceProvidedProperties\" | \"ClearAndReplace\"",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "custom",
          "type": "Record<string, string | null>",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "Channel",
      "extends": [],
      "properties": [
        {
          "name": "name",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "subChannel",
          "type": "Channel | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "Company",
      "extends": [],
      "properties": [
        {
          "name": "id",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "parent",
          "type": "Company | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "data",
          "type": "Record<string, DataValue>",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "ConditionConfiguration",
      "extends": [],
      "properties": [
        {
          "name": "user",
          "type": "UserConditionConfiguration | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "input",
          "type": "InputConditionConfiguration | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "target",
          "type": "TargetConditionConfiguration | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "context",
          "type": "ContextConditionConfiguration | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "Content",
      "extends": [],
      "properties": [
        {
          "name": "id",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "displayName",
          "type": "Multilingual | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "categoryPaths",
          "type": "CategoryPath[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "assortments",
          "type": "number[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "data",
          "type": "Record<string, DataValue>",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "custom",
          "type": "Record<string, string>",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "ContentCategoryIdFilterCategoryQuery",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "filters",
          "type": "FilterCollection",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "numberOfResults",
          "type": "number",
          "docs": "/** @format int32 */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "language",
          "type": "Language | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "currency",
          "type": "Currency | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "skipNumberOfResults",
          "type": "number",
          "docs": "/** @format int32 */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "returnTotalNumberOfResults",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "includeDisabledCategories",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "includeChildCategoriesToDepth",
          "type": "number",
          "docs": "/** @format int32 */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "includeParentCategoriesToDepth",
          "type": "number",
          "docs": "/** @format int32 */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "custom",
          "type": "Record<string, string | null>",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "ContentCategoryInterestTriggerResultTriggerConfiguration",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "custom",
          "type": "Record<string, string | null>",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "id",
          "type": "string",
          "docs": "/** @format uuid */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "name",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "description",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "group",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "enabled",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "created",
          "type": "string",
          "docs": "/** @format date-time */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "createdBy",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "modified",
          "type": "string",
          "docs": "/** @format date-time */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "modifiedBy",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "withinTimeSpanMinutes",
          "type": "number",
          "docs": "/** @format int32 */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "settings",
          "type": "Record<string, string | null>",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "userConditions",
          "type": "UserConditionCollection | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "ContentCategoryRecommendationRequest",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "settings",
          "type": "ContentCategoryRecommendationRequestSettings",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "language",
          "type": "Language | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "user",
          "type": "User | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "relevanceModifiers",
          "type": "RelevanceModifierCollection",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "filters",
          "type": "FilterCollection",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "displayedAtLocationType",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "currency",
          "type": "Currency | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "channel",
          "type": "Channel | null",
          "docs": "/** @deprecated */",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "custom",
          "type": "Record<string, string | null>",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "ContentCategoryRecommendationRequestSettings",
      "extends": [],
      "properties": [
        {
          "name": "numberOfRecommendations",
          "type": "number",
          "docs": "/** @format int32 */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "allowFillIfNecessaryToReachNumberOfRecommendations",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "allowReplacingOfRecentlyShownRecommendations",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "prioritizeDiversityBetweenRequests",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "selectedContentCategoryProperties",
          "type": "SelectedContentCategoryPropertiesSettings | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "custom",
          "type": "Record<string, string | null>",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "prioritizeResultsNotRecommendedWithinSeconds",
          "type": "number | null",
          "docs": "/** @format int32 */",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "ContentCategoryRecommendationWeights",
      "extends": [],
      "properties": [
        {
          "name": "categoryViews",
          "type": "number",
          "docs": "/** @format double */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "contentViews",
          "type": "number",
          "docs": "/** @format double */",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "ContentCategoryResultDetailsCategoryResultDetails",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "categoryId",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "displayName",
          "type": "Multilingual | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "assortments",
          "type": "number[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "data",
          "type": "Record<string, DataValue>",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "viewedByUser",
          "type": "ViewedByUserInfo | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "createdUtc",
          "type": "string",
          "docs": "/** @format date-time */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "lastViewedUtc",
          "type": "string | null",
          "docs": "/** @format date-time */",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "viewedTotalNumberOfTimes",
          "type": "number",
          "docs": "/** @format int64 */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "viewedByDifferentNumberOfUsers",
          "type": "number",
          "docs": "/** @format int32 */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "disabled",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "custom",
          "type": "Record<string, string | null>",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "childCategories",
          "type": "ContentCategoryResultDetails[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "parentCategories",
          "type": "ContentCategoryResultDetails[] | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "ContentContentHighlightPropsHighlightSettings",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "enabled",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "limit",
          "type": "HighlightSettings2ContentContentHighlightPropsHighlightSettings2Limits",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "highlightable",
          "type": "ContentHighlightProps",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "shape",
          "type": "HighlightSettings2ContentContentHighlightPropsHighlightSettings2ResponseShape",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "ContentFacetResult",
      "extends": [],
      "properties": [
        {
          "name": "items",
          "type": "| (\r\n        | ProductAssortmentFacetResult\r\n        | ContentAssortmentFacetResult\r\n        | ProductCategoryAssortmentFacetResult\r\n        | BrandFacetResult\r\n        | CategoryFacetResult\r\n        | CategoryHierarchyFacetResult\r\n        | ContentDataObjectFacetResult\r\n        | ContentDataDoubleRangeFacetResult\r\n        | ContentDataDoubleRangesFacetResult\r\n        | ContentDataStringValueFacetResult\r\n        | ContentDataBooleanValueFacetResult\r\n        | ContentDataDoubleValueFacetResult\r\n        | ContentDataIntegerValueFacetResult\r\n        | DataObjectFacetResult\r\n        | DataObjectDoubleRangeFacetResult\r\n        | DataObjectDoubleRangesFacetResult\r\n        | DataObjectStringValueFacetResult\r\n        | DataObjectBooleanValueFacetResult\r\n        | DataObjectDoubleValueFacetResult\r\n        | PriceRangeFacetResult\r\n        | PriceRangesFacetResult\r\n        | ProductCategoryDataObjectFacetResult\r\n        | ProductCategoryDataDoubleRangeFacetResult\r\n        | ProductCategoryDataDoubleRangesFacetResult\r\n        | ProductCategoryDataStringValueFacetResult\r\n        | ProductCategoryDataBooleanValueFacetResult\r\n        | ProductCategoryDataDoubleValueFacetResult\r\n        | ProductDataObjectFacetResult\r\n        | ProductDataDoubleRangeFacetResult\r\n        | ProductDataDoubleRangesFacetResult\r\n        | ProductDataStringValueFacetResult\r\n        | ProductDataBooleanValueFacetResult\r\n        | ProductDataDoubleValueFacetResult\r\n        | ProductDataIntegerValueFacetResult\r\n        | RecentlyPurchasedFacetResult\r\n        | VariantSpecificationFacetResult\r\n      )[]\r\n    | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "ContentHighlightProperties",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "displayName",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "dataKeys",
          "type": "string[] | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "ContentIndexConfiguration",
      "extends": [],
      "properties": [
        {
          "name": "id",
          "type": "FieldIndexConfiguration | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "displayName",
          "type": "FieldIndexConfiguration | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "category",
          "type": "CategoryIndexConfiguration | ProductCategoryIndexConfiguration | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "data",
          "type": "DataIndexConfiguration | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "ContentRecommendationRequest",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "settings",
          "type": "ContentRecommendationRequestSettings",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "language",
          "type": "Language | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "user",
          "type": "User | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "relevanceModifiers",
          "type": "RelevanceModifierCollection",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "filters",
          "type": "FilterCollection",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "displayedAtLocationType",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "currency",
          "type": "Currency | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "channel",
          "type": "Channel | null",
          "docs": "/** @deprecated */",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "custom",
          "type": "Record<string, string | null>",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "ContentRecommendationRequestSettings",
      "extends": [],
      "properties": [
        {
          "name": "numberOfRecommendations",
          "type": "number",
          "docs": "/** @format int32 */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "allowFillIfNecessaryToReachNumberOfRecommendations",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "allowReplacingOfRecentlyShownRecommendations",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "selectedContentProperties",
          "type": "SelectedContentPropertiesSettings | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "custom",
          "type": "Record<string, string>",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "prioritizeDiversityBetweenRequests",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "prioritizeResultsNotRecommendedWithinSeconds",
          "type": "number | null",
          "docs": "/** @format int32 */",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "ContentResult",
      "extends": [],
      "properties": [
        {
          "name": "contentId",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "displayName",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "rank",
          "type": "number",
          "docs": "/** @format int32 */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "assortments",
          "type": "number[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "data",
          "type": "Record<string, DataValue>",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "categoryPaths",
          "type": "CategoryPathResult[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "viewedByUser",
          "type": "ViewedByUserInfo | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "custom",
          "type": "Record<string, string | null>",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "highlight",
          "type": "HighlightResult | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "ContentResultDetails",
      "extends": [],
      "properties": [
        {
          "name": "contentId",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "displayName",
          "type": "Multilingual | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "assortments",
          "type": "number[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "data",
          "type": "Record<string, DataValue>",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "categoryPaths",
          "type": "CategoryPathResultDetails[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "viewedByUser",
          "type": "ViewedByUserInfo | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "createdUtc",
          "type": "string",
          "docs": "/** @format date-time */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "lastViewedUtc",
          "type": "string | null",
          "docs": "/** @format date-time */",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "viewedTotalNumberOfTimes",
          "type": "number",
          "docs": "/** @format int64 */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "viewedByDifferentNumberOfUsers",
          "type": "number",
          "docs": "/** @format int32 */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "disabled",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "deleted",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "custom",
          "type": "Record<string, string | null>",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "ContentSortBySpecification",
      "extends": [],
      "properties": [
        {
          "name": "value",
          "type": "ContentAttributeSorting | ContentDataSorting | ContentPopularitySorting | ContentRelevanceSorting | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "ContentSorting",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "order",
          "type": "\"Ascending\" | \"Descending\"",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "thenBy",
          "type": "ContentAttributeSorting | ContentDataSorting | ContentPopularitySorting | ContentRelevanceSorting | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "ContextConditionConfiguration",
      "extends": [],
      "properties": [
        {
          "name": "filters",
          "type": "RequestContextFilter[] | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "Currency",
      "extends": [],
      "properties": [
        {
          "name": "value",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "DataFilter",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "key",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "filterOutIfKeyIsNotFound",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "mustMatchAllConditions",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "conditions",
          "type": "ValueConditionCollection | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "language",
          "type": "Language | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "currency",
          "type": "Currency | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "objectPath",
          "type": "string[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "custom",
          "type": "Record<string, string>",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "settings",
          "type": "FilterSettings | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "DataIndexConfiguration",
      "extends": [],
      "properties": [
        {
          "name": "keys",
          "type": "Record<string, FieldIndexConfiguration>",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "unspecified",
          "type": "FieldIndexConfiguration | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "DataObject",
      "extends": [],
      "properties": [
        {
          "name": "data",
          "type": "Record<string, DataValue>",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "DataObjectFilter",
      "extends": [],
      "properties": [
        {
          "name": "conditions",
          "type": "| (\r\n        | ObjectValueContainsCondition\r\n        | ObjectValueEqualsCondition\r\n        | ObjectValueGreaterThanCondition\r\n        | ObjectValueInRangeCondition\r\n        | ObjectValueIsSubsetOfCondition\r\n        | ObjectValueLessThanCondition\r\n        | ObjectValueMaxByCondition\r\n        | ObjectValueMinByCondition\r\n        | ObjectValueRelativeDateTimeCondition\r\n      )[]\r\n    | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "skip",
          "type": "number | null",
          "docs": "/** @format int32 */",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "take",
          "type": "number | null",
          "docs": "/** @format int32 */",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "DataObjectValueSelector",
      "extends": [],
      "properties": [
        {
          "name": "key",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "filter",
          "type": "DataObjectFilter | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "childSelector",
          "type": "DataObjectValueSelector | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "fallbackSelector",
          "type": "DataObjectValueSelector | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "DataRelevanceModifier",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "key",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "considerAsMatchIfKeyIsNotFound",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "multiplyWeightBy",
          "type": "number",
          "docs": "/**\r\n   * @deprecated\r\n   * @format double\r\n   */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "mustMatchAllConditions",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "conditions",
          "type": "| (\r\n        | ContainsCondition\r\n        | DistinctCondition\r\n        | EqualsCondition\r\n        | GreaterThanCondition\r\n        | HasValueCondition\r\n        | LessThanCondition\r\n        | RelativeDateTimeCondition\r\n      )[]\r\n    | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "multiplierSelector",
          "type": "DataDoubleSelector | FixedDoubleValueSelector | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "filters",
          "type": "FilterCollection | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "custom",
          "type": "Record<string, string | null>",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "DataValue",
      "extends": [],
      "properties": [
        {
          "name": "type",
          "type": "| \"String\"\r\n    | \"Double\"\r\n    | \"Boolean\"\r\n    | \"Multilingual\"\r\n    | \"Money\"\r\n    | \"MultiCurrency\"\r\n    | \"StringList\"\r\n    | \"DoubleList\"\r\n    | \"BooleanList\"\r\n    | \"MultilingualCollection\"\r\n    | \"Object\"\r\n    | \"ObjectList\"",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "value",
          "type": "any",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "isCollection",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "DateTimeRange",
      "extends": [],
      "properties": [
        {
          "name": "lowerBoundInclusive",
          "type": "string",
          "docs": "/** @format date-time */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "upperBoundInclusive",
          "type": "string",
          "docs": "/** @format date-time */",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "DecimalNullableChainableRange",
      "extends": [],
      "properties": [
        {
          "name": "lowerBoundInclusive",
          "type": "number | null",
          "docs": "/** @format double */",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "upperBoundExclusive",
          "type": "number | null",
          "docs": "/** @format double */",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "DecimalNullableChainableRangeAvailableFacetValue",
      "extends": [],
      "properties": [
        {
          "name": "value",
          "type": "DecimalNullableChainableRange | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "hits",
          "type": "number",
          "docs": "/** @format int32 */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "selected",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "DecimalNullableRange",
      "extends": [],
      "properties": [
        {
          "name": "lowerBoundInclusive",
          "type": "number | null",
          "docs": "/** @format double */",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "upperBoundInclusive",
          "type": "number | null",
          "docs": "/** @format double */",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "DecimalRange",
      "extends": [],
      "properties": [
        {
          "name": "lowerBoundInclusive",
          "type": "number",
          "docs": "/** @format double */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "upperBoundInclusive",
          "type": "number",
          "docs": "/** @format double */",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "DecimalRangeAvailableFacetValue",
      "extends": [],
      "properties": [
        {
          "name": "value",
          "type": "DecimalRange | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "hits",
          "type": "number",
          "docs": "/** @format int32 */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "selected",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "DecompoundRuleSaveSearchRulesRequest",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "rules",
          "type": "DecompoundRule[]",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "modifiedBy",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "custom",
          "type": "Record<string, string | null>",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "DecompoundRuleSaveSearchRulesResponse",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "rules",
          "type": "DecompoundRule[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "statistics",
          "type": "Statistics | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "DecompoundRuleSearchRulesResponse",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "rules",
          "type": "DecompoundRule[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "hits",
          "type": "number",
          "docs": "/** @format int32 */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "statistics",
          "type": "Statistics | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "DecompoundRulesRequestSortBySearchRulesRequest",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "filters",
          "type": "SearchRuleFilters",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "sorting",
          "type": "DecompoundRulesRequestSortBySorting",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "skip",
          "type": "number",
          "docs": "/** @format int32 */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "take",
          "type": "number",
          "docs": "/** @format int32 */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "custom",
          "type": "Record<string, string | null>",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "DecompoundRulesRequestSortBySorting",
      "extends": [],
      "properties": [
        {
          "name": "sortBy",
          "type": "\"Created\" | \"Modified\"",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "sortOrder",
          "type": "\"Ascending\" | \"Descending\"",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "DeleteSearchRulesRequest",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "ids",
          "type": "string[]",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "deletedBy",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "custom",
          "type": "Record<string, string | null>",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "DoubleAvailableFacetValue",
      "extends": [],
      "properties": [
        {
          "name": "value",
          "type": "number",
          "docs": "/** @format double */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "hits",
          "type": "number",
          "docs": "/** @format int32 */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "selected",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "DoubleContentDataValueFacet",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "key",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "collectionFilterType",
          "type": "\"Or\" | \"And\" | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "selected",
          "type": "number[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "field",
          "type": "\"Category\" | \"Assortment\" | \"ListPrice\" | \"SalesPrice\" | \"Brand\" | \"Data\" | \"VariantSpecification\" | \"User\"",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "settings",
          "type": "FacetSettings | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "DoubleContentDataValueFacetResult",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "key",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "collectionFilterType",
          "type": "\"Or\" | \"And\" | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "selected",
          "type": "number[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "available",
          "type": "DoubleAvailableFacetValue[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "field",
          "type": "\"Category\" | \"Assortment\" | \"ListPrice\" | \"SalesPrice\" | \"Brand\" | \"Data\" | \"VariantSpecification\" | \"User\"",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "DoubleDataObjectValueFacet",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "key",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "collectionFilterType",
          "type": "\"Or\" | \"And\" | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "selected",
          "type": "number[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "field",
          "type": "\"Category\" | \"Assortment\" | \"ListPrice\" | \"SalesPrice\" | \"Brand\" | \"Data\" | \"VariantSpecification\" | \"User\"",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "settings",
          "type": "FacetSettings | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "DoubleDataObjectValueFacetResult",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "key",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "collectionFilterType",
          "type": "\"Or\" | \"And\" | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "selected",
          "type": "number[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "available",
          "type": "DoubleAvailableFacetValue[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "field",
          "type": "\"Category\" | \"Assortment\" | \"ListPrice\" | \"SalesPrice\" | \"Brand\" | \"Data\" | \"VariantSpecification\" | \"User\"",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "DoubleNullableChainableRange",
      "extends": [],
      "properties": [
        {
          "name": "lowerBoundInclusive",
          "type": "number | null",
          "docs": "/** @format double */",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "upperBoundExclusive",
          "type": "number | null",
          "docs": "/** @format double */",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "DoubleNullableChainableRangeAvailableFacetValue",
      "extends": [],
      "properties": [
        {
          "name": "value",
          "type": "DoubleNullableChainableRange | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "hits",
          "type": "number",
          "docs": "/** @format int32 */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "selected",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "DoubleNullableContentDataRangeFacet",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "selected",
          "type": "DoubleNullableRange | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "key",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "field",
          "type": "\"Category\" | \"Assortment\" | \"ListPrice\" | \"SalesPrice\" | \"Brand\" | \"Data\" | \"VariantSpecification\" | \"User\"",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "settings",
          "type": "FacetSettings | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "DoubleNullableContentDataRangeFacetResult",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "key",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "selected",
          "type": "DoubleNullableRange | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "available",
          "type": "DoubleNullableRangeAvailableFacetValue | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "field",
          "type": "\"Category\" | \"Assortment\" | \"ListPrice\" | \"SalesPrice\" | \"Brand\" | \"Data\" | \"VariantSpecification\" | \"User\"",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "DoubleNullableContentDataRangesFacet",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "predefinedRanges",
          "type": "DoubleNullableChainableRange[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "expandedRangeSize",
          "type": "number | null",
          "docs": "/** @format double */",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "selected",
          "type": "DoubleNullableChainableRange[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "key",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "field",
          "type": "\"Category\" | \"Assortment\" | \"ListPrice\" | \"SalesPrice\" | \"Brand\" | \"Data\" | \"VariantSpecification\" | \"User\"",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "settings",
          "type": "FacetSettings | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "DoubleNullableContentDataRangesFacetResult",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "key",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "expandedRangeSize",
          "type": "number | null",
          "docs": "/** @format double */",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "selected",
          "type": "DoubleNullableChainableRange[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "available",
          "type": "DoubleNullableChainableRangeAvailableFacetValue[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "field",
          "type": "\"Category\" | \"Assortment\" | \"ListPrice\" | \"SalesPrice\" | \"Brand\" | \"Data\" | \"VariantSpecification\" | \"User\"",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "DoubleNullableDataObjectRangeFacet",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "selected",
          "type": "DoubleNullableRange | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "key",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "field",
          "type": "\"Category\" | \"Assortment\" | \"ListPrice\" | \"SalesPrice\" | \"Brand\" | \"Data\" | \"VariantSpecification\" | \"User\"",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "settings",
          "type": "FacetSettings | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "DoubleNullableDataObjectRangeFacetResult",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "key",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "selected",
          "type": "DoubleNullableRange | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "available",
          "type": "DoubleNullableRangeAvailableFacetValue | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "field",
          "type": "\"Category\" | \"Assortment\" | \"ListPrice\" | \"SalesPrice\" | \"Brand\" | \"Data\" | \"VariantSpecification\" | \"User\"",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "DoubleNullableDataObjectRangesFacet",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "predefinedRanges",
          "type": "DoubleNullableChainableRange[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "expandedRangeSize",
          "type": "number | null",
          "docs": "/** @format double */",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "selected",
          "type": "DoubleNullableChainableRange[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "key",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "field",
          "type": "\"Category\" | \"Assortment\" | \"ListPrice\" | \"SalesPrice\" | \"Brand\" | \"Data\" | \"VariantSpecification\" | \"User\"",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "settings",
          "type": "FacetSettings | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "DoubleNullableDataObjectRangesFacetResult",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "key",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "expandedRangeSize",
          "type": "number | null",
          "docs": "/** @format double */",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "selected",
          "type": "DoubleNullableChainableRange[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "available",
          "type": "DoubleNullableChainableRangeAvailableFacetValue[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "field",
          "type": "\"Category\" | \"Assortment\" | \"ListPrice\" | \"SalesPrice\" | \"Brand\" | \"Data\" | \"VariantSpecification\" | \"User\"",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "DoubleNullableProductCategoryDataRangeFacet",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "selected",
          "type": "DoubleNullableRange | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "key",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "field",
          "type": "\"Category\" | \"Assortment\" | \"ListPrice\" | \"SalesPrice\" | \"Brand\" | \"Data\" | \"VariantSpecification\" | \"User\"",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "settings",
          "type": "FacetSettings | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "DoubleNullableProductCategoryDataRangeFacetResult",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "key",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "selected",
          "type": "DoubleNullableRange | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "available",
          "type": "DoubleNullableRangeAvailableFacetValue | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "field",
          "type": "\"Category\" | \"Assortment\" | \"ListPrice\" | \"SalesPrice\" | \"Brand\" | \"Data\" | \"VariantSpecification\" | \"User\"",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "DoubleNullableProductCategoryDataRangesFacet",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "predefinedRanges",
          "type": "DoubleNullableChainableRange[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "expandedRangeSize",
          "type": "number | null",
          "docs": "/** @format double */",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "selected",
          "type": "DoubleNullableChainableRange[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "key",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "field",
          "type": "\"Category\" | \"Assortment\" | \"ListPrice\" | \"SalesPrice\" | \"Brand\" | \"Data\" | \"VariantSpecification\" | \"User\"",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "settings",
          "type": "FacetSettings | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "DoubleNullableProductCategoryDataRangesFacetResult",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "key",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "expandedRangeSize",
          "type": "number | null",
          "docs": "/** @format double */",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "selected",
          "type": "DoubleNullableChainableRange[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "available",
          "type": "DoubleNullableChainableRangeAvailableFacetValue[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "field",
          "type": "\"Category\" | \"Assortment\" | \"ListPrice\" | \"SalesPrice\" | \"Brand\" | \"Data\" | \"VariantSpecification\" | \"User\"",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "DoubleNullableProductDataRangeFacet",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "dataSelectionStrategy",
          "type": "\"Product\" | \"Variant\" | \"VariantWithFallbackToProduct\" | \"ProductWithFallbackToVariant\"",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "selected",
          "type": "DoubleNullableRange | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "key",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "field",
          "type": "\"Category\" | \"Assortment\" | \"ListPrice\" | \"SalesPrice\" | \"Brand\" | \"Data\" | \"VariantSpecification\" | \"User\"",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "settings",
          "type": "FacetSettings | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "DoubleNullableProductDataRangeFacetResult",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "key",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "dataSelectionStrategy",
          "type": "\"Product\" | \"Variant\" | \"VariantWithFallbackToProduct\" | \"ProductWithFallbackToVariant\"",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "selected",
          "type": "DoubleNullableRange | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "available",
          "type": "DoubleNullableRangeAvailableFacetValue | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "field",
          "type": "\"Category\" | \"Assortment\" | \"ListPrice\" | \"SalesPrice\" | \"Brand\" | \"Data\" | \"VariantSpecification\" | \"User\"",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "DoubleNullableProductDataRangesFacet",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "dataSelectionStrategy",
          "type": "\"Product\" | \"Variant\" | \"VariantWithFallbackToProduct\" | \"ProductWithFallbackToVariant\"",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "predefinedRanges",
          "type": "DoubleNullableChainableRange[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "expandedRangeSize",
          "type": "number | null",
          "docs": "/** @format double */",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "selected",
          "type": "DoubleNullableChainableRange[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "key",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "field",
          "type": "\"Category\" | \"Assortment\" | \"ListPrice\" | \"SalesPrice\" | \"Brand\" | \"Data\" | \"VariantSpecification\" | \"User\"",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "settings",
          "type": "FacetSettings | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "DoubleNullableProductDataRangesFacetResult",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "key",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "dataSelectionStrategy",
          "type": "\"Product\" | \"Variant\" | \"VariantWithFallbackToProduct\" | \"ProductWithFallbackToVariant\"",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "expandedRangeSize",
          "type": "number | null",
          "docs": "/** @format double */",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "selected",
          "type": "DoubleNullableChainableRange[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "available",
          "type": "DoubleNullableChainableRangeAvailableFacetValue[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "field",
          "type": "\"Category\" | \"Assortment\" | \"ListPrice\" | \"SalesPrice\" | \"Brand\" | \"Data\" | \"VariantSpecification\" | \"User\"",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "DoubleNullableRange",
      "extends": [],
      "properties": [
        {
          "name": "lowerBoundInclusive",
          "type": "number | null",
          "docs": "/** @format double */",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "upperBoundInclusive",
          "type": "number | null",
          "docs": "/** @format double */",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "DoubleNullableRangeAvailableFacetValue",
      "extends": [],
      "properties": [
        {
          "name": "value",
          "type": "DoubleNullableRange | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "hits",
          "type": "number",
          "docs": "/** @format int32 */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "selected",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "DoubleProductCategoryDataValueFacet",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "key",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "collectionFilterType",
          "type": "\"Or\" | \"And\" | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "selected",
          "type": "number[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "field",
          "type": "\"Category\" | \"Assortment\" | \"ListPrice\" | \"SalesPrice\" | \"Brand\" | \"Data\" | \"VariantSpecification\" | \"User\"",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "settings",
          "type": "FacetSettings | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "DoubleProductCategoryDataValueFacetResult",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "key",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "collectionFilterType",
          "type": "\"Or\" | \"And\" | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "selected",
          "type": "number[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "available",
          "type": "DoubleAvailableFacetValue[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "field",
          "type": "\"Category\" | \"Assortment\" | \"ListPrice\" | \"SalesPrice\" | \"Brand\" | \"Data\" | \"VariantSpecification\" | \"User\"",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "DoubleProductDataValueFacet",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "dataSelectionStrategy",
          "type": "\"Product\" | \"Variant\" | \"VariantWithFallbackToProduct\" | \"ProductWithFallbackToVariant\"",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "key",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "collectionFilterType",
          "type": "\"Or\" | \"And\" | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "selected",
          "type": "number[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "field",
          "type": "\"Category\" | \"Assortment\" | \"ListPrice\" | \"SalesPrice\" | \"Brand\" | \"Data\" | \"VariantSpecification\" | \"User\"",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "settings",
          "type": "FacetSettings | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "DoubleProductDataValueFacetResult",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "dataSelectionStrategy",
          "type": "\"Product\" | \"Variant\" | \"VariantWithFallbackToProduct\" | \"ProductWithFallbackToVariant\"",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "key",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "collectionFilterType",
          "type": "\"Or\" | \"And\" | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "selected",
          "type": "number[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "available",
          "type": "DoubleAvailableFacetValue[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "field",
          "type": "\"Category\" | \"Assortment\" | \"ListPrice\" | \"SalesPrice\" | \"Brand\" | \"Data\" | \"VariantSpecification\" | \"User\"",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "DoubleRange",
      "extends": [],
      "properties": [
        {
          "name": "lowerBoundInclusive",
          "type": "number",
          "docs": "/** @format double */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "upperBoundInclusive",
          "type": "number",
          "docs": "/** @format double */",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "ExpectedSearchTermResult",
      "extends": [],
      "properties": [
        {
          "name": "estimatedHits",
          "type": "number",
          "docs": "/** @format int32 */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "type",
          "type": "\"Product\" | \"Variant\" | \"ProductCategory\" | \"Brand\" | \"Content\" | \"ContentCategory\"",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "Facet",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "field",
          "type": "\"Category\" | \"Assortment\" | \"ListPrice\" | \"SalesPrice\" | \"Brand\" | \"Data\" | \"VariantSpecification\" | \"User\"",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "settings",
          "type": "FacetSettings | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "FacetQuery",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "FacetResult",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "field",
          "type": "\"Category\" | \"Assortment\" | \"ListPrice\" | \"SalesPrice\" | \"Brand\" | \"Data\" | \"VariantSpecification\" | \"User\"",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "FacetSettings",
      "extends": [],
      "properties": [
        {
          "name": "alwaysIncludeSelectedInAvailable",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "includeZeroHitsInAvailable",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "sorting",
          "type": "ByHitsFacetSorting | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "take",
          "type": "number | null",
          "docs": "/** @format int32 */",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "FacetSorting",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "FieldIndexConfiguration",
      "extends": [],
      "properties": [
        {
          "name": "included",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "weight",
          "type": "number",
          "docs": "/** @format int32 */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "predictionSourceType",
          "type": "\"Disabled\" | \"IndividualWords\" | \"PartialWordSequences\" | \"CompleteWordSequence\"",
          "docs": "/** @deprecated */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "parser",
          "type": "ClearTextParser | HtmlParser | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "matchTypeSettings",
          "type": "MatchTypeSettings | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "predictionConfiguration",
          "type": "PredictionConfiguration | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "Filter",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "custom",
          "type": "Record<string, string>",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "settings",
          "type": "FilterSettings | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "FilterCollection",
      "extends": [],
      "properties": [
        {
          "name": "items",
          "type": "| (\r\n        | AndFilter\r\n        | BrandAssortmentFilter\r\n        | BrandDataFilter\r\n        | BrandDataHasKeyFilter\r\n        | BrandDisabledFilter\r\n        | BrandIdFilter\r\n        | CartDataFilter\r\n        | CompanyDataFilter\r\n        | CompanyDataHasKeyFilter\r\n        | CompanyDisabledFilter\r\n        | CompanyIdFilter\r\n        | ContentAssortmentFilter\r\n        | ContentCategoryAssortmentFilter\r\n        | ContentCategoryDataFilter\r\n        | ContentCategoryDataHasKeyFilter\r\n        | ContentCategoryDisabledFilter\r\n        | ContentCategoryHasAncestorFilter\r\n        | ContentCategoryHasChildFilter\r\n        | ContentCategoryHasContentsFilter\r\n        | ContentCategoryHasParentFilter\r\n        | ContentCategoryIdFilter\r\n        | ContentCategoryLevelFilter\r\n        | ContentCategoryRecentlyViewedByUserFilter\r\n        | ContentDataFilter\r\n        | ContentDataHasKeyFilter\r\n        | ContentDisabledFilter\r\n        | ContentHasCategoriesFilter\r\n        | ContentIdFilter\r\n        | ContentRecentlyViewedByUserFilter\r\n        | OrFilter\r\n        | ProductAndVariantIdFilter\r\n        | ProductAssortmentFilter\r\n        | ProductCategoryAssortmentFilter\r\n        | ProductCategoryDataFilter\r\n        | ProductCategoryDataHasKeyFilter\r\n        | ProductCategoryDisabledFilter\r\n        | ProductCategoryHasAncestorFilter\r\n        | ProductCategoryHasChildFilter\r\n        | ProductCategoryHasParentFilter\r\n        | ProductCategoryHasProductsFilter\r\n        | ProductCategoryIdFilter\r\n        | ProductCategoryLevelFilter\r\n        | ProductCategoryRecentlyViewedByUserFilter\r\n        | ProductDataFilter\r\n        | ProductDataHasKeyFilter\r\n        | ProductDisabledFilter\r\n        | ProductDisplayNameFilter\r\n        | ProductHasCategoriesFilter\r\n        | ProductHasVariantsFilter\r\n        | ProductIdFilter\r\n        | ProductInCartFilter\r\n        | ProductListPriceFilter\r\n        | ProductRecentlyPurchasedByCompanyFilter\r\n        | ProductRecentlyPurchasedByUserCompanyFilter\r\n        | ProductRecentlyPurchasedByUserFilter\r\n        | ProductRecentlyPurchasedByUserParentCompanyFilter\r\n        | ProductRecentlyViewedByCompanyFilter\r\n        | ProductRecentlyViewedByUserCompanyFilter\r\n        | ProductRecentlyViewedByUserFilter\r\n        | ProductRecentlyViewedByUserParentCompanyFilter\r\n        | ProductSalesPriceFilter\r\n        | VariantAssortmentFilter\r\n        | VariantDataFilter\r\n        | VariantDataHasKeyFilter\r\n        | VariantDisabledFilter\r\n        | VariantIdFilter\r\n        | VariantListPriceFilter\r\n        | VariantSalesPriceFilter\r\n        | VariantSpecificationFilter\r\n      )[]\r\n    | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "FilterScopeSettings",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "FilterScopes",
      "extends": [],
      "properties": [
        {
          "name": "default",
          "type": "ApplyFilterSettings | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "fill",
          "type": "ApplyFilterSettings | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "FilterSettings",
      "extends": [],
      "properties": [
        {
          "name": "scopes",
          "type": "FilterScopes | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "FilteredVariantsSettings",
      "extends": [],
      "properties": [
        {
          "name": "filters",
          "type": "FilterCollection | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "inheritFiltersFromRequest",
          "type": "boolean | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "GlobalRetailMediaConfiguration",
      "extends": [],
      "properties": [
        {
          "name": "modified",
          "type": "string",
          "docs": "/** @format date-time */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "modifiedBy",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "thresholds",
          "type": "ScoreThresholds | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "GlobalTriggerConfiguration",
      "extends": [],
      "properties": [
        {
          "name": "modified",
          "type": "string",
          "docs": "/** @format date-time */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "modifiedBy",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "enabled",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "minimumCooldownAnyTrigger",
          "type": "number | null",
          "docs": "/** @format int32 */",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "minimumCooldownSameTrigger",
          "type": "number | null",
          "docs": "/** @format int32 */",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "minimumCooldownSameGroup",
          "type": "number | null",
          "docs": "/** @format int32 */",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "settings",
          "type": "Record<string, string | null>",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "HasAncestorCategoryFilter",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "categoryIds",
          "type": "string[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "custom",
          "type": "Record<string, string>",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "settings",
          "type": "FilterSettings | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "HasChildCategoryFilter",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "categoryIds",
          "type": "string[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "custom",
          "type": "Record<string, string>",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "settings",
          "type": "FilterSettings | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "HasParentCategoryFilter",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "categoryIds",
          "type": "string[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "custom",
          "type": "Record<string, string>",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "settings",
          "type": "FilterSettings | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "HighlightResult",
      "extends": [],
      "properties": [
        {
          "name": "offsets",
          "type": "HighlightResultOffset | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "snippets",
          "type": "HighlightResultSnippet | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "HighlightResultOffset",
      "extends": [],
      "properties": [
        {
          "name": "displayName",
          "type": "Int32Range[]",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "data",
          "type": "StringRange1ArrayKeyValuePair[]",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "HighlightResultSnippet",
      "extends": [],
      "properties": [
        {
          "name": "displayName",
          "type": "HighlightResultSnippetDisplayNameSnippetMatch[]",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "data",
          "type": "StringFieldSnippetMatchArrayKeyValuePair[]",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "HighlightResultSnippetMatchMatchedWord",
      "extends": [],
      "properties": [
        {
          "name": "offset",
          "type": "Int32Range | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "HighlightResultSnippetSnippetMatch",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "text",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "matchedWords",
          "type": "HighlightResultSnippetMatchMatchedWord[] | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "HighlightSettings2ContentContentHighlightPropsHighlightSettings2Limits",
      "extends": [],
      "properties": [
        {
          "name": "maxEntryLimit",
          "type": "number | null",
          "docs": "/** @format int32 */",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "maxSnippetsPerEntry",
          "type": "number | null",
          "docs": "/** @format int32 */",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "maxSnippetsPerField",
          "type": "number | null",
          "docs": "/** @format int32 */",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "maxWordsBeforeMatch",
          "type": "number | null",
          "docs": "/** @format int32 */",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "maxWordsAfterMatch",
          "type": "number | null",
          "docs": "/** @format int32 */",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "maxSentencesToIncludeBeforeMatch",
          "type": "number | null",
          "docs": "/** @format int32 */",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "maxSentencesToIncludeAfterMatch",
          "type": "number | null",
          "docs": "/** @format int32 */",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "HighlightSettings2ContentContentHighlightPropsHighlightSettings2OffsetSettings",
      "extends": [],
      "properties": [
        {
          "name": "include",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "HighlightSettings2ContentContentHighlightPropsHighlightSettings2ResponseShape",
      "extends": [],
      "properties": [
        {
          "name": "offsets",
          "type": "HighlightSettings2ContentContentHighlightPropsHighlightSettings2OffsetSettings | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "snippets",
          "type": "HighlightSettings2ContentContentHighlightPropsHighlightSettings2SnippetsSettings | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "HighlightSettings2ContentContentHighlightPropsHighlightSettings2SnippetsSettings",
      "extends": [],
      "properties": [
        {
          "name": "include",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "useEllipses",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "includeMatchedWords",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "HighlightSettings2ProductProductHighlightPropsHighlightSettings2Limits",
      "extends": [],
      "properties": [
        {
          "name": "maxEntryLimit",
          "type": "number | null",
          "docs": "/** @format int32 */",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "maxSnippetsPerEntry",
          "type": "number | null",
          "docs": "/** @format int32 */",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "maxSnippetsPerField",
          "type": "number | null",
          "docs": "/** @format int32 */",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "maxWordsBeforeMatch",
          "type": "number | null",
          "docs": "/** @format int32 */",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "maxWordsAfterMatch",
          "type": "number | null",
          "docs": "/** @format int32 */",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "maxSentencesToIncludeBeforeMatch",
          "type": "number | null",
          "docs": "/** @format int32 */",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "maxSentencesToIncludeAfterMatch",
          "type": "number | null",
          "docs": "/** @format int32 */",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "HighlightSettings2ProductProductHighlightPropsHighlightSettings2OffsetSettings",
      "extends": [],
      "properties": [
        {
          "name": "include",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "HighlightSettings2ProductProductHighlightPropsHighlightSettings2ResponseShape",
      "extends": [],
      "properties": [
        {
          "name": "offsets",
          "type": "HighlightSettings2ProductProductHighlightPropsHighlightSettings2OffsetSettings | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "snippets",
          "type": "HighlightSettings2ProductProductHighlightPropsHighlightSettings2SnippetsSettings | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "HighlightSettings2ProductProductHighlightPropsHighlightSettings2SnippetsSettings",
      "extends": [],
      "properties": [
        {
          "name": "include",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "useEllipses",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "includeMatchedWords",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "IndexConfiguration",
      "extends": [],
      "properties": [
        {
          "name": "language",
          "type": "LanguageIndexConfiguration | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "product",
          "type": "ProductIndexConfiguration | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "content",
          "type": "ContentIndexConfiguration | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "productCategory",
          "type": "ProductCategoryIndexConfiguration | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "InputConditionConfiguration",
      "extends": [],
      "properties": [
        {
          "name": "filters",
          "type": "FilterCollection | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "evaluationMode",
          "type": "\"Any\" | \"All\"",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "Int32AvailableFacetValue",
      "extends": [],
      "properties": [
        {
          "name": "value",
          "type": "number",
          "docs": "/** @format int32 */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "hits",
          "type": "number",
          "docs": "/** @format int32 */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "selected",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "Int32ContentDataValueFacet",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "key",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "collectionFilterType",
          "type": "\"Or\" | \"And\" | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "selected",
          "type": "number[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "field",
          "type": "\"Category\" | \"Assortment\" | \"ListPrice\" | \"SalesPrice\" | \"Brand\" | \"Data\" | \"VariantSpecification\" | \"User\"",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "settings",
          "type": "FacetSettings | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "Int32ContentDataValueFacetResult",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "key",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "collectionFilterType",
          "type": "\"Or\" | \"And\" | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "selected",
          "type": "number[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "available",
          "type": "Int32AvailableFacetValue[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "field",
          "type": "\"Category\" | \"Assortment\" | \"ListPrice\" | \"SalesPrice\" | \"Brand\" | \"Data\" | \"VariantSpecification\" | \"User\"",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "Int32NullableRange",
      "extends": [],
      "properties": [
        {
          "name": "lowerBoundInclusive",
          "type": "number | null",
          "docs": "/** @format int32 */",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "upperBoundInclusive",
          "type": "number | null",
          "docs": "/** @format int32 */",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "Int32ProductDataValueFacet",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "dataSelectionStrategy",
          "type": "\"Product\" | \"Variant\" | \"VariantWithFallbackToProduct\" | \"ProductWithFallbackToVariant\"",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "key",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "collectionFilterType",
          "type": "\"Or\" | \"And\" | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "selected",
          "type": "number[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "field",
          "type": "\"Category\" | \"Assortment\" | \"ListPrice\" | \"SalesPrice\" | \"Brand\" | \"Data\" | \"VariantSpecification\" | \"User\"",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "settings",
          "type": "FacetSettings | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "Int32ProductDataValueFacetResult",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "dataSelectionStrategy",
          "type": "\"Product\" | \"Variant\" | \"VariantWithFallbackToProduct\" | \"ProductWithFallbackToVariant\"",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "key",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "collectionFilterType",
          "type": "\"Or\" | \"And\" | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "selected",
          "type": "number[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "available",
          "type": "Int32AvailableFacetValue[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "field",
          "type": "\"Category\" | \"Assortment\" | \"ListPrice\" | \"SalesPrice\" | \"Brand\" | \"Data\" | \"VariantSpecification\" | \"User\"",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "Int32Range",
      "extends": [],
      "properties": [
        {
          "name": "lowerBoundInclusive",
          "type": "number",
          "docs": "/** @format int32 */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "upperBoundInclusive",
          "type": "number",
          "docs": "/** @format int32 */",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "KeyMultiplier",
      "extends": [],
      "properties": [
        {
          "name": "key",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "multiplier",
          "type": "number",
          "docs": "/** @format double */",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "Language",
      "extends": [],
      "properties": [
        {
          "name": "value",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "LanguageIndexConfiguration",
      "extends": [],
      "properties": [
        {
          "name": "languages",
          "type": "LanguageIndexConfigurationEntry[] | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "LanguageIndexConfigurationEntry",
      "extends": [],
      "properties": [
        {
          "name": "language",
          "type": "Language",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "included",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "isO639_1",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "LicensedRequest",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "custom",
          "type": "Record<string, string | null>",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "LineItem",
      "extends": [],
      "properties": [
        {
          "name": "product",
          "type": "Product",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "variant",
          "type": "ProductVariant | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "custom",
          "type": "Record<string, string>",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "quantity",
          "type": "number",
          "docs": "/** @format float */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "lineTotal",
          "type": "number",
          "docs": "/** @format double */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "data",
          "type": "Record<string, DataValue>",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "LocationEntityStateLocationMetadataValuesLocationsRequestSortByLocationsRequestEntityFiltersEntitiesRequest",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "filters",
          "type": "LocationsRequestEntityFilters | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "sorting",
          "type": "LocationsRequestSortBySorting | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "skip",
          "type": "number",
          "docs": "/** @format int32 */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "take",
          "type": "number",
          "docs": "/** @format int32 */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "custom",
          "type": "Record<string, string | null>",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "LocationEntityStateLocationMetadataValuesRetailMediaEntity",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "state",
          "type": "\"Active\" | \"Inactive\" | \"Archived\"",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "metadata",
          "type": "LocationMetadataValues",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "id",
          "type": "string | null",
          "docs": "/** @format uuid */",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "LocationLocationEntityStateEntityResponse",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "entities",
          "type": "Location[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "hits",
          "type": "number",
          "docs": "/** @format int32 */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "hitsPerState",
          "type": "{\r\n    /** @format int32 */\r\n    Active: number;\r\n    /** @format int32 */\r\n    Inactive: number;\r\n    /** @format int32 */\r\n    Archived: number;\r\n  } | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "statistics",
          "type": "Statistics | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "LocationPlacement",
      "extends": [],
      "properties": [
        {
          "name": "name",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "key",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "variations",
          "type": "LocationPlacementVariationCollection | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "thresholds",
          "type": "ScoreThresholds | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "LocationPlacementCollection",
      "extends": [],
      "properties": [
        {
          "name": "items",
          "type": "LocationPlacement[]",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "LocationPlacementVariation",
      "extends": [],
      "properties": [
        {
          "name": "name",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "key",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "supportedPromotions",
          "type": "PromotionSpecificationVariationCollection | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "LocationPlacementVariationCollection",
      "extends": [],
      "properties": [
        {
          "name": "items",
          "type": "LocationPlacementVariation[]",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "LocationSaveEntitiesRequest",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "entities",
          "type": "Location[]",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "modifiedBy",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "custom",
          "type": "Record<string, string | null>",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "LocationSaveEntitiesResponse",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "entities",
          "type": "Location[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "statistics",
          "type": "Statistics | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "LocationsRequestSortBySorting",
      "extends": [],
      "properties": [
        {
          "name": "sortBy",
          "type": "\"Created\" | \"Modified\" | \"Name\"",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "sortOrder",
          "type": "\"Ascending\" | \"Descending\"",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "MatchTypeSettings",
      "extends": [],
      "properties": [
        {
          "name": "compound",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "exact",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "startsWith",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "endsWith",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "fuzzy",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "MerchandisingRule",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "custom",
          "type": "Record<string, string | null>",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "id",
          "type": "string",
          "docs": "/** @format uuid */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "name",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "description",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "group",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "enabled",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "created",
          "type": "string",
          "docs": "/** @format date-time */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "createdBy",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "modified",
          "type": "string",
          "docs": "/** @format date-time */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "modifiedBy",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "conditions",
          "type": "ConditionConfiguration | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "request",
          "type": "RequestConfiguration | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "priority",
          "type": "number",
          "docs": "/** @format double */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "settings",
          "type": "Record<string, string | null>",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "schedule",
          "type": "ISchedule | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "status",
          "type": "\"Active\" | \"Inactive\" | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "MetadataValues",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "created",
          "type": "string",
          "docs": "/** @format date-time */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "createdBy",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "modified",
          "type": "string",
          "docs": "/** @format date-time */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "modifiedBy",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "Money",
      "extends": [],
      "properties": [
        {
          "name": "amount",
          "type": "number",
          "docs": "/** @format double */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "currency",
          "type": "Currency",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "MultiCurrency",
      "extends": [],
      "properties": [
        {
          "name": "values",
          "type": "Money[] | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "Multilingual",
      "extends": [],
      "properties": [
        {
          "name": "values",
          "type": "MultilingualValue[] | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "MultilingualCollection",
      "extends": [],
      "properties": [
        {
          "name": "values",
          "type": "MultilingualCollectionValue[] | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "MultilingualCollectionValue",
      "extends": [],
      "properties": [
        {
          "name": "language",
          "type": "Language | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "values",
          "type": "string[] | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "MultilingualValue",
      "extends": [],
      "properties": [
        {
          "name": "language",
          "type": "Language",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "text",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "ObjectValueCondition",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "key",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "objectPath",
          "type": "string[] | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "OverriddenContentRecommendationRequestSettings",
      "extends": [],
      "properties": [
        {
          "name": "numberOfRecommendations",
          "type": "number | null",
          "docs": "/** @format int32 */",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "allowFillIfNecessaryToReachNumberOfRecommendations",
          "type": "boolean | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "allowReplacingOfRecentlyShownRecommendations",
          "type": "boolean | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "selectedContentProperties",
          "type": "OverriddenSelectedContentPropertiesSettings | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "custom",
          "type": "Record<string, string | null>",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "prioritizeDiversityBetweenRequests",
          "type": "boolean | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "prioritizeResultsNotRecommendedWithinSeconds",
          "type": "number | null",
          "docs": "/** @format int32 */",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "OverriddenProductRecommendationRequestSettings",
      "extends": [],
      "properties": [
        {
          "name": "numberOfRecommendations",
          "type": "number | null",
          "docs": "/** @format int32 */",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "allowFillIfNecessaryToReachNumberOfRecommendations",
          "type": "boolean | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "allowReplacingOfRecentlyShownRecommendations",
          "type": "boolean | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "recommendVariant",
          "type": "boolean | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "selectedProductProperties",
          "type": "OverriddenSelectedProductPropertiesSettings | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "selectedVariantProperties",
          "type": "OverriddenSelectedVariantPropertiesSettings | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "custom",
          "type": "Record<string, string | null>",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "prioritizeDiversityBetweenRequests",
          "type": "boolean | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "allowProductsCurrentlyInCart",
          "type": "boolean | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "selectedBrandProperties",
          "type": "OverriddenSelectedBrandPropertiesSettings | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "prioritizeResultsNotRecommendedWithinSeconds",
          "type": "number | null",
          "docs": "/** @format int32 */",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "OverriddenSelectedBrandPropertiesSettings",
      "extends": [],
      "properties": [
        {
          "name": "displayName",
          "type": "boolean | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "assortments",
          "type": "boolean | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "viewedByUserInfo",
          "type": "boolean | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "allData",
          "type": "boolean | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "dataKeys",
          "type": "string[] | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "OverriddenSelectedContentPropertiesSettings",
      "extends": [],
      "properties": [
        {
          "name": "displayName",
          "type": "boolean | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "categoryPaths",
          "type": "boolean | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "assortments",
          "type": "boolean | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "allData",
          "type": "boolean | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "viewedByUserInfo",
          "type": "boolean | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "dataKeys",
          "type": "string[] | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "OverriddenSelectedProductPropertiesSettings",
      "extends": [],
      "properties": [
        {
          "name": "displayName",
          "type": "boolean | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "categoryPaths",
          "type": "boolean | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "assortments",
          "type": "boolean | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "pricing",
          "type": "boolean | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "allData",
          "type": "boolean | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "viewedByUserInfo",
          "type": "boolean | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "purchasedByUserInfo",
          "type": "boolean | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "brand",
          "type": "boolean | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "allVariants",
          "type": "boolean | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "dataKeys",
          "type": "string[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "score",
          "type": "SelectedScorePropertiesSettings | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "OverriddenSelectedVariantPropertiesSettings",
      "extends": [],
      "properties": [
        {
          "name": "displayName",
          "type": "boolean | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "pricing",
          "type": "boolean | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "allSpecifications",
          "type": "boolean | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "assortments",
          "type": "boolean | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "allData",
          "type": "boolean | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "dataKeys",
          "type": "string[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "specificationKeys",
          "type": "string[] | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "PaginatedSearchRequest",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "skip",
          "type": "number",
          "docs": "/** @format int32 */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "take",
          "type": "number",
          "docs": "/** @format int32 */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "language",
          "type": "Language | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "currency",
          "type": "Currency | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "user",
          "type": "User | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "displayedAtLocation",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "relevanceModifiers",
          "type": "RelevanceModifierCollection | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "filters",
          "type": "FilterCollection | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "indexSelector",
          "type": "SearchIndexSelector | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "postFilters",
          "type": "FilterCollection | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "channel",
          "type": "Channel | null",
          "docs": "/** @deprecated */",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "custom",
          "type": "Record<string, string | null>",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "PaginatedSearchResponse",
      "extends": [],
      "properties": [
        {
          "name": "hits",
          "type": "number",
          "docs": "/** @format int32 */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "custom",
          "type": "Record<string, string | null>",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "statistics",
          "type": "Statistics | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "Parser",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "PopularityMultiplierSelector",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "PredictionConfiguration",
      "extends": [],
      "properties": [
        {
          "name": "includeInPredictions",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "PredictionRulePromotion",
      "extends": [],
      "properties": [
        {
          "name": "to",
          "type": "\"Top\" | \"Bottom\"",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "values",
          "type": "string[]",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "PredictionRuleSaveSearchRulesRequest",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "rules",
          "type": "PredictionRule[]",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "modifiedBy",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "custom",
          "type": "Record<string, string | null>",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "PredictionRuleSaveSearchRulesResponse",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "rules",
          "type": "PredictionRule[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "statistics",
          "type": "Statistics | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "PredictionRuleSearchRulesResponse",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "rules",
          "type": "PredictionRule[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "hits",
          "type": "number",
          "docs": "/** @format int32 */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "statistics",
          "type": "Statistics | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "PredictionRuleSuppression",
      "extends": [],
      "properties": [
        {
          "name": "condition",
          "type": "\"Contains\"",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "values",
          "type": "string[]",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "PredictionRulesRequestSortBySearchRulesRequest",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "filters",
          "type": "SearchRuleFilters",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "sorting",
          "type": "PredictionRulesRequestSortBySorting",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "skip",
          "type": "number",
          "docs": "/** @format int32 */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "take",
          "type": "number",
          "docs": "/** @format int32 */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "custom",
          "type": "Record<string, string | null>",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "PredictionRulesRequestSortBySorting",
      "extends": [],
      "properties": [
        {
          "name": "sortBy",
          "type": "\"Created\" | \"Modified\"",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "sortOrder",
          "type": "\"Ascending\" | \"Descending\"",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "Product",
      "extends": [],
      "properties": [
        {
          "name": "id",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "displayName",
          "type": "Multilingual | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "categoryPaths",
          "type": "CategoryPath[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "assortments",
          "type": "number[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "data",
          "type": "Record<string, DataValue>",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "custom",
          "type": "Record<string, string>",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "listPrice",
          "type": "MultiCurrency | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "salesPrice",
          "type": "MultiCurrency | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "brand",
          "type": "Brand | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "ProductAndVariantId",
      "extends": [],
      "properties": [
        {
          "name": "productId",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "variantId",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "ProductCategoryFacetResult",
      "extends": [],
      "properties": [
        {
          "name": "items",
          "type": "| (\r\n        | ProductAssortmentFacetResult\r\n        | ContentAssortmentFacetResult\r\n        | ProductCategoryAssortmentFacetResult\r\n        | BrandFacetResult\r\n        | CategoryFacetResult\r\n        | CategoryHierarchyFacetResult\r\n        | ContentDataObjectFacetResult\r\n        | ContentDataDoubleRangeFacetResult\r\n        | ContentDataDoubleRangesFacetResult\r\n        | ContentDataStringValueFacetResult\r\n        | ContentDataBooleanValueFacetResult\r\n        | ContentDataDoubleValueFacetResult\r\n        | ContentDataIntegerValueFacetResult\r\n        | DataObjectFacetResult\r\n        | DataObjectDoubleRangeFacetResult\r\n        | DataObjectDoubleRangesFacetResult\r\n        | DataObjectStringValueFacetResult\r\n        | DataObjectBooleanValueFacetResult\r\n        | DataObjectDoubleValueFacetResult\r\n        | PriceRangeFacetResult\r\n        | PriceRangesFacetResult\r\n        | ProductCategoryDataObjectFacetResult\r\n        | ProductCategoryDataDoubleRangeFacetResult\r\n        | ProductCategoryDataDoubleRangesFacetResult\r\n        | ProductCategoryDataStringValueFacetResult\r\n        | ProductCategoryDataBooleanValueFacetResult\r\n        | ProductCategoryDataDoubleValueFacetResult\r\n        | ProductDataObjectFacetResult\r\n        | ProductDataDoubleRangeFacetResult\r\n        | ProductDataDoubleRangesFacetResult\r\n        | ProductDataStringValueFacetResult\r\n        | ProductDataBooleanValueFacetResult\r\n        | ProductDataDoubleValueFacetResult\r\n        | ProductDataIntegerValueFacetResult\r\n        | RecentlyPurchasedFacetResult\r\n        | VariantSpecificationFacetResult\r\n      )[]\r\n    | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "ProductCategoryIdFilterCategoryQuery",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "filters",
          "type": "FilterCollection",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "numberOfResults",
          "type": "number",
          "docs": "/** @format int32 */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "language",
          "type": "Language | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "currency",
          "type": "Currency | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "skipNumberOfResults",
          "type": "number",
          "docs": "/** @format int32 */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "returnTotalNumberOfResults",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "includeDisabledCategories",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "includeChildCategoriesToDepth",
          "type": "number",
          "docs": "/** @format int32 */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "includeParentCategoriesToDepth",
          "type": "number",
          "docs": "/** @format int32 */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "custom",
          "type": "Record<string, string | null>",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "ProductCategoryInterestTriggerResultTriggerConfiguration",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "custom",
          "type": "Record<string, string | null>",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "id",
          "type": "string",
          "docs": "/** @format uuid */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "name",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "description",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "group",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "enabled",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "created",
          "type": "string",
          "docs": "/** @format date-time */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "createdBy",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "modified",
          "type": "string",
          "docs": "/** @format date-time */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "modifiedBy",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "withinTimeSpanMinutes",
          "type": "number",
          "docs": "/** @format int32 */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "settings",
          "type": "Record<string, string | null>",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "userConditions",
          "type": "UserConditionCollection | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "ProductCategoryRecommendationRequest",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "settings",
          "type": "ProductCategoryRecommendationRequestSettings",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "language",
          "type": "Language | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "user",
          "type": "User | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "relevanceModifiers",
          "type": "RelevanceModifierCollection",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "filters",
          "type": "FilterCollection",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "displayedAtLocationType",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "currency",
          "type": "Currency | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "channel",
          "type": "Channel | null",
          "docs": "/** @deprecated */",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "custom",
          "type": "Record<string, string | null>",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "ProductCategoryRecommendationRequestSettings",
      "extends": [],
      "properties": [
        {
          "name": "numberOfRecommendations",
          "type": "number",
          "docs": "/** @format int32 */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "allowFillIfNecessaryToReachNumberOfRecommendations",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "allowReplacingOfRecentlyShownRecommendations",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "prioritizeDiversityBetweenRequests",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "selectedProductCategoryProperties",
          "type": "SelectedProductCategoryPropertiesSettings | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "custom",
          "type": "Record<string, string | null>",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "prioritizeResultsNotRecommendedWithinSeconds",
          "type": "number | null",
          "docs": "/** @format int32 */",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "ProductCategoryRecommendationWeights",
      "extends": [],
      "properties": [
        {
          "name": "categoryViews",
          "type": "number",
          "docs": "/** @format double */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "productViews",
          "type": "number",
          "docs": "/** @format double */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "productPurchases",
          "type": "number",
          "docs": "/** @format double */",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "ProductCategoryResultDetailsCategoryResultDetails",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "categoryId",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "displayName",
          "type": "Multilingual | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "assortments",
          "type": "number[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "data",
          "type": "Record<string, DataValue>",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "viewedByUser",
          "type": "ViewedByUserInfo | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "createdUtc",
          "type": "string",
          "docs": "/** @format date-time */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "lastViewedUtc",
          "type": "string | null",
          "docs": "/** @format date-time */",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "viewedTotalNumberOfTimes",
          "type": "number",
          "docs": "/** @format int64 */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "viewedByDifferentNumberOfUsers",
          "type": "number",
          "docs": "/** @format int32 */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "disabled",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "custom",
          "type": "Record<string, string | null>",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "childCategories",
          "type": "ProductCategoryResultDetails[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "parentCategories",
          "type": "ProductCategoryResultDetails[] | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "ProductCategorySortBySpecification",
      "extends": [],
      "properties": [
        {
          "name": "value",
          "type": "| ProductCategoryAttributeSorting\r\n    | ProductCategoryDataSorting\r\n    | ProductCategoryPopularitySorting\r\n    | ProductCategoryRelevanceSorting\r\n    | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "ProductCategorySorting",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "order",
          "type": "\"Ascending\" | \"Descending\"",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "thenBy",
          "type": "| ProductCategoryAttributeSorting\r\n    | ProductCategoryDataSorting\r\n    | ProductCategoryPopularitySorting\r\n    | ProductCategoryRelevanceSorting\r\n    | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "ProductChangeTriggerResultProductChangeTriggerResultSettingsProductPropertySelectorEntityChangeTriggerConfiguration",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "entityPropertySelector",
          "type": "ObservableProductAttributeSelector | ObservableProductDataValueSelector",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "beforeChangeFilters",
          "type": "FilterCollection",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "afterChangeFilters",
          "type": "FilterCollection",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "change",
          "type": "IChange",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "resultSettings",
          "type": "ProductChangeTriggerResultSettings",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "custom",
          "type": "Record<string, string | null>",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "id",
          "type": "string",
          "docs": "/** @format uuid */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "name",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "description",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "group",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "enabled",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "created",
          "type": "string",
          "docs": "/** @format date-time */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "createdBy",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "modified",
          "type": "string",
          "docs": "/** @format date-time */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "modifiedBy",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "withinTimeSpanMinutes",
          "type": "number",
          "docs": "/** @format int32 */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "settings",
          "type": "Record<string, string | null>",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "userConditions",
          "type": "UserConditionCollection | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "ProductChangeTriggerResultSettings",
      "extends": [],
      "properties": [
        {
          "name": "selectedProductProperties",
          "type": "SelectedProductDetailsPropertiesSettings | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "selectedVariantProperties",
          "type": "SelectedVariantDetailsPropertiesSettings | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "ProductFacetResult",
      "extends": [],
      "properties": [
        {
          "name": "items",
          "type": "| (\r\n        | ProductAssortmentFacetResult\r\n        | ContentAssortmentFacetResult\r\n        | ProductCategoryAssortmentFacetResult\r\n        | BrandFacetResult\r\n        | CategoryFacetResult\r\n        | CategoryHierarchyFacetResult\r\n        | ContentDataObjectFacetResult\r\n        | ContentDataDoubleRangeFacetResult\r\n        | ContentDataDoubleRangesFacetResult\r\n        | ContentDataStringValueFacetResult\r\n        | ContentDataBooleanValueFacetResult\r\n        | ContentDataDoubleValueFacetResult\r\n        | ContentDataIntegerValueFacetResult\r\n        | DataObjectFacetResult\r\n        | DataObjectDoubleRangeFacetResult\r\n        | DataObjectDoubleRangesFacetResult\r\n        | DataObjectStringValueFacetResult\r\n        | DataObjectBooleanValueFacetResult\r\n        | DataObjectDoubleValueFacetResult\r\n        | PriceRangeFacetResult\r\n        | PriceRangesFacetResult\r\n        | ProductCategoryDataObjectFacetResult\r\n        | ProductCategoryDataDoubleRangeFacetResult\r\n        | ProductCategoryDataDoubleRangesFacetResult\r\n        | ProductCategoryDataStringValueFacetResult\r\n        | ProductCategoryDataBooleanValueFacetResult\r\n        | ProductCategoryDataDoubleValueFacetResult\r\n        | ProductDataObjectFacetResult\r\n        | ProductDataDoubleRangeFacetResult\r\n        | ProductDataDoubleRangesFacetResult\r\n        | ProductDataStringValueFacetResult\r\n        | ProductDataBooleanValueFacetResult\r\n        | ProductDataDoubleValueFacetResult\r\n        | ProductDataIntegerValueFacetResult\r\n        | RecentlyPurchasedFacetResult\r\n        | VariantSpecificationFacetResult\r\n      )[]\r\n    | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "ProductHighlightProperties",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "displayName",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "dataKeys",
          "type": "string[] | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "ProductIndexConfiguration",
      "extends": [],
      "properties": [
        {
          "name": "id",
          "type": "FieldIndexConfiguration | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "displayName",
          "type": "FieldIndexConfiguration | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "category",
          "type": "CategoryIndexConfiguration | ProductCategoryIndexConfiguration | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "brand",
          "type": "BrandIndexConfiguration | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "data",
          "type": "DataIndexConfiguration | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "variants",
          "type": "VariantIndexConfiguration | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "ProductInterestTriggerResultResultSettings",
      "extends": [],
      "properties": [
        {
          "name": "selectedProductProperties",
          "type": "SelectedProductDetailsPropertiesSettings | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "selectedVariantProperties",
          "type": "SelectedVariantDetailsPropertiesSettings | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "ProductInterestTriggerResultTriggerConfiguration",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "custom",
          "type": "Record<string, string | null>",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "id",
          "type": "string",
          "docs": "/** @format uuid */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "name",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "description",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "group",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "enabled",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "created",
          "type": "string",
          "docs": "/** @format date-time */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "createdBy",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "modified",
          "type": "string",
          "docs": "/** @format date-time */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "modifiedBy",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "withinTimeSpanMinutes",
          "type": "number",
          "docs": "/** @format int32 */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "settings",
          "type": "Record<string, string | null>",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "userConditions",
          "type": "UserConditionCollection | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "ProductPerformanceResult",
      "extends": [],
      "properties": [
        {
          "name": "product",
          "type": "ProductResult | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "classifications",
          "type": "ProductPerformanceResultClassificationMetrics[] | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "ProductPerformanceResultCartMetrics",
      "extends": [],
      "properties": [
        {
          "name": "opened",
          "type": "number",
          "docs": "/** @format int32 */",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "ProductPerformanceResultCategoryMetrics",
      "extends": [],
      "properties": [
        {
          "name": "category",
          "type": "CategoryNameAndIdResult | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "immediateParent",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "rank",
          "type": "ProductPerformanceResultViewsAndSalesMetrics | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "ProductPerformanceResultClassificationMetrics",
      "extends": [],
      "properties": [
        {
          "name": "combination",
          "type": "Record<string, string | null>",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "views",
          "type": "ProductPerformanceResultViewsMetrics | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "sales",
          "type": "ProductPerformanceResultSalesMetrics | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "carts",
          "type": "ProductPerformanceResultCartMetrics | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "rank",
          "type": "ProductPerformanceResultRankMetrics | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "ProductPerformanceResultRankMetrics",
      "extends": [],
      "properties": [
        {
          "name": "overall",
          "type": "ProductPerformanceResultViewsAndSalesMetrics | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "withinCategories",
          "type": "ProductPerformanceResultCategoryMetrics[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "withinBrand",
          "type": "ProductPerformanceResultViewsAndSalesMetrics | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "ProductPerformanceResultSalesByCurrency",
      "extends": [],
      "properties": [
        {
          "name": "currency",
          "type": "Currency | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "orders",
          "type": "number",
          "docs": "/** @format int32 */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "averageSubtotal",
          "type": "number",
          "docs": "/** @format double */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "units",
          "type": "number",
          "docs": "/** @format double */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "revenue",
          "type": "number",
          "docs": "/** @format double */",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "ProductPerformanceResultSalesMetrics",
      "extends": [],
      "properties": [
        {
          "name": "orders",
          "type": "number",
          "docs": "/** @format int32 */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "averageNoOfLineItems",
          "type": "number",
          "docs": "/** @format double */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "currencies",
          "type": "ProductPerformanceResultSalesByCurrency[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "withKnownCartOpener",
          "type": "ProductPerformanceResultSalesWithKnownCartOpenerMetrics | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "ProductPerformanceResultSalesWithKnownCartOpenerMetrics",
      "extends": [],
      "properties": [
        {
          "name": "orders",
          "type": "number",
          "docs": "/** @format int32 */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "opened",
          "type": "number",
          "docs": "/** @format int32 */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "openedPercent",
          "type": "number",
          "docs": "/** @format double */",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "ProductPerformanceResultViewsAndSalesMetrics",
      "extends": [],
      "properties": [
        {
          "name": "byViews",
          "type": "number",
          "docs": "/** @format double */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "bySales",
          "type": "number",
          "docs": "/** @format double */",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "ProductPerformanceResultViewsMetrics",
      "extends": [],
      "properties": [
        {
          "name": "total",
          "type": "number",
          "docs": "/** @format int32 */",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "ProductProductHighlightPropsHighlightSettings",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "enabled",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "limit",
          "type": "HighlightSettings2ProductProductHighlightPropsHighlightSettings2Limits",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "highlightable",
          "type": "ProductHighlightProps",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "shape",
          "type": "HighlightSettings2ProductProductHighlightPropsHighlightSettings2ResponseShape",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "ProductPropertySelector",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "ProductQuerySelectedPropertiesSettings",
      "extends": [],
      "properties": [
        {
          "name": "selectedProductDetailsProperties",
          "type": "SelectedProductDetailsPropertiesSettings | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "selectedVariantDetailsProperties",
          "type": "SelectedVariantDetailsPropertiesSettings | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "ProductRecommendationRequest",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "settings",
          "type": "ProductRecommendationRequestSettings",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "language",
          "type": "Language | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "user",
          "type": "User | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "relevanceModifiers",
          "type": "RelevanceModifierCollection",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "filters",
          "type": "FilterCollection",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "displayedAtLocationType",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "currency",
          "type": "Currency | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "channel",
          "type": "Channel | null",
          "docs": "/** @deprecated */",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "custom",
          "type": "Record<string, string | null>",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "ProductRecommendationRequestSettings",
      "extends": [],
      "properties": [
        {
          "name": "numberOfRecommendations",
          "type": "number",
          "docs": "/** @format int32 */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "allowFillIfNecessaryToReachNumberOfRecommendations",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "allowReplacingOfRecentlyShownRecommendations",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "recommendVariant",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "selectedProductProperties",
          "type": "SelectedProductPropertiesSettings | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "selectedVariantProperties",
          "type": "SelectedVariantPropertiesSettings | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "custom",
          "type": "Record<string, string>",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "prioritizeDiversityBetweenRequests",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "allowProductsCurrentlyInCart",
          "type": "boolean | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "selectedBrandProperties",
          "type": "SelectedBrandPropertiesSettings | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "prioritizeResultsNotRecommendedWithinSeconds",
          "type": "number | null",
          "docs": "/** @format int32 */",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "ProductResult",
      "extends": [],
      "properties": [
        {
          "name": "productId",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "displayName",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "variant",
          "type": "VariantResult | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "rank",
          "type": "number",
          "docs": "/** @format int32 */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "assortments",
          "type": "number[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "data",
          "type": "Record<string, DataValue>",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "categoryPaths",
          "type": "CategoryPathResult[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "purchasedByUser",
          "type": "PurchasedByUserInfo | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "viewedByUser",
          "type": "ViewedByUserInfo | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "custom",
          "type": "Record<string, string | null>",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "listPrice",
          "type": "number | null",
          "docs": "/** @format double */",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "salesPrice",
          "type": "number | null",
          "docs": "/** @format double */",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "brand",
          "type": "BrandResult | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "allVariants",
          "type": "VariantResult[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "purchasedByUserCompany",
          "type": "PurchasedByUserCompanyInfo | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "viewedByUserCompany",
          "type": "ViewedByUserCompanyInfo | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "filteredVariants",
          "type": "VariantResult[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "highlight",
          "type": "HighlightResult | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "score",
          "type": "Score | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "ProductResultDetails",
      "extends": [],
      "properties": [
        {
          "name": "productId",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "displayName",
          "type": "Multilingual | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "variant",
          "type": "VariantResult | null",
          "docs": "/** @deprecated */",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "assortments",
          "type": "number[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "data",
          "type": "Record<string, DataValue>",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "categoryPaths",
          "type": "CategoryPathResultDetails[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "purchasedByUser",
          "type": "PurchasedByUserInfo | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "viewedByUser",
          "type": "ViewedByUserInfo | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "custom",
          "type": "Record<string, string | null>",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "allVariants",
          "type": "VariantResultDetails[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "createdUtc",
          "type": "string",
          "docs": "/** @format date-time */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "lastPurchasedUtc",
          "type": "string | null",
          "docs": "/** @format date-time */",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "lastViewedUtc",
          "type": "string | null",
          "docs": "/** @format date-time */",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "containedInTotalNumberOfOrders",
          "type": "number",
          "docs": "/** @format int64 */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "viewedTotalNumberOfTimes",
          "type": "number",
          "docs": "/** @format int64 */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "purchasedByDifferentNumberOfUsers",
          "type": "number",
          "docs": "/** @format int32 */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "viewedByDifferentNumberOfUsers",
          "type": "number",
          "docs": "/** @format int32 */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "disabled",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "deleted",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "listPrice",
          "type": "MultiCurrency | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "salesPrice",
          "type": "MultiCurrency | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "brand",
          "type": "BrandResultDetails | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "filteredVariants",
          "type": "VariantResultDetails[] | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "ProductSearchResultConstraint",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "ProductSortBySpecification",
      "extends": [],
      "properties": [
        {
          "name": "value",
          "type": "| ProductAttributeSorting\r\n    | ProductDataObjectSorting\r\n    | ProductDataSorting\r\n    | ProductPopularitySorting\r\n    | ProductRelevanceSorting\r\n    | ProductVariantAttributeSorting\r\n    | ProductVariantSpecificationSorting\r\n    | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "ProductSorting",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "order",
          "type": "\"Ascending\" | \"Descending\"",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "thenBy",
          "type": "| ProductAttributeSorting\r\n    | ProductDataObjectSorting\r\n    | ProductDataSorting\r\n    | ProductPopularitySorting\r\n    | ProductRelevanceSorting\r\n    | ProductVariantAttributeSorting\r\n    | ProductVariantSpecificationSorting\r\n    | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "ProductVariant",
      "extends": [],
      "properties": [
        {
          "name": "id",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "displayName",
          "type": "Multilingual | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "assortments",
          "type": "number[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "specification",
          "type": "Record<string, string | null>",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "data",
          "type": "Record<string, DataValue>",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "custom",
          "type": "Record<string, string>",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "listPrice",
          "type": "MultiCurrency | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "salesPrice",
          "type": "MultiCurrency | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "Promotion",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "name",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "locations",
          "type": "PromotionLocationCollection | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "PromotionCollection",
      "extends": [],
      "properties": [
        {
          "name": "promotions",
          "type": "ProductPromotion[]",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "PromotionLocation",
      "extends": [],
      "properties": [
        {
          "name": "key",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "placements",
          "type": "PromotionLocationPlacementCollection | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "PromotionLocationCollection",
      "extends": [],
      "properties": [
        {
          "name": "items",
          "type": "PromotionLocation[] | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "PromotionLocationPlacement",
      "extends": [],
      "properties": [
        {
          "name": "key",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "thresholds",
          "type": "ScoreThresholds | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "PromotionLocationPlacementCollection",
      "extends": [],
      "properties": [
        {
          "name": "items",
          "type": "PromotionLocationPlacement[] | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "PromotionSpecification",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "PromotionSpecificationCollection",
      "extends": [],
      "properties": [
        {
          "name": "productPromotion",
          "type": "ProductPromotionSpecification | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "PromotionSpecificationVariation",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "PromotionSpecificationVariationCollection",
      "extends": [],
      "properties": [
        {
          "name": "productPromotion",
          "type": "ProductPromotionSpecificationVariation | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "PurchaseQualifiers",
      "extends": [],
      "properties": [
        {
          "name": "sinceMinutesAgo",
          "type": "number",
          "docs": "/** @format int32 */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "byUser",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "byUserCompany",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "byUserParentCompany",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "PurchasedByUserCompanyInfo",
      "extends": [],
      "properties": [
        {
          "name": "mostRecentPurchasedUtc",
          "type": "string",
          "docs": "/** @format date-time */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "totalNumberOfTimesPurchased",
          "type": "number",
          "docs": "/** @format int64 */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "purchasedByParentCompany",
          "type": "PurchasedByUserCompanyInfo | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "PurchasedByUserInfo",
      "extends": [],
      "properties": [
        {
          "name": "mostRecentPurchasedUtc",
          "type": "string",
          "docs": "/** @format date-time */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "totalNumberOfTimesPurchased",
          "type": "number",
          "docs": "/** @format int64 */",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "RebuildStatus",
      "extends": [],
      "properties": [
        {
          "name": "isRebuilding",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "isStale",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "lastRebuildStarted",
          "type": "string",
          "docs": "/** @format date-time */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "lastRebuildCompleted",
          "type": "string",
          "docs": "/** @format date-time */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "lastRebuildOpportunity",
          "type": "string",
          "docs": "/** @format date-time */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "lastRebuildDuration",
          "type": "string",
          "docs": "/** @format date-span */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "isBuilt",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "isPartial",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "lastMarkedAsStale",
          "type": "string",
          "docs": "/** @format date-time */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "staleDuration",
          "type": "string",
          "docs": "/** @format date-span */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "lastStaleDuration",
          "type": "string",
          "docs": "/** @format date-span */",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "RecentlyViewedByUserRelevanceModifier",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "sinceUtc",
          "type": "string | null",
          "docs": "/** @format date-time */",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "ifPreviouslyViewedByUserMultiplyWeightBy",
          "type": "number",
          "docs": "/** @format double */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "ifNotPreviouslyViewedByUserMultiplyWeightBy",
          "type": "number",
          "docs": "/** @format double */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "sinceMinutesAgo",
          "type": "number | null",
          "docs": "/** @format int32 */",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "filters",
          "type": "FilterCollection | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "custom",
          "type": "Record<string, string | null>",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "RecommendPopularSearchTermSettings",
      "extends": [],
      "properties": [
        {
          "name": "targetEntityTypes",
          "type": "(\"Product\" | \"Variant\" | \"ProductCategory\" | \"Brand\" | \"Content\" | \"ContentCategory\")[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "numberOfRecommendations",
          "type": "number",
          "docs": "/** @format int32 */",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "RecommendationRequest",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "language",
          "type": "Language | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "user",
          "type": "User | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "relevanceModifiers",
          "type": "RelevanceModifierCollection",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "filters",
          "type": "FilterCollection",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "displayedAtLocationType",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "currency",
          "type": "Currency | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "channel",
          "type": "Channel | null",
          "docs": "/** @deprecated */",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "custom",
          "type": "Record<string, string | null>",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "RecommendationResponse",
      "extends": [],
      "properties": [
        {
          "name": "custom",
          "type": "Record<string, string | null>",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "statistics",
          "type": "Statistics | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "RecommendationSettings",
      "extends": [],
      "properties": [
        {
          "name": "take",
          "type": "number | null",
          "docs": "/** @format int32 */",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "onlyIncludeRecommendationsWhenLessResultsThan",
          "type": "number | null",
          "docs": "/** @format int32 */",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "RecommendationTypeCollection",
      "extends": [],
      "properties": [
        {
          "name": "unionCodes",
          "type": "number[] | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "RedirectResult",
      "extends": [],
      "properties": [
        {
          "name": "id",
          "type": "string",
          "docs": "/** @format uuid */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "condition",
          "type": "SearchTermCondition | RetailMediaSearchTermCondition",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "destination",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "data",
          "type": "Record<string, string>",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "RedirectRuleSaveSearchRulesRequest",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "rules",
          "type": "RedirectRule[]",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "modifiedBy",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "custom",
          "type": "Record<string, string | null>",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "RedirectRuleSaveSearchRulesResponse",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "rules",
          "type": "RedirectRule[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "statistics",
          "type": "Statistics | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "RedirectRuleSearchRulesResponse",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "rules",
          "type": "RedirectRule[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "hits",
          "type": "number",
          "docs": "/** @format int32 */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "statistics",
          "type": "Statistics | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "RedirectRulesRequestSortBySearchRulesRequest",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "filters",
          "type": "SearchRuleFilters",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "sorting",
          "type": "RedirectRulesRequestSortBySorting",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "skip",
          "type": "number",
          "docs": "/** @format int32 */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "take",
          "type": "number",
          "docs": "/** @format int32 */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "custom",
          "type": "Record<string, string | null>",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "RedirectRulesRequestSortBySorting",
      "extends": [],
      "properties": [
        {
          "name": "sortBy",
          "type": "\"Created\" | \"Modified\"",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "sortOrder",
          "type": "\"Ascending\" | \"Descending\"",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "RelevanceModifier",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "filters",
          "type": "FilterCollection | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "custom",
          "type": "Record<string, string | null>",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "RelevanceModifierCollection",
      "extends": [],
      "properties": [
        {
          "name": "items",
          "type": "| (\r\n        | BrandIdRelevanceModifier\r\n        | ContentCategoryDataRelevanceModifier\r\n        | ContentCategoryRecentlyViewedByUserRelevanceModifier\r\n        | ContentDataRelevanceModifier\r\n        | ContentRecentlyViewedByUserRelevanceModifier\r\n        | ProductAssortmentRelevanceModifier\r\n        | ProductCategoryDataRelevanceModifier\r\n        | ProductCategoryIdRelevanceModifier\r\n        | ProductCategoryRecentlyViewedByUserRelevanceModifier\r\n        | ProductDataRelevanceModifier\r\n        | ProductIdRelevanceModifier\r\n        | ProductListPriceRelevanceModifier\r\n        | ProductRecentlyPurchasedByCompanyRelevanceModifier\r\n        | ProductRecentlyPurchasedByUserCompanyRelevanceModifier\r\n        | ProductRecentlyPurchasedByUserRelevanceModifier\r\n        | ProductRecentlyViewedByCompanyRelevanceModifier\r\n        | ProductRecentlyViewedByUserCompanyRelevanceModifier\r\n        | ProductRecentlyViewedByUserRelevanceModifier\r\n        | ProductSalesPriceRelevanceModifier\r\n        | UserFavoriteProductRelevanceModifier\r\n        | VariantAssortmentRelevanceModifier\r\n        | VariantDataRelevanceModifier\r\n        | VariantIdRelevanceModifier\r\n        | VariantListPriceRelevanceModifier\r\n        | VariantSalesPriceRelevanceModifier\r\n        | VariantSpecificationsInCommonRelevanceModifier\r\n        | VariantSpecificationValueRelevanceModifier\r\n      )[]\r\n    | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "RequestConfiguration",
      "extends": [],
      "properties": [
        {
          "name": "filters",
          "type": "\"Merge\" | \"Suppress\"",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "relevanceModifiers",
          "type": "\"Merge\" | \"Suppress\"",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "overriddenProductRecommendationRequestSettings",
          "type": "OverriddenProductRecommendationRequestSettings | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "overriddenContentRecommendationRequestSettings",
          "type": "OverriddenContentRecommendationRequestSettings | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "RequestContextFilter",
      "extends": [],
      "properties": [
        {
          "name": "recommendations",
          "type": "RecommendationTypeCollection | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "searches",
          "type": "SearchTypeCollection | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "locations",
          "type": "string[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "languages",
          "type": "Language[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "currencies",
          "type": "Currency[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "filters",
          "type": "RequestFilterCriteria | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "RequestFilterCriteria",
      "extends": [],
      "properties": [
        {
          "name": "includes",
          "type": "FilterCollection | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "excludes",
          "type": "FilterCollection | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "count",
          "type": "Int32NullableRange | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "RetailMediaConditions",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "RetailMediaEntity2AdvertiserEntityStateAdvertiserMetadataValuesRetailMediaEntity2EntityFilters",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "term",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "states",
          "type": "(\"Active\" | \"Inactive\" | \"Archived\")[] | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "RetailMediaEntity2CampaignEntityStateCampaignMetadataValuesRetailMediaEntity2EntityFilters",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "term",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "states",
          "type": "(\"Proposed\" | \"Approved\" | \"Archived\")[] | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "RetailMediaEntity2LocationEntityStateLocationMetadataValuesRetailMediaEntity2EntityFilters",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "term",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "states",
          "type": "(\"Active\" | \"Inactive\" | \"Archived\")[] | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "RetailMediaQuery",
      "extends": [],
      "properties": [
        {
          "name": "location",
          "type": "RetailMediaQueryLocationSelector",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "RetailMediaQueryLocationSelector",
      "extends": [],
      "properties": [
        {
          "name": "key",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "variation",
          "type": "RetailMediaQueryVariationSelector",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "placements",
          "type": "RetailMediaQueryPlacementSelector[]",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "RetailMediaQueryPlacementSelector",
      "extends": [],
      "properties": [
        {
          "name": "key",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "RetailMediaQueryVariationSelector",
      "extends": [],
      "properties": [
        {
          "name": "key",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "RetailMediaResult",
      "extends": [],
      "properties": [
        {
          "name": "placements",
          "type": "Record<string, RetailMediaResultPlacement>",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "RetailMediaResultPlacement",
      "extends": [],
      "properties": [
        {
          "name": "results",
          "type": "RetailMediaResultPlacementResultEntity[] | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "RetailMediaResultPlacementResultEntity",
      "extends": [],
      "properties": [
        {
          "name": "promotedProduct",
          "type": "RetailMediaResultPlacementResultEntityProduct | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "RetailMediaResultPlacementResultEntityProduct",
      "extends": [],
      "properties": [
        {
          "name": "result",
          "type": "ProductResult",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "RetailMediaSearchTermConditionCollection",
      "extends": [],
      "properties": [
        {
          "name": "values",
          "type": "RetailMediaSearchTermCondition[] | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "Score",
      "extends": [],
      "properties": [
        {
          "name": "relevance",
          "type": "number | null",
          "docs": "/** @format float */",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "adjusted",
          "type": "number | null",
          "docs": "/** @format float */",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "ScoreThresholds",
      "extends": [],
      "properties": [
        {
          "name": "relevance",
          "type": "number | null",
          "docs": "/** @format float */",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "adjusted",
          "type": "number | null",
          "docs": "/** @format float */",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "SearchIndex",
      "extends": [],
      "properties": [
        {
          "name": "id",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "description",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "enabled",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "isDefault",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "created",
          "type": "string",
          "docs": "/** @format date-time */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "createdBy",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "modified",
          "type": "string",
          "docs": "/** @format date-time */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "modifiedBy",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "custom",
          "type": "Record<string, string | null>",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "configuration",
          "type": "IndexConfiguration | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "rebuildStatus",
          "type": "RebuildStatus | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "SearchIndexSelector",
      "extends": [],
      "properties": [
        {
          "name": "id",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "SearchRequest",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "language",
          "type": "Language | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "currency",
          "type": "Currency | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "user",
          "type": "User | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "displayedAtLocation",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "relevanceModifiers",
          "type": "RelevanceModifierCollection | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "filters",
          "type": "FilterCollection | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "indexSelector",
          "type": "SearchIndexSelector | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "postFilters",
          "type": "FilterCollection | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "channel",
          "type": "Channel | null",
          "docs": "/** @deprecated */",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "custom",
          "type": "Record<string, string | null>",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "SearchResponse",
      "extends": [],
      "properties": [
        {
          "name": "custom",
          "type": "Record<string, string | null>",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "statistics",
          "type": "Statistics | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "SearchResultModifierRuleRuleAction",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "SearchResultModifierRuleSaveSearchRulesRequest",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "rules",
          "type": "SearchResultModifierRule[]",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "modifiedBy",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "custom",
          "type": "Record<string, string | null>",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "SearchResultModifierRuleSaveSearchRulesResponse",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "rules",
          "type": "SearchResultModifierRule[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "statistics",
          "type": "Statistics | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "SearchResultModifierRuleSearchRulesResponse",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "rules",
          "type": "SearchResultModifierRule[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "hits",
          "type": "number",
          "docs": "/** @format int32 */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "statistics",
          "type": "Statistics | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "SearchResultModifierRulesRequestSortBySearchRulesRequest",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "filters",
          "type": "SearchRuleFilters",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "sorting",
          "type": "SearchResultModifierRulesRequestSortBySorting",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "skip",
          "type": "number",
          "docs": "/** @format int32 */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "take",
          "type": "number",
          "docs": "/** @format int32 */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "custom",
          "type": "Record<string, string | null>",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "SearchResultModifierRulesRequestSortBySorting",
      "extends": [],
      "properties": [
        {
          "name": "sortBy",
          "type": "\"Created\" | \"Modified\"",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "sortOrder",
          "type": "\"Ascending\" | \"Descending\"",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "SearchRule",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "id",
          "type": "string",
          "docs": "/** @format uuid */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "indexes",
          "type": "ApplicableIndexes | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "languages",
          "type": "ApplicableLanguages | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "created",
          "type": "string",
          "docs": "/** @format date-time */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "createdBy",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "modified",
          "type": "string",
          "docs": "/** @format date-time */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "modifiedBy",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "approved",
          "type": "string | null",
          "docs": "/** @format date-time */",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "approvedBy",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "isApproved",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "SearchRuleFilters",
      "extends": [],
      "properties": [
        {
          "name": "term",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "approved",
          "type": "boolean | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "id",
          "type": "string | null",
          "docs": "/** @format uuid */",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "SearchSettings",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "SearchTermCondition",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "kind",
          "type": "\"Equals\" | \"StartsWith\" | \"EndsWith\" | \"Contains\" | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "value",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "andConditions",
          "type": "(SearchTermCondition | RetailMediaSearchTermCondition)[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "orConditions",
          "type": "(SearchTermCondition | RetailMediaSearchTermCondition)[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "minimumLength",
          "type": "number | null",
          "docs": "/** @format int32 */",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "SearchTermModifierRuleRuleAction",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "SearchTermModifierRuleSaveSearchRulesRequest",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "rules",
          "type": "SearchTermModifierRule[]",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "modifiedBy",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "custom",
          "type": "Record<string, string | null>",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "SearchTermModifierRuleSaveSearchRulesResponse",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "rules",
          "type": "SearchTermModifierRule[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "statistics",
          "type": "Statistics | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "SearchTermModifierRuleSearchRulesResponse",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "rules",
          "type": "SearchTermModifierRule[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "hits",
          "type": "number",
          "docs": "/** @format int32 */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "statistics",
          "type": "Statistics | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "SearchTermModifierRulesRequestSortBySearchRulesRequest",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "filters",
          "type": "SearchRuleFilters",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "sorting",
          "type": "SearchTermModifierRulesRequestSortBySorting",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "skip",
          "type": "number",
          "docs": "/** @format int32 */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "take",
          "type": "number",
          "docs": "/** @format int32 */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "custom",
          "type": "Record<string, string | null>",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "SearchTermModifierRulesRequestSortBySorting",
      "extends": [],
      "properties": [
        {
          "name": "sortBy",
          "type": "\"Created\" | \"Modified\"",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "sortOrder",
          "type": "\"Ascending\" | \"Descending\"",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "SearchTermPredictionResult",
      "extends": [],
      "properties": [
        {
          "name": "term",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "rank",
          "type": "number",
          "docs": "/** @format int32 */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "expectedResultTypes",
          "type": "ExpectedSearchTermResult[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "type",
          "type": "\"Match\" | \"WordContinuation\" | \"Word\" | \"WordSequence\"",
          "docs": "/** @deprecated */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "correctedWordsMask",
          "type": "boolean[] | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "SearchTermResult",
      "extends": [],
      "properties": [
        {
          "name": "term",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "rank",
          "type": "number",
          "docs": "/** @format int32 */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "expectedResultTypes",
          "type": "ExpectedSearchTermResult[] | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "SearchTypeCollection",
      "extends": [],
      "properties": [
        {
          "name": "unionCodes",
          "type": "number[] | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "SelectedBrandPropertiesSettings",
      "extends": [],
      "properties": [
        {
          "name": "displayName",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "assortments",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "viewedByUserInfo",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "allData",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "dataKeys",
          "type": "string[] | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "SelectedCategoryPropertiesSettings",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "displayName",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "paths",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "assortments",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "viewedByUserInfo",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "allData",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "dataKeys",
          "type": "string[] | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "SelectedContentPropertiesSettings",
      "extends": [],
      "properties": [
        {
          "name": "displayName",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "categoryPaths",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "assortments",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "allData",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "viewedByUserInfo",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "dataKeys",
          "type": "string[] | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "SelectedProductDetailsPropertiesSettings",
      "extends": [],
      "properties": [
        {
          "name": "displayName",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "categoryPaths",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "assortments",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "pricing",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "allData",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "viewedByUserInfo",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "purchasedByUserInfo",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "brand",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "allVariants",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "dataKeys",
          "type": "string[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "viewedByUserCompanyInfo",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "purchasedByUserCompanyInfo",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "filteredVariants",
          "type": "FilteredVariantsSettings | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "SelectedProductPropertiesSettings",
      "extends": [],
      "properties": [
        {
          "name": "displayName",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "categoryPaths",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "assortments",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "pricing",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "allData",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "viewedByUserInfo",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "purchasedByUserInfo",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "brand",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "allVariants",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "dataKeys",
          "type": "string[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "viewedByUserCompanyInfo",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "purchasedByUserCompanyInfo",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "filteredVariants",
          "type": "FilteredVariantsSettings | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "score",
          "type": "SelectedScorePropertiesSettings | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "SelectedScorePropertiesSettings",
      "extends": [],
      "properties": [
        {
          "name": "relevance",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "adjusted",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "SelectedVariantDetailsPropertiesSettings",
      "extends": [],
      "properties": [
        {
          "name": "displayName",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "pricing",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "allSpecifications",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "assortments",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "allData",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "dataKeys",
          "type": "string[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "specificationKeys",
          "type": "string[] | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "SelectedVariantPropertiesSettings",
      "extends": [],
      "properties": [
        {
          "name": "displayName",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "pricing",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "allSpecifications",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "assortments",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "allData",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "dataKeys",
          "type": "string[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "specificationKeys",
          "type": "string[] | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "SignificantDataValue",
      "extends": [],
      "properties": [
        {
          "name": "key",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "comparer",
          "type": "\"Equals\" | \"NumericPercentDifference\" | \"StringSimilarity\" | \"KeyExists\" | \"CollectionOverlap\"",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "significance",
          "type": "number",
          "docs": "/** @format double */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "transformer",
          "type": "TrimStringTransformer | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "SimilarProductsEvaluationSettings",
      "extends": [],
      "properties": [
        {
          "name": "significanceOfSimilaritiesInDisplayName",
          "type": "number",
          "docs": "/** @format double */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "productDisplayNameTransformer",
          "type": "TrimStringTransformer | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "significanceOfSimilarListPrice",
          "type": "number",
          "docs": "/** @format double */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "significanceOfCommonImmediateParentCategories",
          "type": "number",
          "docs": "/** @format double */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "significanceOfCommonParentsParentCategories",
          "type": "number",
          "docs": "/** @format double */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "significanceOfCommonAncestorCategories",
          "type": "number",
          "docs": "/** @format double */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "significanceOfCommonProductDataKeys",
          "type": "number",
          "docs": "/** @format double */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "significanceOfIdenticalProductDataValues",
          "type": "number",
          "docs": "/** @format double */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "significantProductDataFields",
          "type": "SignificantDataValue[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "significanceOfSimilarSalesPrice",
          "type": "number",
          "docs": "/** @format double */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "significanceOfSimilarBrand",
          "type": "number",
          "docs": "/** @format double */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "variantEvaluationSettings",
          "type": "SimilarVariantEvaluationSettings | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "SimilarVariantEvaluationSettings",
      "extends": [],
      "properties": [
        {
          "name": "significanceOfSimilaritiesInDisplayName",
          "type": "number | null",
          "docs": "/** @format double */",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "significanceOfSimilarListPrice",
          "type": "number | null",
          "docs": "/** @format double */",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "significanceOfSimilarSalesPrice",
          "type": "number | null",
          "docs": "/** @format double */",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "significanceOfCommonDataKeys",
          "type": "number | null",
          "docs": "/** @format double */",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "significanceOfIdenticalDataValues",
          "type": "number | null",
          "docs": "/** @format double */",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "significantDataFields",
          "type": "SignificantDataValue[] | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "SpecificationsIndexConfiguration",
      "extends": [],
      "properties": [
        {
          "name": "keys",
          "type": "Record<string, FieldIndexConfiguration>",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "unspecified",
          "type": "FieldIndexConfiguration | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "Statistics",
      "extends": [],
      "properties": [
        {
          "name": "serverTimeInMs",
          "type": "number",
          "docs": "/** @format double */",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "StemmingRuleSaveSearchRulesRequest",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "rules",
          "type": "StemmingRule[]",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "modifiedBy",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "custom",
          "type": "Record<string, string | null>",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "StemmingRuleSaveSearchRulesResponse",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "rules",
          "type": "StemmingRule[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "statistics",
          "type": "Statistics | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "StemmingRuleSearchRulesResponse",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "rules",
          "type": "StemmingRule[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "hits",
          "type": "number",
          "docs": "/** @format int32 */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "statistics",
          "type": "Statistics | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "StemmingRulesRequestSortBySearchRulesRequest",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "filters",
          "type": "SearchRuleFilters",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "sorting",
          "type": "StemmingRulesRequestSortBySorting",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "skip",
          "type": "number",
          "docs": "/** @format int32 */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "take",
          "type": "number",
          "docs": "/** @format int32 */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "custom",
          "type": "Record<string, string | null>",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "StemmingRulesRequestSortBySorting",
      "extends": [],
      "properties": [
        {
          "name": "sortBy",
          "type": "\"Created\" | \"Modified\"",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "sortOrder",
          "type": "\"Ascending\" | \"Descending\"",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "StringAvailableFacetValue",
      "extends": [],
      "properties": [
        {
          "name": "value",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "hits",
          "type": "number",
          "docs": "/** @format int32 */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "selected",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "StringBrandNameAndIdResultValueFacetResult",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "selected",
          "type": "string[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "available",
          "type": "BrandNameAndIdResultAvailableFacetValue[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "field",
          "type": "\"Category\" | \"Assortment\" | \"ListPrice\" | \"SalesPrice\" | \"Brand\" | \"Data\" | \"VariantSpecification\" | \"User\"",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "StringCategoryNameAndIdResultValueFacetResult",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "selected",
          "type": "string[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "available",
          "type": "CategoryNameAndIdResultAvailableFacetValue[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "field",
          "type": "\"Category\" | \"Assortment\" | \"ListPrice\" | \"SalesPrice\" | \"Brand\" | \"Data\" | \"VariantSpecification\" | \"User\"",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "StringContentDataValueFacet",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "key",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "collectionFilterType",
          "type": "\"Or\" | \"And\" | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "selected",
          "type": "string[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "field",
          "type": "\"Category\" | \"Assortment\" | \"ListPrice\" | \"SalesPrice\" | \"Brand\" | \"Data\" | \"VariantSpecification\" | \"User\"",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "settings",
          "type": "FacetSettings | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "StringContentDataValueFacetResult",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "key",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "collectionFilterType",
          "type": "\"Or\" | \"And\" | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "selected",
          "type": "string[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "available",
          "type": "StringAvailableFacetValue[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "field",
          "type": "\"Category\" | \"Assortment\" | \"ListPrice\" | \"SalesPrice\" | \"Brand\" | \"Data\" | \"VariantSpecification\" | \"User\"",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "StringDataObjectValueFacet",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "key",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "collectionFilterType",
          "type": "\"Or\" | \"And\" | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "selected",
          "type": "string[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "field",
          "type": "\"Category\" | \"Assortment\" | \"ListPrice\" | \"SalesPrice\" | \"Brand\" | \"Data\" | \"VariantSpecification\" | \"User\"",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "settings",
          "type": "FacetSettings | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "StringDataObjectValueFacetResult",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "key",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "collectionFilterType",
          "type": "\"Or\" | \"And\" | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "selected",
          "type": "string[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "available",
          "type": "StringAvailableFacetValue[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "field",
          "type": "\"Category\" | \"Assortment\" | \"ListPrice\" | \"SalesPrice\" | \"Brand\" | \"Data\" | \"VariantSpecification\" | \"User\"",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "StringFieldSnippetMatchArrayKeyValuePair",
      "extends": [],
      "properties": [
        {
          "name": "key",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "value",
          "type": "HighlightResultSnippetFieldSnippetMatch[]",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "StringProductCategoryDataValueFacet",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "key",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "collectionFilterType",
          "type": "\"Or\" | \"And\" | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "selected",
          "type": "string[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "field",
          "type": "\"Category\" | \"Assortment\" | \"ListPrice\" | \"SalesPrice\" | \"Brand\" | \"Data\" | \"VariantSpecification\" | \"User\"",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "settings",
          "type": "FacetSettings | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "StringProductCategoryDataValueFacetResult",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "key",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "collectionFilterType",
          "type": "\"Or\" | \"And\" | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "selected",
          "type": "string[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "available",
          "type": "StringAvailableFacetValue[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "field",
          "type": "\"Category\" | \"Assortment\" | \"ListPrice\" | \"SalesPrice\" | \"Brand\" | \"Data\" | \"VariantSpecification\" | \"User\"",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "StringProductDataValueFacet",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "dataSelectionStrategy",
          "type": "\"Product\" | \"Variant\" | \"VariantWithFallbackToProduct\" | \"ProductWithFallbackToVariant\"",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "key",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "collectionFilterType",
          "type": "\"Or\" | \"And\" | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "selected",
          "type": "string[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "field",
          "type": "\"Category\" | \"Assortment\" | \"ListPrice\" | \"SalesPrice\" | \"Brand\" | \"Data\" | \"VariantSpecification\" | \"User\"",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "settings",
          "type": "FacetSettings | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "StringProductDataValueFacetResult",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "dataSelectionStrategy",
          "type": "\"Product\" | \"Variant\" | \"VariantWithFallbackToProduct\" | \"ProductWithFallbackToVariant\"",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "key",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "collectionFilterType",
          "type": "\"Or\" | \"And\" | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "selected",
          "type": "string[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "available",
          "type": "StringAvailableFacetValue[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "field",
          "type": "\"Category\" | \"Assortment\" | \"ListPrice\" | \"SalesPrice\" | \"Brand\" | \"Data\" | \"VariantSpecification\" | \"User\"",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "StringRange1ArrayKeyValuePair",
      "extends": [],
      "properties": [
        {
          "name": "key",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "value",
          "type": "Int32Range[]",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "StringStringKeyValuePair",
      "extends": [],
      "properties": [
        {
          "name": "key",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "value",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "StringValueFacet",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "selected",
          "type": "string[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "field",
          "type": "\"Category\" | \"Assortment\" | \"ListPrice\" | \"SalesPrice\" | \"Brand\" | \"Data\" | \"VariantSpecification\" | \"User\"",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "settings",
          "type": "FacetSettings | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "StringValueFacetResult",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "selected",
          "type": "string[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "available",
          "type": "StringAvailableFacetValue[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "field",
          "type": "\"Category\" | \"Assortment\" | \"ListPrice\" | \"SalesPrice\" | \"Brand\" | \"Data\" | \"VariantSpecification\" | \"User\"",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "Synonym",
      "extends": [],
      "properties": [
        {
          "name": "id",
          "type": "string",
          "docs": "/** @format uuid */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "type",
          "type": "\"OneWay\" | \"Multidirectional\"",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "indexes",
          "type": "string[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "languages",
          "type": "Language[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "created",
          "type": "string",
          "docs": "/** @format date-time */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "createdBy",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "modified",
          "type": "string",
          "docs": "/** @format date-time */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "modifiedBy",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "from",
          "type": "string[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "words",
          "type": "string[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "approved",
          "type": "string | null",
          "docs": "/** @format date-time */",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "approvedBy",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "usages",
          "type": "number",
          "docs": "/** @format int64 */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "isApproved",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "allowInPredictions",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "SynonymsRequestSynonymSortingSorting",
      "extends": [],
      "properties": [
        {
          "name": "sortBy",
          "type": "| \"Created\"\r\n    | \"CreatedBy\"\r\n    | \"Modified\"\r\n    | \"ModifiedBy\"\r\n    | \"Approved\"\r\n    | \"ApprovedBy\"\r\n    | \"Usages\"\r\n    | \"Type\"\r\n    | \"Predictable\"",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "sortOrder",
          "type": "\"Ascending\" | \"Descending\"",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "TargetConditionConfiguration",
      "extends": [],
      "properties": [
        {
          "name": "filters",
          "type": "FilterCollection | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "TimedResponse",
      "extends": [],
      "properties": [
        {
          "name": "statistics",
          "type": "Statistics | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "Trackable",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "custom",
          "type": "Record<string, string | null>",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "TrackingRequest",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "custom",
          "type": "Record<string, string | null>",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "TrimStringTransformer",
      "extends": [],
      "properties": [
        {
          "name": "valuesToTrim",
          "type": "string[]",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "User",
      "extends": [],
      "properties": [
        {
          "name": "authenticatedId",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "temporaryId",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "email",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "classifications",
          "type": "Record<string, string | null>",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "identifiers",
          "type": "Record<string, string | null>",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "data",
          "type": "Record<string, DataValue>",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "fingerprint",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "channel",
          "type": "Channel | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "company",
          "type": "Company | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "custom",
          "type": "Record<string, string>",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "UserActivityTriggerResultTriggerConfiguration",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "custom",
          "type": "Record<string, string | null>",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "id",
          "type": "string",
          "docs": "/** @format uuid */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "name",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "description",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "group",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "enabled",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "created",
          "type": "string",
          "docs": "/** @format date-time */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "createdBy",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "modified",
          "type": "string",
          "docs": "/** @format date-time */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "modifiedBy",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "withinTimeSpanMinutes",
          "type": "number",
          "docs": "/** @format int32 */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "settings",
          "type": "Record<string, string | null>",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "userConditions",
          "type": "UserConditionCollection | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "UserAssociatedCompanyResultDetails",
      "extends": [],
      "properties": [
        {
          "name": "id",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "parent",
          "type": "UserAssociatedCompanyResultDetails | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "data",
          "type": "Record<string, DataValue>",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "createdUtc",
          "type": "string",
          "docs": "/** @format date-time */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "lastAccessedUtc",
          "type": "string",
          "docs": "/** @format date-time */",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "UserCondition",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "custom",
          "type": "Record<string, string | null>",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "UserConditionCollection",
      "extends": [],
      "properties": [
        {
          "name": "items",
          "type": "| (\r\n        | AndCondition\r\n        | HasActivityCondition\r\n        | HasAuthenticatedIdCondition\r\n        | HasClassificationCondition\r\n        | HasDataCondition\r\n        | HasEmailCondition\r\n        | HasIdentifierCondition\r\n        | HasLineItemsInCartCondition\r\n        | HasModifiedCartCondition\r\n        | HasPlacedOrderCondition\r\n        | HasRecentlyReceivedSameTriggerCondition\r\n        | HasRecentlyReceivedTriggerCondition\r\n        | OrCondition\r\n      )[]\r\n    | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "UserConditionConfiguration",
      "extends": [],
      "properties": [
        {
          "name": "conditions",
          "type": "UserConditionCollection | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "UserQueryCriteria",
      "extends": [],
      "properties": [
        {
          "name": "authenticatedId",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "temporaryId",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "email",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "language",
          "type": "Language | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "currency",
          "type": "Currency | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "identifiers",
          "type": "Record<string, string>",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "UserResultDetails",
      "extends": [],
      "properties": [
        {
          "name": "authenticatedId",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "temporaryId",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "email",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "classifications",
          "type": "Record<string, string | null>",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "lastCartUpdateUtc",
          "type": "string | null",
          "docs": "/** @format date-time */",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "lastActivityUtc",
          "type": "string",
          "docs": "/** @format date-time */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "lastOrderUtc",
          "type": "string | null",
          "docs": "/** @format date-time */",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "carts",
          "type": "Record<string, CartDetails>",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "lastActiveCartName",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "totalNumberOfOrders",
          "type": "number",
          "docs": "/** @format int32 */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "identifiers",
          "type": "Record<string, string | null>",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "key",
          "type": "number",
          "docs": "/** @format int32 */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "data",
          "type": "Record<string, DataValue>",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "temporaryIds",
          "type": "string[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "channel",
          "type": "Channel | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "company",
          "type": "UserAssociatedCompanyResultDetails | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "ValueCondition",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "ValueConditionCollection",
      "extends": [],
      "properties": [
        {
          "name": "items",
          "type": "| (\r\n        | ContainsCondition\r\n        | DistinctCondition\r\n        | EqualsCondition\r\n        | GreaterThanCondition\r\n        | HasValueCondition\r\n        | LessThanCondition\r\n        | RelativeDateTimeCondition\r\n      )[]\r\n    | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "ValueSelector",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "VariantChangeTriggerResultSettings",
      "extends": [],
      "properties": [
        {
          "name": "selectedProductProperties",
          "type": "SelectedProductDetailsPropertiesSettings | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "selectedVariantProperties",
          "type": "SelectedVariantDetailsPropertiesSettings | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "VariantChangeTriggerResultVariantChangeTriggerResultSettingsVariantPropertySelectorEntityChangeTriggerConfiguration",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "entityPropertySelector",
          "type": "ObservableVariantAttributeSelector | ObservableVariantDataValueSelector",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "beforeChangeFilters",
          "type": "FilterCollection",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "afterChangeFilters",
          "type": "FilterCollection",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "change",
          "type": "IChange",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "resultSettings",
          "type": "VariantChangeTriggerResultSettings",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "custom",
          "type": "Record<string, string | null>",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "id",
          "type": "string",
          "docs": "/** @format uuid */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "name",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "description",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "group",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "enabled",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "created",
          "type": "string",
          "docs": "/** @format date-time */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "createdBy",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "modified",
          "type": "string",
          "docs": "/** @format date-time */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "modifiedBy",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "withinTimeSpanMinutes",
          "type": "number",
          "docs": "/** @format int32 */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "settings",
          "type": "Record<string, string | null>",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "userConditions",
          "type": "UserConditionCollection | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "VariantIndexConfiguration",
      "extends": [],
      "properties": [
        {
          "name": "id",
          "type": "FieldIndexConfiguration | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "displayName",
          "type": "FieldIndexConfiguration | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "specifications",
          "type": "SpecificationsIndexConfiguration | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "data",
          "type": "DataIndexConfiguration | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "VariantPropertySelector",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "VariantResult",
      "extends": [],
      "properties": [
        {
          "name": "variantId",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "displayName",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "specification",
          "type": "Record<string, string | null>",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "assortments",
          "type": "number[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "data",
          "type": "Record<string, DataValue>",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "rank",
          "type": "number",
          "docs": "/** @format int32 */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "custom",
          "type": "Record<string, string | null>",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "listPrice",
          "type": "number | null",
          "docs": "/** @format double */",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "salesPrice",
          "type": "number | null",
          "docs": "/** @format double */",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "VariantResultDetails",
      "extends": [],
      "properties": [
        {
          "name": "variantId",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "displayName",
          "type": "Multilingual | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "specification",
          "type": "Record<string, string | null>",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "assortments",
          "type": "number[] | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "data",
          "type": "Record<string, DataValue>",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "custom",
          "type": "Record<string, string | null>",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "listPrice",
          "type": "MultiCurrency | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "salesPrice",
          "type": "MultiCurrency | null",
          "nullable": true,
          "defaultValue": null
        },
        {
          "name": "disabled",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "VariantSearchSettings",
      "extends": [],
      "properties": [
        {
          "name": "excludeResultsWithoutVariant",
          "type": "boolean",
          "docs": "/** @deprecated */",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "ViewedByUserCompanyInfo",
      "extends": [],
      "properties": [
        {
          "name": "mostRecentlyViewedUtc",
          "type": "string",
          "docs": "/** @format date-time */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "totalNumberOfTimesViewed",
          "type": "number",
          "docs": "/** @format int64 */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "viewedByParentCompany",
          "type": "ViewedByUserCompanyInfo | null",
          "nullable": true,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "ViewedByUserInfo",
      "extends": [],
      "properties": [
        {
          "name": "mostRecentlyViewedUtc",
          "type": "string",
          "docs": "/** @format date-time */",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "totalNumberOfTimesViewed",
          "type": "number",
          "docs": "/** @format int32 */",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Constructor",
      "name": "constructor",
      "parent": "DataValueBase",
      "parentKind": "Class",
      "dependencies": [
        "DataValueTypes",
        "T"
      ],
      "parameters": [
        {
          "name": "type",
          "type": "DataValueTypes",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "value",
          "type": "T",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ]
    },
    {
      "kind": "Class",
      "name": "DataValueBase",
      "dependencies": [
        "DataValueTypes",
        "T",
        "boolean"
      ],
      "isAbstract": true,
      "isDefault": false,
      "properties": [
        {
          "name": "type",
          "type": "DataValueTypes",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "value",
          "type": "T",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "isCollection",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null
        }
      ],
      "extends": null
    },
    {
      "kind": "Constructor",
      "name": "constructor",
      "parent": "StringDataValue",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": [
        {
          "name": "value",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ]
    },
    {
      "kind": "Class",
      "name": "StringDataValue",
      "dependencies": [],
      "isAbstract": false,
      "isDefault": false,
      "properties": [],
      "extends": [
        "DataValueBase<string>"
      ]
    },
    {
      "kind": "Constructor",
      "name": "constructor",
      "parent": "StringCollectionDataValue",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": [
        {
          "name": "value",
          "type": "string[]",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ]
    },
    {
      "kind": "Class",
      "name": "StringCollectionDataValue",
      "dependencies": [],
      "isAbstract": false,
      "isDefault": false,
      "properties": [],
      "extends": [
        "DataValueBase<CollectionWithType<string>>"
      ]
    },
    {
      "kind": "Constructor",
      "name": "constructor",
      "parent": "MultilingualCollectionDataValue",
      "parentKind": "Class",
      "dependencies": [
        "{ values: string[], language: string }[]"
      ],
      "parameters": [
        {
          "name": "values",
          "type": "{ values: string[], language: string }[]",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ]
    },
    {
      "kind": "Class",
      "name": "MultilingualCollectionDataValue",
      "dependencies": [],
      "isAbstract": false,
      "isDefault": false,
      "properties": [],
      "extends": [
        "DataValueBase<MultilingualCollectionWithType<MultilingualCollectionValue>>"
      ]
    },
    {
      "kind": "Constructor",
      "name": "constructor",
      "parent": "NumberDataValue",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": [
        {
          "name": "value",
          "type": "number",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ]
    },
    {
      "kind": "Class",
      "name": "NumberDataValue",
      "dependencies": [],
      "isAbstract": false,
      "isDefault": false,
      "properties": [],
      "extends": [
        "DataValueBase<number>"
      ]
    },
    {
      "kind": "Constructor",
      "name": "constructor",
      "parent": "DoubleCollectionDataValue",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": [
        {
          "name": "value",
          "type": "number[]",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ]
    },
    {
      "kind": "Class",
      "name": "DoubleCollectionDataValue",
      "dependencies": [],
      "isAbstract": false,
      "isDefault": false,
      "properties": [],
      "extends": [
        "DataValueBase<CollectionWithType<number>>"
      ]
    },
    {
      "kind": "Constructor",
      "name": "constructor",
      "parent": "BooleanDataValue",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": [
        {
          "name": "value",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ]
    },
    {
      "kind": "Class",
      "name": "BooleanDataValue",
      "dependencies": [],
      "isAbstract": false,
      "isDefault": false,
      "properties": [],
      "extends": [
        "DataValueBase<boolean>"
      ]
    },
    {
      "kind": "Constructor",
      "name": "constructor",
      "parent": "BooleanCollectionDataValue",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": [
        {
          "name": "value",
          "type": "boolean[]",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ]
    },
    {
      "kind": "Class",
      "name": "BooleanCollectionDataValue",
      "dependencies": [],
      "isAbstract": false,
      "isDefault": false,
      "properties": [],
      "extends": [
        "DataValueBase<CollectionWithType<boolean>>"
      ]
    },
    {
      "kind": "Constructor",
      "name": "constructor",
      "parent": "MultiCurrencyDataValue",
      "parentKind": "Class",
      "dependencies": [
        "{ amount: number, currency: string }[]"
      ],
      "parameters": [
        {
          "name": "values",
          "type": "{ amount: number, currency: string }[]",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ]
    },
    {
      "kind": "Class",
      "name": "MultiCurrencyDataValue",
      "dependencies": [],
      "isAbstract": false,
      "isDefault": false,
      "properties": [],
      "extends": [
        "DataValueBase<MultiCurrencyWithType>"
      ]
    },
    {
      "kind": "Constructor",
      "name": "constructor",
      "parent": "MultilingualDataValue",
      "parentKind": "Class",
      "dependencies": [
        "{ value: string, language: string }[]"
      ],
      "parameters": [
        {
          "name": "values",
          "type": "{ value: string, language: string }[]",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ]
    },
    {
      "kind": "Class",
      "name": "MultilingualDataValue",
      "dependencies": [],
      "isAbstract": false,
      "isDefault": false,
      "properties": [],
      "extends": [
        "DataValueBase<MultilingualWithType>"
      ]
    },
    {
      "kind": "Constructor",
      "name": "constructor",
      "parent": "ObjectDataValue",
      "parentKind": "Class",
      "dependencies": [
        "{ [key: string]: DataValue }"
      ],
      "parameters": [
        {
          "name": "dataObject",
          "type": "{ [key: string]: DataValue }",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ]
    },
    {
      "kind": "Class",
      "name": "ObjectDataValue",
      "dependencies": [],
      "isAbstract": false,
      "isDefault": false,
      "properties": [],
      "extends": [
        "DataValueBase<DataObjectWithType>"
      ]
    },
    {
      "kind": "Constructor",
      "name": "constructor",
      "parent": "ObjectCollectionDataValue",
      "parentKind": "Class",
      "dependencies": [
        "{ [key: string]: DataValue }[]"
      ],
      "parameters": [
        {
          "name": "dataObjects",
          "type": "{ [key: string]: DataValue }[]",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ]
    },
    {
      "kind": "Class",
      "name": "ObjectCollectionDataValue",
      "dependencies": [],
      "isAbstract": false,
      "isDefault": false,
      "properties": [],
      "extends": [
        "DataValueBase<CollectionWithType<DataObjectWithType>>"
      ]
    },
    {
      "kind": "Interface",
      "name": "CollectionWithType",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "$values",
          "type": "T[]",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "MultilingualCollectionWithType",
      "extends": [],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "values",
          "type": "T[]",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "MultiCurrencyWithType",
      "extends": [
        "MultiCurrency"
      ],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "MultilingualWithType",
      "extends": [
        "Multilingual"
      ],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Interface",
      "name": "DataObjectWithType",
      "extends": [
        "DataObject"
      ],
      "properties": [
        {
          "name": "$type",
          "type": "string",
          "nullable": false,
          "defaultValue": null
        }
      ]
    },
    {
      "kind": "Method",
      "name": "addBrandAssortmentFilter",
      "parent": "BrandFilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Adds a brand assortment filter to the request.\r\n     * @param assortmentIds - Array of assortment IDs or a single ID.\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The BrandFilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "FilterOptions"
      ],
      "parameters": [
        {
          "name": "assortmentIds",
          "type": "number[] | number",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "FilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addBrandIdFilter",
      "parent": "BrandFilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Filters the request to only return the specified brands.\r\n     * @param brandIds - Array of brand IDs or a single ID.\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The BrandFilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "FilterOptions"
      ],
      "parameters": [
        {
          "name": "brandIds",
          "type": "string | string[]",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "FilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addBrandDataFilter",
      "parent": "BrandFilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Adds a brand data filter to the request.\r\n     * @param key - Data key.\r\n     * @param conditionBuilder - Function to build the condition.\r\n     * @param mustMatchAllConditions - If true, all conditions must be met (default is true).\r\n     * @param filterOutIfKeyIsNotFound - If true, filters out brands without the key (default is true).\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The BrandFilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "(builder: ConditionBuilder) => void",
        "EntityDataFilterOptions"
      ],
      "parameters": [
        {
          "name": "key",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "conditionBuilder",
          "type": "(builder: ConditionBuilder) => void",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "mustMatchAllConditions",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "true",
          "isReadonly": false
        },
        {
          "name": "filterOutIfKeyIsNotFound",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "true",
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "EntityDataFilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addBrandDataHasKeyFilter",
      "parent": "BrandFilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Adds a brand has key filter to the request.\r\n     * @param key - Data key.\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The BrandFilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "FilterOptions"
      ],
      "parameters": [
        {
          "name": "key",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "FilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addBrandDisabledFilter",
      "parent": "BrandFilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Adds a brand is disabled filter to the request. Only works for brand queries, not in searches or recommendations.\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The BrandFilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "FilterOptions"
      ],
      "parameters": [
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "FilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Constructor",
      "name": "constructor",
      "parent": "BrandFilterBuilder",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": []
    },
    {
      "kind": "Class",
      "name": "BrandFilterBuilder",
      "dependencies": [],
      "isAbstract": false,
      "isDefault": false,
      "properties": [],
      "extends": [
        "FilterBuilderBase<BrandFilterBuilder>"
      ]
    },
    {
      "kind": "Method",
      "name": "addCompanyIdFilter",
      "parent": "CompanyFilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Filters the request to only return the specified companies.\r\n     * @param companyIds - Array of company IDs or a single ID.\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The CompanyFilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "FilterOptions"
      ],
      "parameters": [
        {
          "name": "companyIds",
          "type": "string | string[]",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "FilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addCompanyDataFilter",
      "parent": "CompanyFilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Adds a company data filter to the request.\r\n     * @param key - Data key.\r\n     * @param conditionBuilder - Function to build the condition.\r\n     * @param mustMatchAllConditions - If true, all conditions must be met (default is true).\r\n     * @param filterOutIfKeyIsNotFound - If true, filters out companies without the key (default is true).\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The CompanyFilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "(builder: ConditionBuilder) => void",
        "EntityDataFilterOptions"
      ],
      "parameters": [
        {
          "name": "key",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "conditionBuilder",
          "type": "(builder: ConditionBuilder) => void",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "mustMatchAllConditions",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "true",
          "isReadonly": false
        },
        {
          "name": "filterOutIfKeyIsNotFound",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "true",
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "EntityDataFilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addCompanyDataHasKeyFilter",
      "parent": "CompanyFilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Adds a company has key filter to the request.\r\n     * @param key - Data key.\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The CompanyFilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "FilterOptions"
      ],
      "parameters": [
        {
          "name": "key",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "FilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addCompanyDisabledFilter",
      "parent": "CompanyFilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Adds a company is disabled filter to the request. Only works for company queries, not in searches or recommendations.\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The CompanyFilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "FilterOptions"
      ],
      "parameters": [
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "FilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Constructor",
      "name": "constructor",
      "parent": "CompanyFilterBuilder",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": []
    },
    {
      "kind": "Class",
      "name": "CompanyFilterBuilder",
      "dependencies": [],
      "isAbstract": false,
      "isDefault": false,
      "properties": [],
      "extends": [
        "FilterBuilderBase<CompanyFilterBuilder>"
      ]
    },
    {
      "kind": "Method",
      "name": "addContentAssortmentFilter",
      "parent": "ContentFilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Adds a content assortment filter to the request.\r\n     * @param assortmentIds - Array of assortment IDs or a single ID.\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The ContentFilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "FilterOptions"
      ],
      "parameters": [
        {
          "name": "assortmentIds",
          "type": "number[] | number",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "FilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addContentCategoryAssortmentFilter",
      "parent": "ContentFilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Adds a content category assortment filter to the request.\r\n     * @param assortmentIds - Array of assortment IDs or a single ID.\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The ContentFilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "FilterOptions"
      ],
      "parameters": [
        {
          "name": "assortmentIds",
          "type": "number[] | number",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "FilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addContentCategoryIdFilter",
      "parent": "ContentFilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Filters the request to only return contents within the specified categories.\r\n     * @param evaluationScope - Scope of the category evaluation (ImmediateParent, ImmediateParentOrItsParent, Ancestor).\r\n     * @param categoryIds - Array of category IDs or a single ID.\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The ContentFilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "'ImmediateParent' | 'ImmediateParentOrItsParent' | 'Ancestor'",
        "FilterOptions"
      ],
      "parameters": [
        {
          "name": "evaluationScope",
          "type": "'ImmediateParent' | 'ImmediateParentOrItsParent' | 'Ancestor'",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "categoryIds",
          "type": "string[] | string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "FilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addContentIdFilter",
      "parent": "ContentFilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Filters the request to only return the specified contents.\r\n     * @param contentIds - Array of content IDs or a single ID.\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The ContentFilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "FilterOptions"
      ],
      "parameters": [
        {
          "name": "contentIds",
          "type": "string | string[]",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "FilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addContentCategoryLevelFilter",
      "parent": "ContentFilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Adds a content category level filter to the request.\r\n     * @param levels - Array of category levels or a single level.\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The ContentFilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "FilterOptions"
      ],
      "parameters": [
        {
          "name": "levels",
          "type": "number | number[]",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "FilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addContentCategoryHasParentFilter",
      "parent": "ContentFilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Adds a content category has parent filter to the request.\r\n     * @param categoryIds - Array of category IDs or a single ID (optional).\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The ContentFilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "FilterOptions"
      ],
      "parameters": [
        {
          "name": "categoryIds",
          "type": "string | string[]",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "FilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addContentCategoryHasChildFilter",
      "parent": "ContentFilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Adds a content category has child filter to the request.\r\n     * @param categoryIds - Array of category IDs or a single ID (optional).\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The ContentFilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "FilterOptions"
      ],
      "parameters": [
        {
          "name": "categoryIds",
          "type": "string | string[]",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "FilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addContentCategoryHasAncestorFilter",
      "parent": "ContentFilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Adds a content category has ancestor filter to the request.\r\n     * @param categoryIds - Array of category IDs or a single ID (optional).\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The ContentFilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "FilterOptions"
      ],
      "parameters": [
        {
          "name": "categoryIds",
          "type": "string | string[]",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "FilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addContentCategoryHasContentsFilter",
      "parent": "ContentFilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Adds a content category has contents filter to the request ensuring that only categories with content in them are returned.\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The ContentFilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "FilterOptions"
      ],
      "parameters": [
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "FilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addContentCategoryDataFilter",
      "parent": "ContentFilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Adds a content category data filter to the request.\r\n     * @param key - Data key.\r\n     * @param conditionBuilder - Function to build the condition.\r\n     * @param mustMatchAllConditions - If true, all conditions must be met (default is true).\r\n     * @param filterOutIfKeyIsNotFound - If true, filters out categories without the key (default is true).\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The ContentFilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "(builder: ConditionBuilder) => void",
        "EntityDataFilterOptions"
      ],
      "parameters": [
        {
          "name": "key",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "conditionBuilder",
          "type": "(builder: ConditionBuilder) => void",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "mustMatchAllConditions",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "true",
          "isReadonly": false
        },
        {
          "name": "filterOutIfKeyIsNotFound",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "true",
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "EntityDataFilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addContentDataFilter",
      "parent": "ContentFilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Adds a content data filter to the request.\r\n     * @param key - Data key.\r\n     * @param conditionBuilder - Function to build the condition.\r\n     * @param mustMatchAllConditions - If true, all conditions must be met (default is true).\r\n     * @param filterOutIfKeyIsNotFound - If true, filters out contents without the key (default is true).\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The ContentFilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "(builder: ConditionBuilder) => void",
        "EntityDataFilterOptions"
      ],
      "parameters": [
        {
          "name": "key",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "conditionBuilder",
          "type": "(builder: ConditionBuilder) => void",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "mustMatchAllConditions",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "true",
          "isReadonly": false
        },
        {
          "name": "filterOutIfKeyIsNotFound",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "true",
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "EntityDataFilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addContentCategoryDataHasKeyFilter",
      "parent": "ContentFilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Adds a content category has key filter to the request.\r\n     * @param key - Data key.\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The ContentFilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "FilterOptions"
      ],
      "parameters": [
        {
          "name": "key",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "FilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addContentCategoryDisabledFilter",
      "parent": "ContentFilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Adds a content category is disabled filter to the request. Only works for content queries, not in searches or recommendations.\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The ContentFilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "FilterOptions"
      ],
      "parameters": [
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "FilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addContentCategoryRecentlyViewedByUserFilter",
      "parent": "ContentFilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Adds a filter to only return content categories recently viewed by the user.\r\n     * @param sinceMinutesAgo - Time in minutes since the category was viewed.\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The ContentFilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "FilterOptions"
      ],
      "parameters": [
        {
          "name": "sinceMinutesAgo",
          "type": "number",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "FilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addContentDataHasKeyFilter",
      "parent": "ContentFilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Adds a content has key filter to the request.\r\n     * @param key - Data key.\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The ContentFilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "FilterOptions"
      ],
      "parameters": [
        {
          "name": "key",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "FilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addContentDisabledFilter",
      "parent": "ContentFilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Adds a content is disabled filter to the request. Only works for content queries, not in searches or recommendations.\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The ContentFilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "FilterOptions"
      ],
      "parameters": [
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "FilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addContentRecentlyViewedByUserFilter",
      "parent": "ContentFilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Adds a filter to only return content recently viewed by the user.\r\n     * @param sinceMinutesAgo - Time in minutes since the content was viewed.\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The ContentFilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "FilterOptions"
      ],
      "parameters": [
        {
          "name": "sinceMinutesAgo",
          "type": "number",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "FilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addContentHasCategoriesFilter",
      "parent": "ContentFilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Adds a content has categories filter to the request.\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The ContentFilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "FilterOptions"
      ],
      "parameters": [
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "FilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Constructor",
      "name": "constructor",
      "parent": "ContentFilterBuilder",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": []
    },
    {
      "kind": "Class",
      "name": "ContentFilterBuilder",
      "dependencies": [],
      "isAbstract": false,
      "isDefault": false,
      "properties": [],
      "extends": [
        "FilterBuilderBase<ContentFilterBuilder>"
      ]
    },
    {
      "kind": "Method",
      "name": "and",
      "parent": "FilterBuilderBase",
      "parentKind": "Class",
      "docs": "/**\r\n     * Adds an AND filter to the request.\r\n     * @param filterBuilder - Function to build the AND filter.\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The FilterBuilderBase instance for chaining.\r\n     */",
      "dependencies": [
        "(builder: TFilterBuilder) => void",
        "FilterOptions"
      ],
      "parameters": [
        {
          "name": "filterBuilder",
          "type": "(builder: TFilterBuilder) => void",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "FilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "or",
      "parent": "FilterBuilderBase",
      "parentKind": "Class",
      "docs": "/**\r\n     * Adds an OR filter to the request.\r\n     * @param filterBuilder - Function to build the OR filter.\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The FilterBuilderBase instance for chaining.\r\n     */",
      "dependencies": [
        "(builder: TFilterBuilder) => void",
        "FilterOptions"
      ],
      "parameters": [
        {
          "name": "filterBuilder",
          "type": "(builder: TFilterBuilder) => void",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "FilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "reset",
      "parent": "FilterBuilderBase",
      "parentKind": "Class",
      "docs": "/**\r\n     * Resets the filters.\r\n     * @returns The FilterBuilderBase instance for chaining.\r\n     */",
      "dependencies": [],
      "parameters": [],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "build",
      "parent": "FilterBuilderBase",
      "parentKind": "Class",
      "docs": "/**\r\n     * Builds the filter collection.\r\n     * @returns The FilterCollection or null if no filters are added.\r\n     */",
      "dependencies": [],
      "parameters": [],
      "returnType": "FilterCollection | null",
      "isAsync": false
    },
    {
      "kind": "Constructor",
      "name": "constructor",
      "parent": "FilterBuilderBase",
      "parentKind": "Class",
      "parameters": [
        {
          "name": "TFilterBuilderCtor",
          "type": "Constructor<TFilterBuilder>",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false,
          "scope": "private"
        }
      ]
    },
    {
      "kind": "Class",
      "name": "FilterBuilderBase",
      "dependencies": [],
      "isAbstract": true,
      "isDefault": false,
      "properties": [],
      "extends": null
    },
    {
      "kind": "Method",
      "name": "addProductAssortmentFilter",
      "parent": "ProductFilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Adds a product assortment filter to the request.\r\n     * @param assortmentIds - Array of assortment IDs or a single ID.\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The ProductFilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "FilterOptions"
      ],
      "parameters": [
        {
          "name": "assortmentIds",
          "type": "number[] | number",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "FilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addProductCategoryAssortmentFilter",
      "parent": "ProductFilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Adds a product category assortment filter to the request.\r\n     * @param assortmentIds - Array of assortment IDs or a single ID.\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The ProductFilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "FilterOptions"
      ],
      "parameters": [
        {
          "name": "assortmentIds",
          "type": "number[] | number",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "FilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addProductCategoryIdFilter",
      "parent": "ProductFilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Filters the request to only return products within the specified categories.\r\n     * @param evaluationScope - Scope of the category evaluation (ImmediateParent, ImmediateParentOrItsParent, Ancestor).\r\n     * @param categoryIds - Array of category IDs or a single ID.\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The ProductFilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "'ImmediateParent' | 'ImmediateParentOrItsParent' | 'Ancestor'",
        "FilterOptions"
      ],
      "parameters": [
        {
          "name": "evaluationScope",
          "type": "'ImmediateParent' | 'ImmediateParentOrItsParent' | 'Ancestor'",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "categoryIds",
          "type": "string[] | string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "FilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addProductCategoryDataFilter",
      "parent": "ProductFilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Adds a product category data filter to the request.\r\n     * @param key - Data key.\r\n     * @param conditionBuilder - Function to build the condition.\r\n     * @param mustMatchAllConditions - If true, all conditions must be met (default is true).\r\n     * @param filterOutIfKeyIsNotFound - If true, filters out categories without the key (default is true).\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The ProductFilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "(builder: ConditionBuilder) => void",
        "EntityDataFilterOptions"
      ],
      "parameters": [
        {
          "name": "key",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "conditionBuilder",
          "type": "(builder: ConditionBuilder) => void",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "mustMatchAllConditions",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "true",
          "isReadonly": false
        },
        {
          "name": "filterOutIfKeyIsNotFound",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "true",
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "EntityDataFilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addProductIdFilter",
      "parent": "ProductFilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Filters the request to only return the specified products.\r\n     * @param productIds - Array of product IDs or a single ID.\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The ProductFilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "FilterOptions"
      ],
      "parameters": [
        {
          "name": "productIds",
          "type": "string | string[]",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "FilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addProductHasVariantsFilter",
      "parent": "ProductFilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Adds a range filter to the request ensuring the product has a certain range of variants.\r\n     * @param lowerBound - Lower bound of the range (inclusive).\r\n     * @param upperBound - Upper bound of the range (inclusive).\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The ProductFilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "FilterOptions & { includeDisabled?: boolean }"
      ],
      "parameters": [
        {
          "name": "lowerBound",
          "type": "number",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "upperBound",
          "type": "number",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "FilterOptions & { includeDisabled?: boolean }",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addProductRecentlyPurchasedByUserFilter",
      "parent": "ProductFilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Filters the request to only return products purchased since a certain point in time.\r\n     * @param sinceUtc - Date-time string indicating the point in time.\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The ProductFilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "FilterOptions"
      ],
      "parameters": [
        {
          "name": "sinceUtc",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "FilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addProductRecentlyViewedByUserFilter",
      "parent": "ProductFilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Filters the request to only return products viewed since a certain point in time.\r\n     * @param sinceUtc - Date-time string indicating the point in time.\r\n     * @param negated - If true\r\n\r\n, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The ProductFilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "FilterOptions"
      ],
      "parameters": [
        {
          "name": "sinceUtc",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "FilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addProductSalesPriceFilter",
      "parent": "ProductFilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Filters the request to only return products within a certain sales price range.\r\n     * @param lowerBound - Lower bound of the price range (inclusive).\r\n     * @param upperBound - Upper bound of the price range (inclusive).\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The ProductFilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "FilterOptions"
      ],
      "parameters": [
        {
          "name": "lowerBound",
          "type": "number",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "upperBound",
          "type": "number",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "FilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addProductListPriceFilter",
      "parent": "ProductFilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Filters the request to only return products within a certain list price range.\r\n     * @param lowerBound - Lower bound of the price range (inclusive).\r\n     * @param upperBound - Upper bound of the price range (inclusive).\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The ProductFilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "FilterOptions"
      ],
      "parameters": [
        {
          "name": "lowerBound",
          "type": "number",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "upperBound",
          "type": "number",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "FilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addProductDisplayNameFilter",
      "parent": "ProductFilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Adds a product display name filter to the request.\r\n     * @param conditionBuilder - Function to build the condition.\r\n     * @param mustMatchAllConditions - If true, all conditions must be met (default is true).\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The ProductFilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "(builder: ConditionBuilder) => void",
        "FilterOptions"
      ],
      "parameters": [
        {
          "name": "conditionBuilder",
          "type": "(builder: ConditionBuilder) => void",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "mustMatchAllConditions",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "true",
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "FilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addProductAndVariantIdFilter",
      "parent": "ProductFilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Adds a product and variant ID filter to the request.\r\n     * @param products - Array of product and variant IDs or a single ID.\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The ProductFilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "ProductAndVariantId | ProductAndVariantId[]",
        "FilterOptions"
      ],
      "parameters": [
        {
          "name": "products",
          "type": "ProductAndVariantId | ProductAndVariantId[]",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "FilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addProductCategoryLevelFilter",
      "parent": "ProductFilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Adds a product category level filter to the request.\r\n     * @param levels - Array of category levels or a single level.\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The ProductFilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "FilterOptions"
      ],
      "parameters": [
        {
          "name": "levels",
          "type": "number | number[]",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "FilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addProductCategoryHasParentFilter",
      "parent": "ProductFilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Adds a product category has parent filter to the request.\r\n     * @param categoryIds - Array of category IDs or a single ID (optional).\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The ProductFilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "FilterOptions"
      ],
      "parameters": [
        {
          "name": "categoryIds",
          "type": "string | string[]",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "FilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addProductCategoryHasChildFilter",
      "parent": "ProductFilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Adds a product category has child filter to the request.\r\n     * @param categoryIds - Array of category IDs or a single ID (optional).\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The ProductFilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "FilterOptions"
      ],
      "parameters": [
        {
          "name": "categoryIds",
          "type": "string | string[]",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "FilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addProductCategoryHasAncestorFilter",
      "parent": "ProductFilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Adds a product category has ancestor filter to the request.\r\n     * @param categoryIds - Array of category IDs or a single ID (optional).\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The ProductFilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "FilterOptions"
      ],
      "parameters": [
        {
          "name": "categoryIds",
          "type": "string | string[]",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "FilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addProductCategoryHasProductsFilter",
      "parent": "ProductFilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Adds a product category has products filter to the request ensuring that only categories with products in them are returned.\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The ProductFilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "FilterOptions"
      ],
      "parameters": [
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "FilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addProductDataFilter",
      "parent": "ProductFilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Adds a product data filter to the request.\r\n     * @param key - Data key.\r\n     * @param conditionBuilder - Function to build the condition.\r\n     * @param mustMatchAllConditions - If true, all conditions must be met (default is true).\r\n     * @param filterOutIfKeyIsNotFound - If true, filters out products without the key (default is true).\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The ProductFilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "(builder: ConditionBuilder) => void",
        "EntityDataFilterOptions"
      ],
      "parameters": [
        {
          "name": "key",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "conditionBuilder",
          "type": "(builder: ConditionBuilder) => void",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "mustMatchAllConditions",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "true",
          "isReadonly": false
        },
        {
          "name": "filterOutIfKeyIsNotFound",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "true",
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "EntityDataFilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addProductCategoryDataHasKeyFilter",
      "parent": "ProductFilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Adds a product category has key filter to the request.\r\n     * @param key - Data key.\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The ProductFilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "FilterOptions"
      ],
      "parameters": [
        {
          "name": "key",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "FilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addProductCategoryDisabledFilter",
      "parent": "ProductFilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Adds a product category is disabled filter to the request. Only works for product queries, not in searches or recommendations.\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The ProductFilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "FilterOptions"
      ],
      "parameters": [
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "FilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addProductCategoryRecentlyViewedByUserFilter",
      "parent": "ProductFilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Adds a product category recently viewed by user filter to the request.\r\n     * @param sinceMinutesAgo - Time in minutes since the category was viewed.\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The ProductFilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "FilterOptions"
      ],
      "parameters": [
        {
          "name": "sinceMinutesAgo",
          "type": "number",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "FilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addProductDataHasKeyFilter",
      "parent": "ProductFilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Adds a product has key filter to the request.\r\n     * @param key - Data key.\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The ProductFilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "FilterOptions"
      ],
      "parameters": [
        {
          "name": "key",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "FilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addProductDisabledFilter",
      "parent": "ProductFilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Adds a product is disabled filter to the request. Only works for product queries, not in searches or recommendations.\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The ProductFilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "FilterOptions"
      ],
      "parameters": [
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "FilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addProductHasCategoriesFilter",
      "parent": "ProductFilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Adds a product has categories filter to the request.\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The ProductFilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "FilterOptions"
      ],
      "parameters": [
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "FilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addProductRecentlyPurchasedByCompanyFilter",
      "parent": "ProductFilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Adds a filter to only return products recently purchased by a company.\r\n     * @param sinceMinutesAgo - Time in minutes since the purchase.\r\n     * @param companyIds - Array of company IDs or a single ID.\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The ProductFilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "FilterOptions"
      ],
      "parameters": [
        {
          "name": "sinceMinutesAgo",
          "type": "number",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "companyIds",
          "type": "string | string[]",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "FilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addProductRecentlyPurchasedByUserCompanyFilter",
      "parent": "ProductFilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Adds a filter to only return products recently purchased by the user's company.\r\n     * @param sinceMinutesAgo - Time in minutes since the purchase.\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The ProductFilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "FilterOptions"
      ],
      "parameters": [
        {
          "name": "sinceMinutesAgo",
          "type": "number",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "FilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addProductRecentlyPurchasedByUserParentCompanyFilter",
      "parent": "ProductFilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Adds a filter to only return products recently purchased by the user's parent company.\r\n     * @param sinceMinutesAgo - Time in minutes since the purchase.\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The ProductFilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "FilterOptions"
      ],
      "parameters": [
        {
          "name": "sinceMinutesAgo",
          "type": "number",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "FilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addProductRecentlyViewedByCompanyFilter",
      "parent": "ProductFilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Adds a filter to only return products recently viewed by a company.\r\n     * @param sinceMinutesAgo - Time in minutes since the view.\r\n     * @param companyIds - Array of company IDs or a single ID.\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The ProductFilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "FilterOptions"
      ],
      "parameters": [
        {
          "name": "sinceMinutesAgo",
          "type": "number",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "companyIds",
          "type": "string | string[]",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "FilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addProductRecentlyViewedByUserCompanyFilter",
      "parent": "ProductFilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Adds a filter to only return products recently viewed by the user's company.\r\n     * @param sinceMinutesAgo - Time in minutes since the view.\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The ProductFilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "FilterOptions"
      ],
      "parameters": [
        {
          "name": "sinceMinutesAgo",
          "type": "number",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "FilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addProductRecentlyViewedByUserParentCompanyFilter",
      "parent": "ProductFilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Adds a filter to only return products recently viewed by the user's parent company.\r\n     * @param sinceMinutesAgo - Time in minutes since the view.\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The ProductFilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "FilterOptions"
      ],
      "parameters": [
        {
          "name": "sinceMinutesAgo",
          "type": "number",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "FilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addProductInCartFilter",
      "parent": "ProductFilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Adds a filter to only return products in the user's cart.\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The ProductFilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "FilterOptions"
      ],
      "parameters": [
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "FilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Constructor",
      "name": "constructor",
      "parent": "ProductFilterBuilder",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": []
    },
    {
      "kind": "Class",
      "name": "ProductFilterBuilder",
      "dependencies": [],
      "isAbstract": false,
      "isDefault": false,
      "properties": [],
      "extends": [
        "FilterBuilderBase<ProductFilterBuilder>"
      ]
    },
    {
      "kind": "Method",
      "name": "addVariantAssortmentFilter",
      "parent": "VariantFilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Adds a variant assortment filter to the request.\r\n     * @param assortmentIds - Array of assortment IDs or a single ID.\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The VariantFilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "FilterOptions"
      ],
      "parameters": [
        {
          "name": "assortmentIds",
          "type": "number[] | number",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "FilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addVariantIdFilter",
      "parent": "VariantFilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Filters the request to only return the specified variants.\r\n     * @param variantIds - Array of variant IDs or a single ID.\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The VariantFilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "FilterOptions"
      ],
      "parameters": [
        {
          "name": "variantIds",
          "type": "string | string[]",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "FilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addVariantListPriceFilter",
      "parent": "VariantFilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Filters the request to only return variants within a certain list price range.\r\n     * @param lowerBound - Lower bound of the price range (inclusive).\r\n     * @param upperBound - Upper bound of the price range (inclusive).\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The VariantFilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "FilterOptions"
      ],
      "parameters": [
        {
          "name": "lowerBound",
          "type": "number",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "upperBound",
          "type": "number",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "FilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addVariantSalesPriceFilter",
      "parent": "VariantFilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Filters the request to only return variants within a certain sales price range.\r\n     * @param lowerBound - Lower bound of the price range (inclusive).\r\n     * @param upperBound - Upper bound of the price range (inclusive).\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The VariantFilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "FilterOptions"
      ],
      "parameters": [
        {
          "name": "lowerBound",
          "type": "number",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "upperBound",
          "type": "number",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "FilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addVariantSpecificationFilter",
      "parent": "VariantFilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Filters the request to only return variants with a certain specification.\r\n     * @param key - Specification key.\r\n     * @param equalTo - Specification value to match.\r\n     * @param filterOutIfKeyIsNotFound - If true, filters out variants without the key (default is true).\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The VariantFilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "FilterOptions"
      ],
      "parameters": [
        {
          "name": "key",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "equalTo",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "filterOutIfKeyIsNotFound",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "true",
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "FilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addVariantDataFilter",
      "parent": "VariantFilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Adds a variant data filter to the request.\r\n     * @param key - Data key.\r\n     * @param conditionBuilder - Function to build the condition.\r\n     * @param mustMatchAllConditions - If true, all conditions must be met (default is true).\r\n     * @param filterOutIfKeyIsNotFound - If true, filters out variants without the key (default is true).\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The VariantFilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "(builder: ConditionBuilder) => void",
        "EntityDataFilterOptions"
      ],
      "parameters": [
        {
          "name": "key",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "conditionBuilder",
          "type": "(builder: ConditionBuilder) => void",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "mustMatchAllConditions",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "true",
          "isReadonly": false
        },
        {
          "name": "filterOutIfKeyIsNotFound",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "true",
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "EntityDataFilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addVariantDataHasKeyFilter",
      "parent": "VariantFilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Adds a variant has key filter to the request.\r\n     * @param key - Data key.\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The VariantFilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "FilterOptions"
      ],
      "parameters": [
        {
          "name": "key",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "FilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addVariantDisabledFilter",
      "parent": "VariantFilterBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Adds a variant is disabled filter to the request. Only works for product queries, not in searches or recommendations.\r\n     * @param negated - If true, negates the filter (default is false).\r\n     * @param options - Optional settings for the filter.\r\n     * @returns The VariantFilterBuilder instance for chaining.\r\n     */",
      "dependencies": [
        "FilterOptions"
      ],
      "parameters": [
        {
          "name": "negated",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "false",
          "isReadonly": false
        },
        {
          "name": "options",
          "type": "FilterOptions",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Constructor",
      "name": "constructor",
      "parent": "VariantFilterBuilder",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": []
    },
    {
      "kind": "Class",
      "name": "VariantFilterBuilder",
      "dependencies": [],
      "isAbstract": false,
      "isDefault": false,
      "properties": [],
      "extends": [
        "FilterBuilderBase<VariantFilterBuilder>"
      ]
    },
    {
      "kind": "Method",
      "name": "filters",
      "parent": "RecommendationRequestBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Adds filters to the request\r\n     * @param filterBuilder \r\n     * @returns \r\n     */",
      "dependencies": [
        "(builder: FilterBuilder) => void"
      ],
      "parameters": [
        {
          "name": "filterBuilder",
          "type": "(builder: FilterBuilder) => void",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "relevanceModifiers",
      "parent": "RecommendationRequestBuilder",
      "parentKind": "Class",
      "dependencies": [
        "(builder: RelevanceModifierBuilder) => void"
      ],
      "parameters": [
        {
          "name": "relevanceModifiersBuilder",
          "type": "(builder: RelevanceModifierBuilder) => void",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Constructor",
      "name": "constructor",
      "parent": "RecommendationRequestBuilder",
      "parentKind": "Class",
      "parameters": [
        {
          "name": "settings",
          "type": "Settings",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": true,
          "scope": "private"
        }
      ]
    },
    {
      "kind": "Class",
      "name": "RecommendationRequestBuilder",
      "dependencies": [],
      "isAbstract": true,
      "isDefault": false,
      "properties": [],
      "extends": null
    },
    {
      "kind": "Method",
      "name": "enabled",
      "parent": "ContentHighlightingBuilder",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": [
        {
          "name": "enabled",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "setHighlightable",
      "parent": "ContentHighlightingBuilder",
      "parentKind": "Class",
      "dependencies": [
        "{ displayName?: boolean, dataKeys?: string[] | null }"
      ],
      "parameters": [
        {
          "name": "highlightable",
          "type": "{ displayName?: boolean, dataKeys?: string[] | null }",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "setLimit",
      "parent": "ContentHighlightingBuilder",
      "parentKind": "Class",
      "dependencies": [
        "HighlightSettings2ContentContentHighlightPropsHighlightSettings2Limits"
      ],
      "parameters": [
        {
          "name": "limit",
          "type": "HighlightSettings2ContentContentHighlightPropsHighlightSettings2Limits",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "setShape",
      "parent": "ContentHighlightingBuilder",
      "parentKind": "Class",
      "dependencies": [
        "HighlightSettings2ContentContentHighlightPropsHighlightSettings2ResponseShape"
      ],
      "parameters": [
        {
          "name": "shape",
          "type": "HighlightSettings2ContentContentHighlightPropsHighlightSettings2ResponseShape",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "build",
      "parent": "ContentHighlightingBuilder",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": [],
      "returnType": "ContentSearchSettingsHighlightSettings",
      "isAsync": false
    },
    {
      "kind": "Class",
      "name": "ContentHighlightingBuilder",
      "dependencies": [],
      "isAbstract": false,
      "isDefault": false,
      "properties": [],
      "extends": null
    },
    {
      "kind": "Method",
      "name": "setContentProperties",
      "parent": "ContentSearchBuilder",
      "parentKind": "Class",
      "dependencies": [
        "Partial<SelectedContentPropertiesSettings>"
      ],
      "parameters": [
        {
          "name": "contentProperties",
          "type": "Partial<SelectedContentPropertiesSettings>",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "setRecommendationSettings",
      "parent": "ContentSearchBuilder",
      "parentKind": "Class",
      "dependencies": [
        "RecommendationSettings"
      ],
      "parameters": [
        {
          "name": "settings",
          "type": "RecommendationSettings",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "setTerm",
      "parent": "ContentSearchBuilder",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": [
        {
          "name": "term",
          "type": "string | null | undefined",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "pagination",
      "parent": "ContentSearchBuilder",
      "parentKind": "Class",
      "dependencies": [
        "(pagination: PaginationBuilder) => void"
      ],
      "parameters": [
        {
          "name": "paginate",
          "type": "(pagination: PaginationBuilder) => void",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "facets",
      "parent": "ContentSearchBuilder",
      "parentKind": "Class",
      "dependencies": [
        "(pagination: FacetBuilder) => void"
      ],
      "parameters": [
        {
          "name": "facets",
          "type": "(pagination: FacetBuilder) => void",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "sorting",
      "parent": "ContentSearchBuilder",
      "parentKind": "Class",
      "dependencies": [
        "(sortingBuilder: ContentSortingBuilder) => void"
      ],
      "parameters": [
        {
          "name": "sorting",
          "type": "(sortingBuilder: ContentSortingBuilder) => void",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "highlighting",
      "parent": "ContentSearchBuilder",
      "parentKind": "Class",
      "dependencies": [
        "(highlightingBuilder: ContentHighlightingBuilder) => void"
      ],
      "parameters": [
        {
          "name": "highlightingBuilder",
          "type": "(highlightingBuilder: ContentHighlightingBuilder) => void",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "build",
      "parent": "ContentSearchBuilder",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": [],
      "returnType": "ContentSearchRequest",
      "isAsync": false
    },
    {
      "kind": "Constructor",
      "name": "constructor",
      "parent": "ContentSearchBuilder",
      "parentKind": "Class",
      "dependencies": [
        "Settings"
      ],
      "parameters": [
        {
          "name": "settings",
          "type": "Settings",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ]
    },
    {
      "kind": "Class",
      "name": "ContentSearchBuilder",
      "dependencies": [],
      "isAbstract": false,
      "isDefault": false,
      "properties": [],
      "extends": [
        "SearchRequestBuilder"
      ]
    },
    {
      "kind": "Method",
      "name": "sortByContentData",
      "parent": "ContentSortingBuilder",
      "parentKind": "Class",
      "dependencies": [
        "'Ascending' | 'Descending'",
        "'Auto' | 'Alphabetical' | 'Numerical'",
        "(thenBy: ContentSortingBuilder) => void"
      ],
      "parameters": [
        {
          "name": "key",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "order",
          "type": "'Ascending' | 'Descending'",
          "nullable": false,
          "defaultValue": "'Descending'",
          "isReadonly": false
        },
        {
          "name": "mode",
          "type": "'Auto' | 'Alphabetical' | 'Numerical'",
          "nullable": false,
          "defaultValue": "'Auto'",
          "isReadonly": false
        },
        {
          "name": "thenBy",
          "type": "(thenBy: ContentSortingBuilder) => void",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "sortByContentRelevance",
      "parent": "ContentSortingBuilder",
      "parentKind": "Class",
      "dependencies": [
        "'Ascending' | 'Descending'",
        "(thenBy: ContentSortingBuilder) => void"
      ],
      "parameters": [
        {
          "name": "order",
          "type": "'Ascending' | 'Descending'",
          "nullable": false,
          "defaultValue": "'Descending'",
          "isReadonly": false
        },
        {
          "name": "thenBy",
          "type": "(thenBy: ContentSortingBuilder) => void",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "sortByContentPopularity",
      "parent": "ContentSortingBuilder",
      "parentKind": "Class",
      "dependencies": [
        "'Ascending' | 'Descending'",
        "(thenBy: ContentSortingBuilder) => void"
      ],
      "parameters": [
        {
          "name": "order",
          "type": "'Ascending' | 'Descending'",
          "nullable": false,
          "defaultValue": "'Descending'",
          "isReadonly": false
        },
        {
          "name": "thenBy",
          "type": "(thenBy: ContentSortingBuilder) => void",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "sortByContentAttribute",
      "parent": "ContentSortingBuilder",
      "parentKind": "Class",
      "dependencies": [
        "'Id' | 'DisplayName'",
        "'Ascending' | 'Descending'",
        "'Auto' | 'Alphabetical' | 'Numerical'",
        "(thenBy: ContentSortingBuilder) => void"
      ],
      "parameters": [
        {
          "name": "attribute",
          "type": "'Id' | 'DisplayName'",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "order",
          "type": "'Ascending' | 'Descending'",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "mode",
          "type": "'Auto' | 'Alphabetical' | 'Numerical'",
          "nullable": false,
          "defaultValue": "'Auto'",
          "isReadonly": false
        },
        {
          "name": "thenBy",
          "type": "(thenBy: ContentSortingBuilder) => void",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "build",
      "parent": "ContentSortingBuilder",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": [],
      "returnType": "ContentSortBySpecification | null",
      "isAsync": false
    },
    {
      "kind": "Class",
      "name": "ContentSortingBuilder",
      "dependencies": [],
      "isAbstract": false,
      "isDefault": false,
      "properties": [],
      "extends": null
    },
    {
      "kind": "Method",
      "name": "addDataObjectFacet",
      "parent": "DataObjectFacetBuilder",
      "parentKind": "Class",
      "dependencies": [
        "(facets: DataObjectFacetBuilder) => void",
        "{\r\n            conditions?: (builder: DataObjectFilterConditionBuilder) => void,\r\n            skip?: number,\r\n            take?: number \r\n        }",
        "FacetSettings | ((facetSettingsBuilder: FacetSettingsBuilder) => void)"
      ],
      "parameters": [
        {
          "name": "key",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "builder",
          "type": "(facets: DataObjectFacetBuilder) => void",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "filter",
          "type": "{\r\n            conditions?: (builder: DataObjectFilterConditionBuilder) => void,\r\n            skip?: number,\r\n            take?: number \r\n        }",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "facetSettings",
          "type": "FacetSettings | ((facetSettingsBuilder: FacetSettingsBuilder) => void)",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addStringFacet",
      "parent": "DataObjectFacetBuilder",
      "parentKind": "Class",
      "dependencies": [
        "'Or' | 'And'",
        "FacetSettings | ((facetSettingsBuilder: FacetSettingsBuilder) => void)"
      ],
      "parameters": [
        {
          "name": "key",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "selectedValues",
          "type": "string[] | null",
          "nullable": false,
          "defaultValue": "null",
          "isReadonly": false
        },
        {
          "name": "collectionFilterType",
          "type": "'Or' | 'And'",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "facetSettings",
          "type": "FacetSettings | ((facetSettingsBuilder: FacetSettingsBuilder) => void)",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addBooleanFacet",
      "parent": "DataObjectFacetBuilder",
      "parentKind": "Class",
      "dependencies": [
        "'Or' | 'And'",
        "FacetSettings | ((facetSettingsBuilder: FacetSettingsBuilder) => void)"
      ],
      "parameters": [
        {
          "name": "key",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "selectedValues",
          "type": "boolean[] | null",
          "nullable": false,
          "defaultValue": "null",
          "isReadonly": false
        },
        {
          "name": "collectionFilterType",
          "type": "'Or' | 'And'",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "facetSettings",
          "type": "FacetSettings | ((facetSettingsBuilder: FacetSettingsBuilder) => void)",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addNumberFacet",
      "parent": "DataObjectFacetBuilder",
      "parentKind": "Class",
      "dependencies": [
        "'Or' | 'And'",
        "FacetSettings | ((facetSettingsBuilder: FacetSettingsBuilder) => void)"
      ],
      "parameters": [
        {
          "name": "key",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "selectedValues",
          "type": "number[] | null",
          "nullable": false,
          "defaultValue": "null",
          "isReadonly": false
        },
        {
          "name": "collectionFilterType",
          "type": "'Or' | 'And'",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "facetSettings",
          "type": "FacetSettings | ((facetSettingsBuilder: FacetSettingsBuilder) => void)",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addNumberRangeFacet",
      "parent": "DataObjectFacetBuilder",
      "parentKind": "Class",
      "dependencies": [
        "FacetSettings | ((facetSettingsBuilder: FacetSettingsBuilder) => void)"
      ],
      "parameters": [
        {
          "name": "key",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "lowerBound",
          "type": "number | null",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "upperBound",
          "type": "number | null",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "facetSettings",
          "type": "FacetSettings | ((facetSettingsBuilder: FacetSettingsBuilder) => void)",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addNumberRangesFacet",
      "parent": "DataObjectFacetBuilder",
      "parentKind": "Class",
      "dependencies": [
        "{\r\n            lowerBound?: number,\r\n            upperBound?: number\r\n        }[] | null",
        "FacetSettings | ((facetSettingsBuilder: FacetSettingsBuilder) => void)"
      ],
      "parameters": [
        {
          "name": "key",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "predefinedRanges",
          "type": "{\r\n            lowerBound?: number,\r\n            upperBound?: number\r\n        }[] | null",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "expandedRangeSize",
          "type": "number | null",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "selectedValues",
          "type": "{\r\n            lowerBound?: number,\r\n            upperBound?: number\r\n        }[] | null",
          "nullable": false,
          "defaultValue": "null",
          "isReadonly": false
        },
        {
          "name": "facetSettings",
          "type": "FacetSettings | ((facetSettingsBuilder: FacetSettingsBuilder) => void)",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "build",
      "parent": "DataObjectFacetBuilder",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": [],
      "isAsync": false
    },
    {
      "kind": "Class",
      "name": "DataObjectFacetBuilder",
      "dependencies": [],
      "isAbstract": false,
      "isDefault": false,
      "properties": [],
      "extends": null
    },
    {
      "kind": "Method",
      "name": "select",
      "parent": "DataObjectValueSelectorBuilder",
      "parentKind": "Class",
      "dependencies": [
        "{\r\n        filter?: {\r\n            conditions?: (builder: DataObjectFilterConditionBuilder) => void,\r\n            skip?: number,\r\n            take?: number \r\n        } | null, \r\n        childSelector?: (childSelector: DataObjectValueSelectorBuilder) => void | null,\r\n        fallbackSelector?: (childSelector: DataObjectValueSelectorBuilder) => void | null\r\n    }"
      ],
      "parameters": [
        {
          "name": "key",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "settings",
          "type": "{\r\n        filter?: {\r\n            conditions?: (builder: DataObjectFilterConditionBuilder) => void,\r\n            skip?: number,\r\n            take?: number \r\n        } | null, \r\n        childSelector?: (childSelector: DataObjectValueSelectorBuilder) => void | null,\r\n        fallbackSelector?: (childSelector: DataObjectValueSelectorBuilder) => void | null\r\n    }",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "build",
      "parent": "DataObjectValueSelectorBuilder",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": [],
      "returnType": "DataObjectValueSelector",
      "isAsync": false
    },
    {
      "kind": "Class",
      "name": "DataObjectValueSelectorBuilder",
      "dependencies": [],
      "isAbstract": false,
      "isDefault": false,
      "properties": [],
      "extends": null
    },
    {
      "kind": "Method",
      "name": "addCategoryFacet",
      "parent": "FacetBuilder",
      "parentKind": "Class",
      "dependencies": [
        "'ImmediateParent' | 'Ancestors'",
        "FacetSettings | ((facetSettingsBuilder: FacetSettingsBuilder) => void)"
      ],
      "parameters": [
        {
          "name": "categorySelectionStrategy",
          "type": "'ImmediateParent' | 'Ancestors'",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "selectedValues",
          "type": "string[] | null",
          "nullable": false,
          "defaultValue": "null",
          "isReadonly": false
        },
        {
          "name": "facetSettings",
          "type": "FacetSettings | ((facetSettingsBuilder: FacetSettingsBuilder) => void)",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addProductCategoryHierarchyFacet",
      "parent": "FacetBuilder",
      "parentKind": "Class",
      "dependencies": [
        "'ImmediateParent' | 'Ancestors' | 'Descendants'",
        "CategoryPath[] | null",
        "Partial<SelectedProductCategoryPropertiesSettings>",
        "FacetSettings | ((facetSettingsBuilder: FacetSettingsBuilder) => void)"
      ],
      "parameters": [
        {
          "name": "categorySelectionStrategy",
          "type": "'ImmediateParent' | 'Ancestors' | 'Descendants'",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "selectedValues",
          "type": "CategoryPath[] | null",
          "nullable": false,
          "defaultValue": "null",
          "isReadonly": false
        },
        {
          "name": "selectedPropertiesSettings",
          "type": "Partial<SelectedProductCategoryPropertiesSettings>",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "facetSettings",
          "type": "FacetSettings | ((facetSettingsBuilder: FacetSettingsBuilder) => void)",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addContentCategoryHierarchyFacet",
      "parent": "FacetBuilder",
      "parentKind": "Class",
      "dependencies": [
        "'ImmediateParent' | 'Ancestors' | 'Descendants'",
        "CategoryPath[] | null",
        "Partial<SelectedContentCategoryPropertiesSettings>",
        "FacetSettings | ((facetSettingsBuilder: FacetSettingsBuilder) => void)"
      ],
      "parameters": [
        {
          "name": "categorySelectionStrategy",
          "type": "'ImmediateParent' | 'Ancestors' | 'Descendants'",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "selectedValues",
          "type": "CategoryPath[] | null",
          "nullable": false,
          "defaultValue": "null",
          "isReadonly": false
        },
        {
          "name": "selectedPropertiesSettings",
          "type": "Partial<SelectedContentCategoryPropertiesSettings>",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "facetSettings",
          "type": "FacetSettings | ((facetSettingsBuilder: FacetSettingsBuilder) => void)",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addBrandFacet",
      "parent": "FacetBuilder",
      "parentKind": "Class",
      "dependencies": [
        "FacetSettings | ((facetSettingsBuilder: FacetSettingsBuilder) => void)"
      ],
      "parameters": [
        {
          "name": "selectedValues",
          "type": "string[] | null",
          "nullable": false,
          "defaultValue": "null",
          "isReadonly": false
        },
        {
          "name": "facetSettings",
          "type": "FacetSettings | ((facetSettingsBuilder: FacetSettingsBuilder) => void)",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addProductAssortmentFacet",
      "parent": "FacetBuilder",
      "parentKind": "Class",
      "dependencies": [
        "'Product' | 'Variant' | 'VariantWithFallbackToProduct' | 'ProductWithFallbackToVariant'",
        "FacetSettings | ((facetSettingsBuilder: FacetSettingsBuilder) => void)"
      ],
      "parameters": [
        {
          "name": "selectionStrategy",
          "type": "'Product' | 'Variant' | 'VariantWithFallbackToProduct' | 'ProductWithFallbackToVariant'",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "selectedValues",
          "type": "number[] | null",
          "nullable": false,
          "defaultValue": "null",
          "isReadonly": false
        },
        {
          "name": "facetSettings",
          "type": "FacetSettings | ((facetSettingsBuilder: FacetSettingsBuilder) => void)",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addVariantSpecificationFacet",
      "parent": "FacetBuilder",
      "parentKind": "Class",
      "dependencies": [
        "FacetSettings | ((facetSettingsBuilder: FacetSettingsBuilder) => void)"
      ],
      "parameters": [
        {
          "name": "key",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "selectedValues",
          "type": "string[] | null",
          "nullable": false,
          "defaultValue": "null",
          "isReadonly": false
        },
        {
          "name": "facetSettings",
          "type": "FacetSettings | ((facetSettingsBuilder: FacetSettingsBuilder) => void)",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addProductDataDoubleRangeFacet",
      "parent": "FacetBuilder",
      "parentKind": "Class",
      "dependencies": [
        "'Product' | 'Variant' | 'VariantWithFallbackToProduct' | 'ProductWithFallbackToVariant'",
        "FacetSettings | ((facetSettingsBuilder: FacetSettingsBuilder) => void)"
      ],
      "parameters": [
        {
          "name": "key",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "selectionStrategy",
          "type": "'Product' | 'Variant' | 'VariantWithFallbackToProduct' | 'ProductWithFallbackToVariant'",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "lowerBound",
          "type": "number",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "upperBound",
          "type": "number",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "facetSettings",
          "type": "FacetSettings | ((facetSettingsBuilder: FacetSettingsBuilder) => void)",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addProductDataDoubleRangesFacet",
      "parent": "FacetBuilder",
      "parentKind": "Class",
      "dependencies": [
        "'Product' | 'Variant' | 'VariantWithFallbackToProduct' | 'ProductWithFallbackToVariant'",
        "{\r\n            lowerBound?: number,\r\n            upperBound?: number\r\n        }[] | null",
        "FacetSettings | ((facetSettingsBuilder: FacetSettingsBuilder) => void)"
      ],
      "parameters": [
        {
          "name": "key",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "selectionStrategy",
          "type": "'Product' | 'Variant' | 'VariantWithFallbackToProduct' | 'ProductWithFallbackToVariant'",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "predefinedRanges",
          "type": "{\r\n            lowerBound?: number,\r\n            upperBound?: number\r\n        }[] | null",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "expandedRangeSize",
          "type": "number | null",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "selectedValues",
          "type": "{\r\n            lowerBound?: number,\r\n            upperBound?: number\r\n        }[] | null",
          "nullable": false,
          "defaultValue": "null",
          "isReadonly": false
        },
        {
          "name": "facetSettings",
          "type": "FacetSettings | ((facetSettingsBuilder: FacetSettingsBuilder) => void)",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addProductDataStringValueFacet",
      "parent": "FacetBuilder",
      "parentKind": "Class",
      "dependencies": [
        "'Product' | 'Variant' | 'VariantWithFallbackToProduct' | 'ProductWithFallbackToVariant'",
        "'Or' | 'And'",
        "FacetSettings | ((facetSettingsBuilder: FacetSettingsBuilder) => void)"
      ],
      "parameters": [
        {
          "name": "key",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "selectionStrategy",
          "type": "'Product' | 'Variant' | 'VariantWithFallbackToProduct' | 'ProductWithFallbackToVariant'",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "selectedValues",
          "type": "string[] | null",
          "nullable": false,
          "defaultValue": "null",
          "isReadonly": false
        },
        {
          "name": "collectionFilterType",
          "type": "'Or' | 'And'",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "facetSettings",
          "type": "FacetSettings | ((facetSettingsBuilder: FacetSettingsBuilder) => void)",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addProductDataBooleanValueFacet",
      "parent": "FacetBuilder",
      "parentKind": "Class",
      "dependencies": [
        "'Product' | 'Variant' | 'VariantWithFallbackToProduct' | 'ProductWithFallbackToVariant'",
        "'Or' | 'And'",
        "FacetSettings | ((facetSettingsBuilder: FacetSettingsBuilder) => void)"
      ],
      "parameters": [
        {
          "name": "key",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "selectionStrategy",
          "type": "'Product' | 'Variant' | 'VariantWithFallbackToProduct' | 'ProductWithFallbackToVariant'",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "selectedValues",
          "type": "boolean[] | null",
          "nullable": false,
          "defaultValue": "null",
          "isReadonly": false
        },
        {
          "name": "collectionFilterType",
          "type": "'Or' | 'And'",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "facetSettings",
          "type": "FacetSettings | ((facetSettingsBuilder: FacetSettingsBuilder) => void)",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addProductDataDoubleValueFacet",
      "parent": "FacetBuilder",
      "parentKind": "Class",
      "dependencies": [
        "'Product' | 'Variant' | 'VariantWithFallbackToProduct' | 'ProductWithFallbackToVariant'",
        "'Or' | 'And'",
        "FacetSettings | ((facetSettingsBuilder: FacetSettingsBuilder) => void)"
      ],
      "parameters": [
        {
          "name": "key",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "selectionStrategy",
          "type": "'Product' | 'Variant' | 'VariantWithFallbackToProduct' | 'ProductWithFallbackToVariant'",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "selectedValues",
          "type": "number[] | null",
          "nullable": false,
          "defaultValue": "null",
          "isReadonly": false
        },
        {
          "name": "collectionFilterType",
          "type": "'Or' | 'And'",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "facetSettings",
          "type": "FacetSettings | ((facetSettingsBuilder: FacetSettingsBuilder) => void)",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addSalesPriceRangeFacet",
      "parent": "FacetBuilder",
      "parentKind": "Class",
      "dependencies": [
        "'Product' | 'Variant' | 'VariantWithFallbackToProduct' | 'ProductWithFallbackToVariant'",
        "FacetSettings | ((facetSettingsBuilder: FacetSettingsBuilder) => void)"
      ],
      "parameters": [
        {
          "name": "priceSelectionStrategy",
          "type": "'Product' | 'Variant' | 'VariantWithFallbackToProduct' | 'ProductWithFallbackToVariant'",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "lowerBound",
          "type": "number",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "upperBound",
          "type": "number",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "facetSettings",
          "type": "FacetSettings | ((facetSettingsBuilder: FacetSettingsBuilder) => void)",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addSalesPriceRangesFacet",
      "parent": "FacetBuilder",
      "parentKind": "Class",
      "dependencies": [
        "'Product' | 'Variant' | 'VariantWithFallbackToProduct' | 'ProductWithFallbackToVariant'",
        "{\r\n            lowerBound?: number,\r\n            upperBound?: number\r\n        }[] | null",
        "FacetSettings | ((facetSettingsBuilder: FacetSettingsBuilder) => void)"
      ],
      "parameters": [
        {
          "name": "priceSelectionStrategy",
          "type": "'Product' | 'Variant' | 'VariantWithFallbackToProduct' | 'ProductWithFallbackToVariant'",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "predefinedRanges",
          "type": "{\r\n            lowerBound?: number,\r\n            upperBound?: number\r\n        }[] | null",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "expandedRangeSize",
          "type": "number | null",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "selectedValues",
          "type": "{\r\n            lowerBound?: number,\r\n            upperBound?: number\r\n        }[] | null",
          "nullable": false,
          "defaultValue": "null",
          "isReadonly": false
        },
        {
          "name": "facetSettings",
          "type": "FacetSettings | ((facetSettingsBuilder: FacetSettingsBuilder) => void)",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addListPriceRangeFacet",
      "parent": "FacetBuilder",
      "parentKind": "Class",
      "dependencies": [
        "'Product' | 'Variant' | 'VariantWithFallbackToProduct' | 'ProductWithFallbackToVariant'",
        "FacetSettings | ((facetSettingsBuilder: FacetSettingsBuilder) => void)"
      ],
      "parameters": [
        {
          "name": "priceSelectionStrategy",
          "type": "'Product' | 'Variant' | 'VariantWithFallbackToProduct' | 'ProductWithFallbackToVariant'",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "lowerBound",
          "type": "number",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "upperBound",
          "type": "number",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "facetSettings",
          "type": "FacetSettings | ((facetSettingsBuilder: FacetSettingsBuilder) => void)",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addListPriceRangesFacet",
      "parent": "FacetBuilder",
      "parentKind": "Class",
      "dependencies": [
        "'Product' | 'Variant' | 'VariantWithFallbackToProduct' | 'ProductWithFallbackToVariant'",
        "{\r\n            lowerBound?: number,\r\n            upperBound?: number\r\n        }[] | null",
        "FacetSettings | ((facetSettingsBuilder: FacetSettingsBuilder) => void)"
      ],
      "parameters": [
        {
          "name": "priceSelectionStrategy",
          "type": "'Product' | 'Variant' | 'VariantWithFallbackToProduct' | 'ProductWithFallbackToVariant'",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "predefinedRanges",
          "type": "{\r\n            lowerBound?: number,\r\n            upperBound?: number\r\n        }[] | null",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "expandedRangeSize",
          "type": "number | null",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "selectedValues",
          "type": "{\r\n            lowerBound?: number,\r\n            upperBound?: number\r\n        }[] | null",
          "nullable": false,
          "defaultValue": "null",
          "isReadonly": false
        },
        {
          "name": "facetSettings",
          "type": "FacetSettings | ((facetSettingsBuilder: FacetSettingsBuilder) => void)",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addProductDataObjectFacet",
      "parent": "FacetBuilder",
      "parentKind": "Class",
      "dependencies": [
        "'Product' | 'Variant' | 'VariantWithFallbackToProduct' | 'ProductWithFallbackToVariant'",
        "(facets: DataObjectFacetBuilder) => void",
        "{\r\n            conditions?: (builder: DataObjectFilterConditionBuilder) => void,\r\n            skip?: number,\r\n            take?: number\r\n        }",
        "FacetSettings | ((facetSettingsBuilder: FacetSettingsBuilder) => void)"
      ],
      "parameters": [
        {
          "name": "key",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "selectionStrategy",
          "type": "'Product' | 'Variant' | 'VariantWithFallbackToProduct' | 'ProductWithFallbackToVariant'",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "builder",
          "type": "(facets: DataObjectFacetBuilder) => void",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "filter",
          "type": "{\r\n            conditions?: (builder: DataObjectFilterConditionBuilder) => void,\r\n            skip?: number,\r\n            take?: number\r\n        }",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "facetSettings",
          "type": "FacetSettings | ((facetSettingsBuilder: FacetSettingsBuilder) => void)",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addRecentlyPurchasedFacet",
      "parent": "FacetBuilder",
      "parentKind": "Class",
      "dependencies": [
        "PurchaseQualifiers",
        "FacetSettings | ((facetSettingsBuilder: FacetSettingsBuilder) => void)"
      ],
      "parameters": [
        {
          "name": "purchaseQualifiers",
          "type": "PurchaseQualifiers",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "selectedValues",
          "type": "boolean[] | null",
          "nullable": false,
          "defaultValue": "null",
          "isReadonly": false
        },
        {
          "name": "facetSettings",
          "type": "FacetSettings | ((facetSettingsBuilder: FacetSettingsBuilder) => void)",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addContentAssortmentFacet",
      "parent": "FacetBuilder",
      "parentKind": "Class",
      "dependencies": [
        "FacetSettings | ((facetSettingsBuilder: FacetSettingsBuilder) => void)"
      ],
      "parameters": [
        {
          "name": "selectedValues",
          "type": "number[] | null",
          "nullable": false,
          "defaultValue": "null",
          "isReadonly": false
        },
        {
          "name": "facetSettings",
          "type": "FacetSettings | ((facetSettingsBuilder: FacetSettingsBuilder) => void)",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addContentDataDoubleRangeFacet",
      "parent": "FacetBuilder",
      "parentKind": "Class",
      "dependencies": [
        "FacetSettings | ((facetSettingsBuilder: FacetSettingsBuilder) => void)"
      ],
      "parameters": [
        {
          "name": "key",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "lowerBound",
          "type": "number | null",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "upperBound",
          "type": "number | null",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "facetSettings",
          "type": "FacetSettings | ((facetSettingsBuilder: FacetSettingsBuilder) => void)",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addContentDataDoubleRangesFacet",
      "parent": "FacetBuilder",
      "parentKind": "Class",
      "dependencies": [
        "{\r\n            lowerBound?: number,\r\n            upperBound?: number\r\n        }[] | null",
        "FacetSettings | ((facetSettingsBuilder: FacetSettingsBuilder) => void)"
      ],
      "parameters": [
        {
          "name": "key",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "predefinedRanges",
          "type": "{\r\n            lowerBound?: number,\r\n            upperBound?: number\r\n        }[] | null",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "expandedRangeSize",
          "type": "number | null",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "selectedValues",
          "type": "{\r\n            lowerBound?: number,\r\n            upperBound?: number\r\n        }[] | null",
          "nullable": false,
          "defaultValue": "null",
          "isReadonly": false
        },
        {
          "name": "facetSettings",
          "type": "FacetSettings | ((facetSettingsBuilder: FacetSettingsBuilder) => void)",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addContentDataStringValueFacet",
      "parent": "FacetBuilder",
      "parentKind": "Class",
      "dependencies": [
        "'Or' | 'And'",
        "FacetSettings | ((facetSettingsBuilder: FacetSettingsBuilder) => void)"
      ],
      "parameters": [
        {
          "name": "key",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "selectedValues",
          "type": "string[] | null",
          "nullable": false,
          "defaultValue": "null",
          "isReadonly": false
        },
        {
          "name": "collectionFilterType",
          "type": "'Or' | 'And'",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "facetSettings",
          "type": "FacetSettings | ((facetSettingsBuilder: FacetSettingsBuilder) => void)",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addContentDataBooleanValueFacet",
      "parent": "FacetBuilder",
      "parentKind": "Class",
      "dependencies": [
        "'Or' | 'And'",
        "FacetSettings | ((facetSettingsBuilder: FacetSettingsBuilder) => void)"
      ],
      "parameters": [
        {
          "name": "key",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "selectedValues",
          "type": "boolean[] | null",
          "nullable": false,
          "defaultValue": "null",
          "isReadonly": false
        },
        {
          "name": "collectionFilterType",
          "type": "'Or' | 'And'",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "facetSettings",
          "type": "FacetSettings | ((facetSettingsBuilder: FacetSettingsBuilder) => void)",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addContentDataDoubleValueFacet",
      "parent": "FacetBuilder",
      "parentKind": "Class",
      "dependencies": [
        "'Or' | 'And'",
        "FacetSettings | ((facetSettingsBuilder: FacetSettingsBuilder) => void)"
      ],
      "parameters": [
        {
          "name": "key",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "selectedValues",
          "type": "number[] | null",
          "nullable": false,
          "defaultValue": "null",
          "isReadonly": false
        },
        {
          "name": "collectionFilterType",
          "type": "'Or' | 'And'",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "facetSettings",
          "type": "FacetSettings | ((facetSettingsBuilder: FacetSettingsBuilder) => void)",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addContentDataObjectFacet",
      "parent": "FacetBuilder",
      "parentKind": "Class",
      "dependencies": [
        "(facets: DataObjectFacetBuilder) => void",
        "{\r\n            conditions?: (builder: DataObjectFilterConditionBuilder) => void,\r\n            skip?: number,\r\n            take?: number\r\n        }",
        "FacetSettings | ((facetSettingsBuilder: FacetSettingsBuilder) => void)"
      ],
      "parameters": [
        {
          "name": "key",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "builder",
          "type": "(facets: DataObjectFacetBuilder) => void",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "filter",
          "type": "{\r\n            conditions?: (builder: DataObjectFilterConditionBuilder) => void,\r\n            skip?: number,\r\n            take?: number\r\n        }",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "facetSettings",
          "type": "FacetSettings | ((facetSettingsBuilder: FacetSettingsBuilder) => void)",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addProductCategoryAssortmentFacet",
      "parent": "FacetBuilder",
      "parentKind": "Class",
      "dependencies": [
        "FacetSettings | ((facetSettingsBuilder: FacetSettingsBuilder) => void)"
      ],
      "parameters": [
        {
          "name": "selectedValues",
          "type": "number[] | null",
          "nullable": false,
          "defaultValue": "null",
          "isReadonly": false
        },
        {
          "name": "facetSettings",
          "type": "FacetSettings | ((facetSettingsBuilder: FacetSettingsBuilder) => void)",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addProductCategoryDataDoubleRangeFacet",
      "parent": "FacetBuilder",
      "parentKind": "Class",
      "dependencies": [
        "FacetSettings | ((facetSettingsBuilder: FacetSettingsBuilder) => void)"
      ],
      "parameters": [
        {
          "name": "key",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "lowerBound",
          "type": "number | null",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "upperBound",
          "type": "number | null",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "facetSettings",
          "type": "FacetSettings | ((facetSettingsBuilder: FacetSettingsBuilder) => void)",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addProductCategoryDataDoubleRangesFacet",
      "parent": "FacetBuilder",
      "parentKind": "Class",
      "dependencies": [
        "{\r\n            lowerBound?: number,\r\n            upperBound?: number\r\n        }[] | null",
        "FacetSettings | ((facetSettingsBuilder: FacetSettingsBuilder) => void)"
      ],
      "parameters": [
        {
          "name": "key",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "predefinedRanges",
          "type": "{\r\n            lowerBound?: number,\r\n            upperBound?: number\r\n        }[] | null",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "expandedRangeSize",
          "type": "number | null",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "selectedValues",
          "type": "{\r\n            lowerBound?: number,\r\n            upperBound?: number\r\n        }[] | null",
          "nullable": false,
          "defaultValue": "null",
          "isReadonly": false
        },
        {
          "name": "facetSettings",
          "type": "FacetSettings | ((facetSettingsBuilder: FacetSettingsBuilder) => void)",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addProductCategoryDataStringValueFacet",
      "parent": "FacetBuilder",
      "parentKind": "Class",
      "dependencies": [
        "'Or' | 'And'",
        "FacetSettings | ((facetSettingsBuilder: FacetSettingsBuilder) => void)"
      ],
      "parameters": [
        {
          "name": "key",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "selectedValues",
          "type": "string[] | null",
          "nullable": false,
          "defaultValue": "null",
          "isReadonly": false
        },
        {
          "name": "collectionFilterType",
          "type": "'Or' | 'And'",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "facetSettings",
          "type": "FacetSettings | ((facetSettingsBuilder: FacetSettingsBuilder) => void)",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addProductCategoryDataBooleanValueFacet",
      "parent": "FacetBuilder",
      "parentKind": "Class",
      "dependencies": [
        "'Or' | 'And'",
        "FacetSettings | ((facetSettingsBuilder: FacetSettingsBuilder) => void)"
      ],
      "parameters": [
        {
          "name": "key",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "selectedValues",
          "type": "boolean[] | null",
          "nullable": false,
          "defaultValue": "null",
          "isReadonly": false
        },
        {
          "name": "collectionFilterType",
          "type": "'Or' | 'And'",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "facetSettings",
          "type": "FacetSettings | ((facetSettingsBuilder: FacetSettingsBuilder) => void)",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addProductCategoryDataDoubleValueFacet",
      "parent": "FacetBuilder",
      "parentKind": "Class",
      "dependencies": [
        "'Or' | 'And'",
        "FacetSettings | ((facetSettingsBuilder: FacetSettingsBuilder) => void)"
      ],
      "parameters": [
        {
          "name": "key",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "selectedValues",
          "type": "number[] | null",
          "nullable": false,
          "defaultValue": "null",
          "isReadonly": false
        },
        {
          "name": "collectionFilterType",
          "type": "'Or' | 'And'",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "facetSettings",
          "type": "FacetSettings | ((facetSettingsBuilder: FacetSettingsBuilder) => void)",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addProductCategoryDataObjectFacet",
      "parent": "FacetBuilder",
      "parentKind": "Class",
      "dependencies": [
        "(facets: DataObjectFacetBuilder) => void",
        "{\r\n            conditions?: (builder: DataObjectFilterConditionBuilder) => void,\r\n            skip?: number,\r\n            take?: number\r\n        }",
        "FacetSettings | ((facetSettingsBuilder: FacetSettingsBuilder) => void)"
      ],
      "parameters": [
        {
          "name": "key",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "builder",
          "type": "(facets: DataObjectFacetBuilder) => void",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "filter",
          "type": "{\r\n            conditions?: (builder: DataObjectFilterConditionBuilder) => void,\r\n            skip?: number,\r\n            take?: number\r\n        }",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "facetSettings",
          "type": "FacetSettings | ((facetSettingsBuilder: FacetSettingsBuilder) => void)",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "clear",
      "parent": "FacetBuilder",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": [],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "build",
      "parent": "FacetBuilder",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": [],
      "returnType": "ProductFacetQuery | null",
      "isAsync": false
    },
    {
      "kind": "Class",
      "name": "FacetBuilder",
      "dependencies": [],
      "isAbstract": false,
      "isDefault": false,
      "properties": [],
      "extends": null
    },
    {
      "kind": "Method",
      "name": "alwaysIncludeSelectedInAvailable",
      "parent": "FacetSettingsBuilder",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": [
        {
          "name": "include",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "true",
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "includeZeroHitsInAvailable",
      "parent": "FacetSettingsBuilder",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": [
        {
          "name": "include",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "true",
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "take",
      "parent": "FacetSettingsBuilder",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": [
        {
          "name": "take",
          "type": "number | null",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "sortByHits",
      "parent": "FacetSettingsBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Sorts facet values in descending order by hit count, so that the values with the most hits appear first in the list.\r\n    */",
      "dependencies": [],
      "parameters": [],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "build",
      "parent": "FacetSettingsBuilder",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": [],
      "returnType": "FacetSettings",
      "isAsync": false
    },
    {
      "kind": "Class",
      "name": "FacetSettingsBuilder",
      "dependencies": [],
      "isAbstract": false,
      "isDefault": false,
      "properties": [],
      "extends": null
    },
    {
      "kind": "Method",
      "name": "category",
      "parent": "GetContentFacet",
      "parentKind": "Class",
      "dependencies": [
        "ContentFacetResult"
      ],
      "parameters": [
        {
          "name": "facets",
          "type": "ContentFacetResult",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "selectionStrategy",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "CategoryFacetResult | null",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "categoryHierarchy",
      "parent": "GetContentFacet",
      "parentKind": "Class",
      "dependencies": [
        "ContentFacetResult"
      ],
      "parameters": [
        {
          "name": "facets",
          "type": "ContentFacetResult",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "selectionStrategy",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "CategoryHierarchyFacetResult | null",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "assortment",
      "parent": "GetContentFacet",
      "parentKind": "Class",
      "dependencies": [
        "ContentFacetResult"
      ],
      "parameters": [
        {
          "name": "facets",
          "type": "ContentFacetResult",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "ContentAssortmentFacetResult | null",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "dataDoubleRange",
      "parent": "GetContentFacet",
      "parentKind": "Class",
      "dependencies": [
        "ContentFacetResult"
      ],
      "parameters": [
        {
          "name": "facets",
          "type": "ContentFacetResult",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "key",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "ContentDataDoubleRangeFacetResult | null",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "dataDoubleRanges",
      "parent": "GetContentFacet",
      "parentKind": "Class",
      "dependencies": [
        "ContentFacetResult"
      ],
      "parameters": [
        {
          "name": "facets",
          "type": "ContentFacetResult",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "key",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "ContentDataDoubleRangesFacetResult | null",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "dataString",
      "parent": "GetContentFacet",
      "parentKind": "Class",
      "dependencies": [
        "ContentFacetResult"
      ],
      "parameters": [
        {
          "name": "facets",
          "type": "ContentFacetResult",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "key",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "ContentDataStringValueFacetResult | null",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "dataBoolean",
      "parent": "GetContentFacet",
      "parentKind": "Class",
      "dependencies": [
        "ContentFacetResult"
      ],
      "parameters": [
        {
          "name": "facets",
          "type": "ContentFacetResult",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "key",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "ContentDataBooleanValueFacetResult | null",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "dataNumber",
      "parent": "GetContentFacet",
      "parentKind": "Class",
      "dependencies": [
        "ContentFacetResult"
      ],
      "parameters": [
        {
          "name": "facets",
          "type": "ContentFacetResult",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "key",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "ContentDataDoubleValueFacetResult | null",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "dataObject",
      "parent": "GetContentFacet",
      "parentKind": "Class",
      "dependencies": [
        "ContentFacetResult"
      ],
      "parameters": [
        {
          "name": "facets",
          "type": "ContentFacetResult",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "key",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "ContentDataObjectFacetResult | null",
      "isAsync": false
    },
    {
      "kind": "Constructor",
      "name": "constructor",
      "parent": "GetContentFacet",
      "parentKind": "Class",
      "dependencies": [
        "FacetResult[] | null"
      ],
      "parameters": [
        {
          "name": "items",
          "type": "FacetResult[] | null",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ]
    },
    {
      "kind": "Class",
      "name": "GetContentFacet",
      "dependencies": [
        "FacetResult[] | null"
      ],
      "isAbstract": false,
      "isDefault": false,
      "properties": [
        {
          "name": "items",
          "type": "FacetResult[] | null",
          "nullable": false,
          "defaultValue": null
        }
      ],
      "extends": null
    },
    {
      "kind": "Method",
      "name": "assortment",
      "parent": "GetProductCategoryFacet",
      "parentKind": "Class",
      "dependencies": [
        "ProductCategoryFacetResult"
      ],
      "parameters": [
        {
          "name": "facets",
          "type": "ProductCategoryFacetResult",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "ProductCategoryAssortmentFacetResult | null",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "dataDoubleRange",
      "parent": "GetProductCategoryFacet",
      "parentKind": "Class",
      "dependencies": [
        "ProductCategoryFacetResult"
      ],
      "parameters": [
        {
          "name": "facets",
          "type": "ProductCategoryFacetResult",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "key",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "ProductCategoryDataDoubleRangeFacetResult | null",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "dataDoubleRanges",
      "parent": "GetProductCategoryFacet",
      "parentKind": "Class",
      "dependencies": [
        "ProductCategoryFacetResult"
      ],
      "parameters": [
        {
          "name": "facets",
          "type": "ProductCategoryFacetResult",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "key",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "ProductCategoryDataDoubleRangesFacetResult | null",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "dataString",
      "parent": "GetProductCategoryFacet",
      "parentKind": "Class",
      "dependencies": [
        "ProductCategoryFacetResult"
      ],
      "parameters": [
        {
          "name": "facets",
          "type": "ProductCategoryFacetResult",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "key",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "ProductCategoryDataStringValueFacetResult | null",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "dataBoolean",
      "parent": "GetProductCategoryFacet",
      "parentKind": "Class",
      "dependencies": [
        "ProductCategoryFacetResult"
      ],
      "parameters": [
        {
          "name": "facets",
          "type": "ProductCategoryFacetResult",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "key",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "ProductCategoryDataBooleanValueFacetResult | null",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "dataNumber",
      "parent": "GetProductCategoryFacet",
      "parentKind": "Class",
      "dependencies": [
        "ProductCategoryFacetResult"
      ],
      "parameters": [
        {
          "name": "facets",
          "type": "ProductCategoryFacetResult",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "key",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "ProductCategoryDataDoubleValueFacetResult | null",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "dataObject",
      "parent": "GetProductCategoryFacet",
      "parentKind": "Class",
      "dependencies": [
        "ProductCategoryFacetResult"
      ],
      "parameters": [
        {
          "name": "facets",
          "type": "ProductCategoryFacetResult",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "key",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "ProductCategoryDataObjectFacetResult | null",
      "isAsync": false
    },
    {
      "kind": "Constructor",
      "name": "constructor",
      "parent": "GetProductCategoryFacet",
      "parentKind": "Class",
      "dependencies": [
        "FacetResult[] | null"
      ],
      "parameters": [
        {
          "name": "items",
          "type": "FacetResult[] | null",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ]
    },
    {
      "kind": "Class",
      "name": "GetProductCategoryFacet",
      "dependencies": [
        "FacetResult[] | null"
      ],
      "isAbstract": false,
      "isDefault": false,
      "properties": [
        {
          "name": "items",
          "type": "FacetResult[] | null",
          "nullable": false,
          "defaultValue": null
        }
      ],
      "extends": null
    },
    {
      "kind": "Method",
      "name": "productAssortment",
      "parent": "GetProductFacet",
      "parentKind": "Class",
      "dependencies": [
        "ProductFacetResult",
        "'Product' | 'Variant' | 'VariantWithFallbackToProduct' | 'ProductWithFallbackToVariant'"
      ],
      "parameters": [
        {
          "name": "facets",
          "type": "ProductFacetResult",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "selectionStrategy",
          "type": "'Product' | 'Variant' | 'VariantWithFallbackToProduct' | 'ProductWithFallbackToVariant'",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "ProductAssortmentFacetResult | null",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "brand",
      "parent": "GetProductFacet",
      "parentKind": "Class",
      "dependencies": [
        "ProductFacetResult"
      ],
      "parameters": [
        {
          "name": "facets",
          "type": "ProductFacetResult",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "BrandFacetResult | null",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "category",
      "parent": "GetProductFacet",
      "parentKind": "Class",
      "dependencies": [
        "ProductFacetResult",
        "'ImmediateParent' | 'Ancestors' | 'Descendants'"
      ],
      "parameters": [
        {
          "name": "facets",
          "type": "ProductFacetResult",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "selectionStrategy",
          "type": "'ImmediateParent' | 'Ancestors' | 'Descendants'",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "CategoryFacetResult | null",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "categoryHierarchy",
      "parent": "GetProductFacet",
      "parentKind": "Class",
      "dependencies": [
        "ProductFacetResult",
        "'ImmediateParent' | 'Ancestors' | 'Descendants'"
      ],
      "parameters": [
        {
          "name": "facets",
          "type": "ProductFacetResult",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "selectionStrategy",
          "type": "'ImmediateParent' | 'Ancestors' | 'Descendants'",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "CategoryHierarchyFacetResult | null",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "listPriceRange",
      "parent": "GetProductFacet",
      "parentKind": "Class",
      "dependencies": [
        "ProductFacetResult",
        "PriceSelectionStrategy"
      ],
      "parameters": [
        {
          "name": "facets",
          "type": "ProductFacetResult",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "selectionStrategy",
          "type": "PriceSelectionStrategy",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "PriceRangeFacetResult | null",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "salesPriceRange",
      "parent": "GetProductFacet",
      "parentKind": "Class",
      "dependencies": [
        "ProductFacetResult",
        "PriceSelectionStrategy"
      ],
      "parameters": [
        {
          "name": "facets",
          "type": "ProductFacetResult",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "selectionStrategy",
          "type": "PriceSelectionStrategy",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "PriceRangeFacetResult | null",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "listPriceRanges",
      "parent": "GetProductFacet",
      "parentKind": "Class",
      "dependencies": [
        "ProductFacetResult",
        "PriceSelectionStrategy"
      ],
      "parameters": [
        {
          "name": "facets",
          "type": "ProductFacetResult",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "selectionStrategy",
          "type": "PriceSelectionStrategy",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "PriceRangesFacetResult | null",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "listPriceRangesWithRange",
      "parent": "GetProductFacet",
      "parentKind": "Class",
      "dependencies": [
        "ProductFacetResult",
        "PriceSelectionStrategy"
      ],
      "parameters": [
        {
          "name": "facets",
          "type": "ProductFacetResult",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "selectionStrategy",
          "type": "PriceSelectionStrategy",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "expandedRangeSize",
          "type": "number | null",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "PriceRangesFacetResult | null",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "salesPriceRanges",
      "parent": "GetProductFacet",
      "parentKind": "Class",
      "dependencies": [
        "ProductFacetResult",
        "PriceSelectionStrategy"
      ],
      "parameters": [
        {
          "name": "facets",
          "type": "ProductFacetResult",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "selectionStrategy",
          "type": "PriceSelectionStrategy",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "PriceRangesFacetResult | null",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "salesPriceRangesWithRange",
      "parent": "GetProductFacet",
      "parentKind": "Class",
      "dependencies": [
        "ProductFacetResult",
        "PriceSelectionStrategy"
      ],
      "parameters": [
        {
          "name": "facets",
          "type": "ProductFacetResult",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "selectionStrategy",
          "type": "PriceSelectionStrategy",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "expandedRangeSize",
          "type": "number | null",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "PriceRangesFacetResult | null",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "dataDoubleRange",
      "parent": "GetProductFacet",
      "parentKind": "Class",
      "dependencies": [
        "ProductFacetResult",
        "DataSelectionStrategy"
      ],
      "parameters": [
        {
          "name": "facets",
          "type": "ProductFacetResult",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "selectionStrategy",
          "type": "DataSelectionStrategy",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "key",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "ProductDataDoubleRangeFacetResult | null",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "dataDoubleRanges",
      "parent": "GetProductFacet",
      "parentKind": "Class",
      "dependencies": [
        "ProductFacetResult",
        "DataSelectionStrategy"
      ],
      "parameters": [
        {
          "name": "facets",
          "type": "ProductFacetResult",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "selectionStrategy",
          "type": "DataSelectionStrategy",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "key",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "ProductDataDoubleRangesFacetResult | null",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "variantSpecification",
      "parent": "GetProductFacet",
      "parentKind": "Class",
      "dependencies": [
        "ProductFacetResult"
      ],
      "parameters": [
        {
          "name": "facets",
          "type": "ProductFacetResult",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "key",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "VariantSpecificationFacetResult | null",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "dataString",
      "parent": "GetProductFacet",
      "parentKind": "Class",
      "dependencies": [
        "ProductFacetResult",
        "DataSelectionStrategy"
      ],
      "parameters": [
        {
          "name": "facets",
          "type": "ProductFacetResult",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "key",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "selectionStrategy",
          "type": "DataSelectionStrategy",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "ProductDataStringValueFacetResult | null",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "dataBoolean",
      "parent": "GetProductFacet",
      "parentKind": "Class",
      "dependencies": [
        "ProductFacetResult",
        "DataSelectionStrategy"
      ],
      "parameters": [
        {
          "name": "facets",
          "type": "ProductFacetResult",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "key",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "selectionStrategy",
          "type": "DataSelectionStrategy",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "ProductDataBooleanValueFacetResult | null",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "dataNumber",
      "parent": "GetProductFacet",
      "parentKind": "Class",
      "dependencies": [
        "ProductFacetResult",
        "DataSelectionStrategy"
      ],
      "parameters": [
        {
          "name": "facets",
          "type": "ProductFacetResult",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "key",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "selectionStrategy",
          "type": "DataSelectionStrategy",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "ProductDataDoubleValueFacetResult | null",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "dataObject",
      "parent": "GetProductFacet",
      "parentKind": "Class",
      "dependencies": [
        "ProductFacetResult",
        "DataSelectionStrategy"
      ],
      "parameters": [
        {
          "name": "facets",
          "type": "ProductFacetResult",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "selectionStrategy",
          "type": "DataSelectionStrategy",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "key",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "ProductDataObjectFacetResult | null",
      "isAsync": false
    },
    {
      "kind": "Class",
      "name": "GetProductFacet",
      "dependencies": [],
      "isAbstract": false,
      "isDefault": false,
      "properties": [],
      "extends": null
    },
    {
      "kind": "Method",
      "name": "handleFacetSettings",
      "dependencies": [
        "FacetSettings | ((facetSettingsBuilder: FacetSettingsBuilder) => void)"
      ],
      "parameters": [
        {
          "name": "facetSettings",
          "type": "FacetSettings | ((facetSettingsBuilder: FacetSettingsBuilder) => void)",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ]
    },
    {
      "kind": "Method",
      "name": "setSelectedCategoryProperties",
      "parent": "ProductCategorySearchBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Select the properties of the product category to be returned, by default only the product category id is returned.\r\n     * @param productCategoryProperties  \r\n     */",
      "dependencies": [
        "Partial<SelectedProductCategoryPropertiesSettings> | null"
      ],
      "parameters": [
        {
          "name": "productCategoryProperties",
          "type": "Partial<SelectedProductCategoryPropertiesSettings> | null",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "setRecommendationSettings",
      "parent": "ProductCategorySearchBuilder",
      "parentKind": "Class",
      "dependencies": [
        "RecommendationSettings"
      ],
      "parameters": [
        {
          "name": "settings",
          "type": "RecommendationSettings",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "setTerm",
      "parent": "ProductCategorySearchBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Set the term used to filter product categories by\r\n     */",
      "dependencies": [],
      "parameters": [
        {
          "name": "term",
          "type": "string | null | undefined",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "pagination",
      "parent": "ProductCategorySearchBuilder",
      "parentKind": "Class",
      "dependencies": [
        "(pagination: PaginationBuilder) => void"
      ],
      "parameters": [
        {
          "name": "paginate",
          "type": "(pagination: PaginationBuilder) => void",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "facets",
      "parent": "ProductCategorySearchBuilder",
      "parentKind": "Class",
      "dependencies": [
        "(facets: FacetBuilder) => void"
      ],
      "parameters": [
        {
          "name": "facets",
          "type": "(facets: FacetBuilder) => void",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "sorting",
      "parent": "ProductCategorySearchBuilder",
      "parentKind": "Class",
      "dependencies": [
        "(sortingBuilder: ProductCategorySortingBuilder) => void"
      ],
      "parameters": [
        {
          "name": "sorting",
          "type": "(sortingBuilder: ProductCategorySortingBuilder) => void",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "build",
      "parent": "ProductCategorySearchBuilder",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": [],
      "returnType": "ProductCategorySearchRequest",
      "isAsync": false
    },
    {
      "kind": "Constructor",
      "name": "constructor",
      "parent": "ProductCategorySearchBuilder",
      "parentKind": "Class",
      "dependencies": [
        "Settings"
      ],
      "parameters": [
        {
          "name": "settings",
          "type": "Settings",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ]
    },
    {
      "kind": "Class",
      "name": "ProductCategorySearchBuilder",
      "dependencies": [],
      "isAbstract": false,
      "isDefault": false,
      "properties": [],
      "extends": [
        "SearchRequestBuilder"
      ]
    },
    {
      "kind": "Method",
      "name": "sortByProductCategoryData",
      "parent": "ProductCategorySortingBuilder",
      "parentKind": "Class",
      "dependencies": [
        "'Ascending' | 'Descending'",
        "'Auto' | 'Alphabetical' | 'Numerical'",
        "(thenBy: ProductCategorySortingBuilder) => void"
      ],
      "parameters": [
        {
          "name": "key",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "order",
          "type": "'Ascending' | 'Descending'",
          "nullable": false,
          "defaultValue": "'Descending'",
          "isReadonly": false
        },
        {
          "name": "mode",
          "type": "'Auto' | 'Alphabetical' | 'Numerical'",
          "nullable": false,
          "defaultValue": "'Auto'",
          "isReadonly": false
        },
        {
          "name": "thenBy",
          "type": "(thenBy: ProductCategorySortingBuilder) => void",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "sortByProductCategoryRelevance",
      "parent": "ProductCategorySortingBuilder",
      "parentKind": "Class",
      "dependencies": [
        "'Ascending' | 'Descending'",
        "(thenBy: ProductCategorySortingBuilder) => void"
      ],
      "parameters": [
        {
          "name": "order",
          "type": "'Ascending' | 'Descending'",
          "nullable": false,
          "defaultValue": "'Descending'",
          "isReadonly": false
        },
        {
          "name": "thenBy",
          "type": "(thenBy: ProductCategorySortingBuilder) => void",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "sortByProductCategoryPopularity",
      "parent": "ProductCategorySortingBuilder",
      "parentKind": "Class",
      "dependencies": [
        "'Ascending' | 'Descending'",
        "(thenBy: ProductCategorySortingBuilder) => void"
      ],
      "parameters": [
        {
          "name": "order",
          "type": "'Ascending' | 'Descending'",
          "nullable": false,
          "defaultValue": "'Descending'",
          "isReadonly": false
        },
        {
          "name": "thenBy",
          "type": "(thenBy: ProductCategorySortingBuilder) => void",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "sortByProductCategoryAttribute",
      "parent": "ProductCategorySortingBuilder",
      "parentKind": "Class",
      "dependencies": [
        "'Id' | 'DisplayName'",
        "'Ascending' | 'Descending'",
        "'Auto' | 'Alphabetical' | 'Numerical'",
        "(thenBy: ProductCategorySortingBuilder) => void"
      ],
      "parameters": [
        {
          "name": "attribute",
          "type": "'Id' | 'DisplayName'",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "order",
          "type": "'Ascending' | 'Descending'",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "mode",
          "type": "'Auto' | 'Alphabetical' | 'Numerical'",
          "nullable": false,
          "defaultValue": "'Auto'",
          "isReadonly": false
        },
        {
          "name": "thenBy",
          "type": "(thenBy: ProductCategorySortingBuilder) => void",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "build",
      "parent": "ProductCategorySortingBuilder",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": [],
      "returnType": "ProductCategorySortBySpecification | null",
      "isAsync": false
    },
    {
      "kind": "Class",
      "name": "ProductCategorySortingBuilder",
      "dependencies": [],
      "isAbstract": false,
      "isDefault": false,
      "properties": [],
      "extends": null
    },
    {
      "kind": "Method",
      "name": "enabled",
      "parent": "ProductHighlightingBuilder",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": [
        {
          "name": "enabled",
          "type": "boolean",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "setHighlightable",
      "parent": "ProductHighlightingBuilder",
      "parentKind": "Class",
      "dependencies": [
        "{ displayName?: boolean, dataKeys?: string[] | null }"
      ],
      "parameters": [
        {
          "name": "highlightable",
          "type": "{ displayName?: boolean, dataKeys?: string[] | null }",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "setLimit",
      "parent": "ProductHighlightingBuilder",
      "parentKind": "Class",
      "dependencies": [
        "HighlightSettings2ProductProductHighlightPropsHighlightSettings2Limits"
      ],
      "parameters": [
        {
          "name": "limit",
          "type": "HighlightSettings2ProductProductHighlightPropsHighlightSettings2Limits",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "setShape",
      "parent": "ProductHighlightingBuilder",
      "parentKind": "Class",
      "dependencies": [
        "HighlightSettings2ProductProductHighlightPropsHighlightSettings2ResponseShape"
      ],
      "parameters": [
        {
          "name": "shape",
          "type": "HighlightSettings2ProductProductHighlightPropsHighlightSettings2ResponseShape",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "build",
      "parent": "ProductHighlightingBuilder",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": [],
      "returnType": "ProductSearchSettingsHighlightSettings",
      "isAsync": false
    },
    {
      "kind": "Class",
      "name": "ProductHighlightingBuilder",
      "dependencies": [],
      "isAbstract": false,
      "isDefault": false,
      "properties": [],
      "extends": null
    },
    {
      "kind": "Method",
      "name": "setSelectedProductProperties",
      "parent": "ProductSearchBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Select the properties of the product to be returned, by default only the product id is returned.\r\n     * @param productProperties  \r\n     */",
      "dependencies": [
        "Partial<SelectedProductPropertiesSettings> | null"
      ],
      "parameters": [
        {
          "name": "productProperties",
          "type": "Partial<SelectedProductPropertiesSettings> | null",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "setSelectedVariantProperties",
      "parent": "ProductSearchBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n    * Select the properties of the variant to be returned, by default only the variant id is returned.  \r\n    * @param variantProperties  \r\n    */",
      "dependencies": [
        "Partial<SelectedVariantPropertiesSettings> | null"
      ],
      "parameters": [
        {
          "name": "variantProperties",
          "type": "Partial<SelectedVariantPropertiesSettings> | null",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "setSelectedBrandProperties",
      "parent": "ProductSearchBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Select the properties of the brand to be returned, by default only the brand id is returned.\r\n     * @param brandProperties  \r\n     */",
      "dependencies": [
        "Partial<SelectedBrandPropertiesSettings> | null"
      ],
      "parameters": [
        {
          "name": "brandProperties",
          "type": "Partial<SelectedBrandPropertiesSettings> | null",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "setVariantSearchSettings",
      "parent": "ProductSearchBuilder",
      "parentKind": "Class",
      "dependencies": [
        "Partial<VariantSearchSettings>"
      ],
      "parameters": [
        {
          "name": "variantSearchSettings",
          "type": "Partial<VariantSearchSettings>",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "setExplodedVariants",
      "parent": "ProductSearchBuilder",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": [
        {
          "name": "count",
          "type": "number | null",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "setRecommendationSettings",
      "parent": "ProductSearchBuilder",
      "parentKind": "Class",
      "dependencies": [
        "RecommendationSettings"
      ],
      "parameters": [
        {
          "name": "settings",
          "type": "RecommendationSettings",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "setRetailMedia",
      "parent": "ProductSearchBuilder",
      "parentKind": "Class",
      "dependencies": [
        "RetailMediaQuery | null"
      ],
      "parameters": [
        {
          "name": "query",
          "type": "RetailMediaQuery | null",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "setTerm",
      "parent": "ProductSearchBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Set the term used to filter products by\r\n     */",
      "dependencies": [],
      "parameters": [
        {
          "name": "term",
          "type": "string | null | undefined",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "pagination",
      "parent": "ProductSearchBuilder",
      "parentKind": "Class",
      "dependencies": [
        "(pagination: PaginationBuilder) => void"
      ],
      "parameters": [
        {
          "name": "paginate",
          "type": "(pagination: PaginationBuilder) => void",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "facets",
      "parent": "ProductSearchBuilder",
      "parentKind": "Class",
      "dependencies": [
        "(facets: FacetBuilder) => void"
      ],
      "parameters": [
        {
          "name": "facets",
          "type": "(facets: FacetBuilder) => void",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "sorting",
      "parent": "ProductSearchBuilder",
      "parentKind": "Class",
      "dependencies": [
        "(sortingBuilder: ProductSortingBuilder) => void"
      ],
      "parameters": [
        {
          "name": "sorting",
          "type": "(sortingBuilder: ProductSortingBuilder) => void",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "searchConstraints",
      "parent": "ProductSearchBuilder",
      "parentKind": "Class",
      "dependencies": [
        "(searchConstraintBuilder: SearchConstraintBuilder) => void"
      ],
      "parameters": [
        {
          "name": "searchConstraintbuilder",
          "type": "(searchConstraintBuilder: SearchConstraintBuilder) => void",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "highlighting",
      "parent": "ProductSearchBuilder",
      "parentKind": "Class",
      "dependencies": [
        "(highlightingBuilder: ProductHighlightingBuilder) => void"
      ],
      "parameters": [
        {
          "name": "highlightingBuilder",
          "type": "(highlightingBuilder: ProductHighlightingBuilder) => void",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "build",
      "parent": "ProductSearchBuilder",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": [],
      "returnType": "ProductSearchRequest",
      "isAsync": false
    },
    {
      "kind": "Constructor",
      "name": "constructor",
      "parent": "ProductSearchBuilder",
      "parentKind": "Class",
      "dependencies": [
        "Settings"
      ],
      "parameters": [
        {
          "name": "settings",
          "type": "Settings",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ]
    },
    {
      "kind": "Class",
      "name": "ProductSearchBuilder",
      "dependencies": [],
      "isAbstract": false,
      "isDefault": false,
      "properties": [],
      "extends": [
        "SearchRequestBuilder"
      ]
    },
    {
      "kind": "Method",
      "name": "sortByProductData",
      "parent": "ProductSortingBuilder",
      "parentKind": "Class",
      "dependencies": [
        "'Product' | 'Variant' | 'VariantWithFallbackToProduct' | 'ProductWithFallbackToVariant'",
        "'Ascending' | 'Descending'",
        "(thenBy: ProductSortingBuilder) => void",
        "'Auto' | 'Alphabetical' | 'Numerical'"
      ],
      "parameters": [
        {
          "name": "key",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "selectionStrategy",
          "type": "'Product' | 'Variant' | 'VariantWithFallbackToProduct' | 'ProductWithFallbackToVariant'",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "order",
          "type": "'Ascending' | 'Descending'",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "thenBy",
          "type": "(thenBy: ProductSortingBuilder) => void",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "mode",
          "type": "'Auto' | 'Alphabetical' | 'Numerical'",
          "nullable": false,
          "defaultValue": "'Auto'",
          "isReadonly": false
        }
      ],
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "sortByProductDataObject",
      "parent": "ProductSortingBuilder",
      "parentKind": "Class",
      "dependencies": [
        "'Product' | 'Variant' | 'VariantWithFallbackToProduct' | 'ProductWithFallbackToVariant'",
        "'Ascending' | 'Descending'",
        "(valueSelector: DataObjectValueSelectorBuilder) => void",
        "(thenBy: ProductSortingBuilder) => void",
        "'Auto' | 'Alphabetical' | 'Numerical'"
      ],
      "parameters": [
        {
          "name": "selectionStrategy",
          "type": "'Product' | 'Variant' | 'VariantWithFallbackToProduct' | 'ProductWithFallbackToVariant'",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "order",
          "type": "'Ascending' | 'Descending'",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "valueSelector",
          "type": "(valueSelector: DataObjectValueSelectorBuilder) => void",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "thenBy",
          "type": "(thenBy: ProductSortingBuilder) => void",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "mode",
          "type": "'Auto' | 'Alphabetical' | 'Numerical'",
          "nullable": false,
          "defaultValue": "'Auto'",
          "isReadonly": false
        }
      ],
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "sortByProductRelevance",
      "parent": "ProductSortingBuilder",
      "parentKind": "Class",
      "dependencies": [
        "'Ascending' | 'Descending'",
        "(thenBy: ProductSortingBuilder) => void"
      ],
      "parameters": [
        {
          "name": "order",
          "type": "'Ascending' | 'Descending'",
          "nullable": false,
          "defaultValue": "'Descending'",
          "isReadonly": false
        },
        {
          "name": "thenBy",
          "type": "(thenBy: ProductSortingBuilder) => void",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "sortByProductPopularity",
      "parent": "ProductSortingBuilder",
      "parentKind": "Class",
      "dependencies": [
        "'Ascending' | 'Descending'",
        "(thenBy: ProductSortingBuilder) => void"
      ],
      "parameters": [
        {
          "name": "order",
          "type": "'Ascending' | 'Descending'",
          "nullable": false,
          "defaultValue": "'Descending'",
          "isReadonly": false
        },
        {
          "name": "thenBy",
          "type": "(thenBy: ProductSortingBuilder) => void",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "sortByProductAttribute",
      "parent": "ProductSortingBuilder",
      "parentKind": "Class",
      "dependencies": [
        "'Id' | 'DisplayName' | 'BrandId' | 'BrandName' | 'ListPrice' | 'SalesPrice'",
        "'Ascending' | 'Descending'",
        "(thenBy: ProductSortingBuilder) => void",
        "'Auto' | 'Alphabetical' | 'Numerical'"
      ],
      "parameters": [
        {
          "name": "attribute",
          "type": "'Id' | 'DisplayName' | 'BrandId' | 'BrandName' | 'ListPrice' | 'SalesPrice'",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "order",
          "type": "'Ascending' | 'Descending'",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "thenBy",
          "type": "(thenBy: ProductSortingBuilder) => void",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "mode",
          "type": "'Auto' | 'Alphabetical' | 'Numerical'",
          "nullable": false,
          "defaultValue": "'Auto'",
          "isReadonly": false
        }
      ],
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "sortByProductVariantAttribute",
      "parent": "ProductSortingBuilder",
      "parentKind": "Class",
      "dependencies": [
        "'Id' | 'DisplayName' | 'ListPrice' | 'SalesPrice'",
        "'Ascending' | 'Descending'",
        "(thenBy: ProductSortingBuilder) => void",
        "'Auto' | 'Alphabetical' | 'Numerical'"
      ],
      "parameters": [
        {
          "name": "attribute",
          "type": "'Id' | 'DisplayName' | 'ListPrice' | 'SalesPrice'",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "order",
          "type": "'Ascending' | 'Descending'",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "thenBy",
          "type": "(thenBy: ProductSortingBuilder) => void",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "mode",
          "type": "'Auto' | 'Alphabetical' | 'Numerical'",
          "nullable": false,
          "defaultValue": "'Auto'",
          "isReadonly": false
        }
      ],
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "sortByProductVariantSpecification",
      "parent": "ProductSortingBuilder",
      "parentKind": "Class",
      "dependencies": [
        "'Ascending' | 'Descending'",
        "(thenBy: ProductSortingBuilder) => void",
        "'Auto' | 'Alphabetical' | 'Numerical'"
      ],
      "parameters": [
        {
          "name": "key",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "order",
          "type": "'Ascending' | 'Descending'",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "thenBy",
          "type": "(thenBy: ProductSortingBuilder) => void",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        },
        {
          "name": "mode",
          "type": "'Auto' | 'Alphabetical' | 'Numerical'",
          "nullable": false,
          "defaultValue": "'Auto'",
          "isReadonly": false
        }
      ],
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "build",
      "parent": "ProductSortingBuilder",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": [],
      "returnType": "ProductSortBySpecification | null",
      "isAsync": false
    },
    {
      "kind": "Class",
      "name": "ProductSortingBuilder",
      "dependencies": [],
      "isAbstract": false,
      "isDefault": false,
      "properties": [],
      "extends": null
    },
    {
      "kind": "Interface",
      "name": "SearchBuilder",
      "extends": [],
      "properties": []
    },
    {
      "kind": "Method",
      "name": "addRequest",
      "parent": "SearchCollectionBuilder",
      "parentKind": "Class",
      "dependencies": [
        "ProductSearchRequest | ContentSearchRequest | ProductCategorySearchRequest  | SearchTermPredictionRequest"
      ],
      "parameters": [
        {
          "name": "request",
          "type": "ProductSearchRequest | ContentSearchRequest | ProductCategorySearchRequest  | SearchTermPredictionRequest",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "build",
      "parent": "SearchCollectionBuilder",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": [],
      "returnType": "SearchRequestCollection",
      "isAsync": false
    },
    {
      "kind": "Constructor",
      "name": "constructor",
      "parent": "SearchCollectionBuilder",
      "parentKind": "Class",
      "dependencies": [
        "Settings"
      ],
      "parameters": [
        {
          "name": "settings",
          "type": "Settings",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ]
    },
    {
      "kind": "Class",
      "name": "SearchCollectionBuilder",
      "dependencies": [],
      "isAbstract": false,
      "isDefault": false,
      "properties": [],
      "extends": [
        "SearchRequestBuilder"
      ]
    },
    {
      "kind": "Method",
      "name": "setResultMustHaveVariantConstraint",
      "parent": "SearchConstraintBuilder",
      "parentKind": "Class",
      "dependencies": [
        "{ exceptWhenProductHasNoVariants: boolean }"
      ],
      "parameters": [
        {
          "name": "constaint",
          "type": "{ exceptWhenProductHasNoVariants: boolean }",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "build",
      "parent": "SearchConstraintBuilder",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": [],
      "returnType": "ResultMustHaveVariantConstraint | null",
      "isAsync": false
    },
    {
      "kind": "Class",
      "name": "SearchConstraintBuilder",
      "dependencies": [],
      "isAbstract": false,
      "isDefault": false,
      "properties": [],
      "extends": null
    },
    {
      "kind": "Method",
      "name": "filters",
      "parent": "SearchRequestBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Adds filters to the request\r\n     * @param filterBuilder \r\n     * @returns \r\n     */",
      "dependencies": [
        "(builder: FilterBuilder) => void"
      ],
      "parameters": [
        {
          "name": "filterBuilder",
          "type": "(builder: FilterBuilder) => void",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "postFilters",
      "parent": "SearchRequestBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Adds post filters to the request\r\n     * @param filterBuilder \r\n     * @returns \r\n     */",
      "dependencies": [
        "(builder: FilterBuilder) => void"
      ],
      "parameters": [
        {
          "name": "filterBuilder",
          "type": "(builder: FilterBuilder) => void",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "relevanceModifiers",
      "parent": "SearchRequestBuilder",
      "parentKind": "Class",
      "dependencies": [
        "(builder: RelevanceModifierBuilder) => void"
      ],
      "parameters": [
        {
          "name": "relevanceModifiersBuilder",
          "type": "(builder: RelevanceModifierBuilder) => void",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "setIndex",
      "parent": "SearchRequestBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Use only when a specific index different from the 'default'-index is needed\r\n     * @param id \r\n     * @returns \r\n     */",
      "dependencies": [],
      "parameters": [
        {
          "name": "id",
          "type": "string | null",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Constructor",
      "name": "constructor",
      "parent": "SearchRequestBuilder",
      "parentKind": "Class",
      "parameters": [
        {
          "name": "settings",
          "type": "Settings",
          "nullable": true,
          "defaultValue": null,
          "isReadonly": true,
          "scope": "private"
        }
      ]
    },
    {
      "kind": "Class",
      "name": "SearchRequestBuilder",
      "dependencies": [],
      "isAbstract": true,
      "isDefault": false,
      "properties": [],
      "extends": null
    },
    {
      "kind": "Method",
      "name": "take",
      "parent": "SearchTermPredictionBuilder",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": [
        {
          "name": "count",
          "type": "number",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "setTerm",
      "parent": "SearchTermPredictionBuilder",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": [
        {
          "name": "term",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addEntityType",
      "parent": "SearchTermPredictionBuilder",
      "parentKind": "Class",
      "dependencies": [
        "('Product' | 'Variant' | 'ProductCategory' | 'Brand' | 'Content' | 'ContentCategory')[]"
      ],
      "parameters": [
        {
          "name": "types",
          "type": "('Product' | 'Variant' | 'ProductCategory' | 'Brand' | 'Content' | 'ContentCategory')[]",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "build",
      "parent": "SearchTermPredictionBuilder",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": [],
      "returnType": "SearchTermPredictionRequest",
      "isAsync": false
    },
    {
      "kind": "Constructor",
      "name": "constructor",
      "parent": "SearchTermPredictionBuilder",
      "parentKind": "Class",
      "dependencies": [
        "Settings"
      ],
      "parameters": [
        {
          "name": "settings",
          "type": "Settings",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ]
    },
    {
      "kind": "Class",
      "name": "SearchTermPredictionBuilder",
      "dependencies": [],
      "isAbstract": false,
      "isDefault": false,
      "properties": [],
      "extends": [
        "SearchRequestBuilder"
      ]
    },
    {
      "kind": "Method",
      "name": "setSelectedBrandProperties",
      "parent": "BrandSettingsRecommendationBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Select the properties of the brand to be returned, by default only the brand id is returned.\r\n     * @param brandProperties  \r\n     */",
      "dependencies": [
        "Partial<SelectedBrandPropertiesSettings> | null"
      ],
      "parameters": [
        {
          "name": "brandProperties",
          "type": "Partial<SelectedBrandPropertiesSettings> | null",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "setNumberOfRecommendations",
      "parent": "BrandSettingsRecommendationBuilder",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": [
        {
          "name": "count",
          "type": "number",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "allowFillIfNecessaryToReachNumberOfRecommendations",
      "parent": "BrandSettingsRecommendationBuilder",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": [
        {
          "name": "allowed",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "true",
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "allowReplacingOfRecentlyShownRecommendations",
      "parent": "BrandSettingsRecommendationBuilder",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": [
        {
          "name": "allowed",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "true",
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "prioritizeDiversityBetweenRequests",
      "parent": "BrandSettingsRecommendationBuilder",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": [
        {
          "name": "prioritize",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "true",
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Constructor",
      "name": "constructor",
      "parent": "BrandSettingsRecommendationBuilder",
      "parentKind": "Class",
      "dependencies": [
        "Settings"
      ],
      "parameters": [
        {
          "name": "settings",
          "type": "Settings",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ]
    },
    {
      "kind": "Class",
      "name": "BrandSettingsRecommendationBuilder",
      "dependencies": [],
      "isAbstract": false,
      "isDefault": false,
      "properties": [],
      "extends": [
        "RecommendationRequestBuilder"
      ]
    },
    {
      "kind": "Interface",
      "name": "BrandsRecommendationBuilder",
      "extends": [],
      "properties": []
    },
    {
      "kind": "Method",
      "name": "sinceMinutesAgo",
      "parent": "PersonalBrandRecommendationBuilder",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": [
        {
          "name": "sinceMinutesAgo",
          "type": "number",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "setWeights",
      "parent": "PersonalBrandRecommendationBuilder",
      "parentKind": "Class",
      "dependencies": [
        "BrandRecommendationWeights"
      ],
      "parameters": [
        {
          "name": "weights",
          "type": "BrandRecommendationWeights",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "build",
      "parent": "PersonalBrandRecommendationBuilder",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": [],
      "isAsync": false
    },
    {
      "kind": "Constructor",
      "name": "constructor",
      "parent": "PersonalBrandRecommendationBuilder",
      "parentKind": "Class",
      "dependencies": [
        "Settings"
      ],
      "parameters": [
        {
          "name": "settings",
          "type": "Settings",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ]
    },
    {
      "kind": "Class",
      "name": "PersonalBrandRecommendationBuilder",
      "dependencies": [],
      "isAbstract": false,
      "isDefault": false,
      "properties": [],
      "extends": [
        "BrandSettingsRecommendationBuilder"
      ]
    },
    {
      "kind": "Method",
      "name": "sinceMinutesAgo",
      "parent": "PopularBrandsRecommendationBuilder",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": [
        {
          "name": "sinceMinutesAgo",
          "type": "number",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "setWeights",
      "parent": "PopularBrandsRecommendationBuilder",
      "parentKind": "Class",
      "dependencies": [
        "BrandRecommendationWeights"
      ],
      "parameters": [
        {
          "name": "weights",
          "type": "BrandRecommendationWeights",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "build",
      "parent": "PopularBrandsRecommendationBuilder",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": [],
      "isAsync": false
    },
    {
      "kind": "Constructor",
      "name": "constructor",
      "parent": "PopularBrandsRecommendationBuilder",
      "parentKind": "Class",
      "dependencies": [
        "Settings"
      ],
      "parameters": [
        {
          "name": "settings",
          "type": "Settings",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ]
    },
    {
      "kind": "Class",
      "name": "PopularBrandsRecommendationBuilder",
      "dependencies": [],
      "isAbstract": false,
      "isDefault": false,
      "properties": [],
      "extends": [
        "BrandSettingsRecommendationBuilder"
      ]
    },
    {
      "kind": "Interface",
      "name": "ContentCategoriesRecommendationBuilder",
      "extends": [],
      "properties": []
    },
    {
      "kind": "Method",
      "name": "addRequest",
      "parent": "ContentCategoriesRecommendationCollectionBuilder",
      "parentKind": "Class",
      "dependencies": [
        "(PersonalContentCategoryRecommendationRequest | PopularContentCategoriesRecommendationRequest)"
      ],
      "parameters": [
        {
          "name": "request",
          "type": "(PersonalContentCategoryRecommendationRequest | PopularContentCategoriesRecommendationRequest)",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "requireDistinctCategoriesAcrossResults",
      "parent": "ContentCategoriesRecommendationCollectionBuilder",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": [
        {
          "name": "distinctCategoriesAcrossResults",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "true",
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "build",
      "parent": "ContentCategoriesRecommendationCollectionBuilder",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": [],
      "returnType": "ContentCategoryRecommendationRequestCollection",
      "isAsync": false
    },
    {
      "kind": "Class",
      "name": "ContentCategoriesRecommendationCollectionBuilder",
      "dependencies": [],
      "isAbstract": false,
      "isDefault": false,
      "properties": [],
      "extends": null
    },
    {
      "kind": "Method",
      "name": "setSelectedContentCategoryProperties",
      "parent": "ContentCategorySettingsRecommendationBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Select the properties of the content category to be returned, by default only the content category id is returned.\r\n     * @param contentCategoryProperties  \r\n     */",
      "dependencies": [
        "Partial<SelectedContentCategoryPropertiesSettings> | null"
      ],
      "parameters": [
        {
          "name": "contentCategoryProperties",
          "type": "Partial<SelectedContentCategoryPropertiesSettings> | null",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "setNumberOfRecommendations",
      "parent": "ContentCategorySettingsRecommendationBuilder",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": [
        {
          "name": "count",
          "type": "number",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "allowFillIfNecessaryToReachNumberOfRecommendations",
      "parent": "ContentCategorySettingsRecommendationBuilder",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": [
        {
          "name": "allowed",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "true",
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "allowReplacingOfRecentlyShownRecommendations",
      "parent": "ContentCategorySettingsRecommendationBuilder",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": [
        {
          "name": "allowed",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "true",
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "prioritizeDiversityBetweenRequests",
      "parent": "ContentCategorySettingsRecommendationBuilder",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": [
        {
          "name": "prioritize",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "true",
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Constructor",
      "name": "constructor",
      "parent": "ContentCategorySettingsRecommendationBuilder",
      "parentKind": "Class",
      "dependencies": [
        "Settings"
      ],
      "parameters": [
        {
          "name": "settings",
          "type": "Settings",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ]
    },
    {
      "kind": "Class",
      "name": "ContentCategorySettingsRecommendationBuilder",
      "dependencies": [],
      "isAbstract": false,
      "isDefault": false,
      "properties": [],
      "extends": [
        "RecommendationRequestBuilder"
      ]
    },
    {
      "kind": "Method",
      "name": "sinceMinutesAgo",
      "parent": "PersonalContentCategoryRecommendationBuilder",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": [
        {
          "name": "sinceMinutesAgo",
          "type": "number",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "setWeights",
      "parent": "PersonalContentCategoryRecommendationBuilder",
      "parentKind": "Class",
      "dependencies": [
        "ContentCategoryRecommendationWeights"
      ],
      "parameters": [
        {
          "name": "weights",
          "type": "ContentCategoryRecommendationWeights",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "build",
      "parent": "PersonalContentCategoryRecommendationBuilder",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": [],
      "isAsync": false
    },
    {
      "kind": "Constructor",
      "name": "constructor",
      "parent": "PersonalContentCategoryRecommendationBuilder",
      "parentKind": "Class",
      "dependencies": [
        "Settings"
      ],
      "parameters": [
        {
          "name": "settings",
          "type": "Settings",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ]
    },
    {
      "kind": "Class",
      "name": "PersonalContentCategoryRecommendationBuilder",
      "dependencies": [],
      "isAbstract": false,
      "isDefault": false,
      "properties": [],
      "extends": [
        "ContentCategorySettingsRecommendationBuilder"
      ]
    },
    {
      "kind": "Method",
      "name": "sinceMinutesAgo",
      "parent": "PopularContentCategoriesRecommendationBuilder",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": [
        {
          "name": "sinceMinutesAgo",
          "type": "number",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "setWeights",
      "parent": "PopularContentCategoriesRecommendationBuilder",
      "parentKind": "Class",
      "dependencies": [
        "ContentCategoryRecommendationWeights"
      ],
      "parameters": [
        {
          "name": "weights",
          "type": "ContentCategoryRecommendationWeights",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "build",
      "parent": "PopularContentCategoriesRecommendationBuilder",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": [],
      "isAsync": false
    },
    {
      "kind": "Constructor",
      "name": "constructor",
      "parent": "PopularContentCategoriesRecommendationBuilder",
      "parentKind": "Class",
      "dependencies": [
        "Settings"
      ],
      "parameters": [
        {
          "name": "settings",
          "type": "Settings",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ]
    },
    {
      "kind": "Class",
      "name": "PopularContentCategoriesRecommendationBuilder",
      "dependencies": [],
      "isAbstract": false,
      "isDefault": false,
      "properties": [],
      "extends": [
        "ContentCategorySettingsRecommendationBuilder"
      ]
    },
    {
      "kind": "Method",
      "name": "setSelectedContentProperties",
      "parent": "ContentSettingsRecommendationBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Select the properties of the content to be returned, by default only the content id is returned.\r\n     * @param contentProperties  \r\n     */",
      "dependencies": [
        "Partial<SelectedContentPropertiesSettings> | null"
      ],
      "parameters": [
        {
          "name": "contentProperties",
          "type": "Partial<SelectedContentPropertiesSettings> | null",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "setNumberOfRecommendations",
      "parent": "ContentSettingsRecommendationBuilder",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": [
        {
          "name": "count",
          "type": "number",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "allowFillIfNecessaryToReachNumberOfRecommendations",
      "parent": "ContentSettingsRecommendationBuilder",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": [
        {
          "name": "allowed",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "true",
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "allowReplacingOfRecentlyShownRecommendations",
      "parent": "ContentSettingsRecommendationBuilder",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": [
        {
          "name": "allowed",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "true",
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "prioritizeDiversityBetweenRequests",
      "parent": "ContentSettingsRecommendationBuilder",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": [
        {
          "name": "prioritize",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "true",
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Constructor",
      "name": "constructor",
      "parent": "ContentSettingsRecommendationBuilder",
      "parentKind": "Class",
      "dependencies": [
        "Settings"
      ],
      "parameters": [
        {
          "name": "settings",
          "type": "Settings",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ]
    },
    {
      "kind": "Class",
      "name": "ContentSettingsRecommendationBuilder",
      "dependencies": [],
      "isAbstract": false,
      "isDefault": false,
      "properties": [],
      "extends": [
        "RecommendationRequestBuilder"
      ]
    },
    {
      "kind": "Interface",
      "name": "ContentsRecommendationBuilder",
      "extends": [],
      "properties": []
    },
    {
      "kind": "Method",
      "name": "addRequest",
      "parent": "ContentsRecommendationCollectionBuilder",
      "parentKind": "Class",
      "dependencies": [
        "ContentsViewedAfterViewingContentRequest\r\n        | ContentsViewedAfterViewingMultipleContentsRequest\r\n        | ContentsViewedAfterViewingMultipleProductsRequest\r\n        | ContentsViewedAfterViewingProductRequest\r\n        | PersonalContentRecommendationRequest\r\n        | PopularContentsRequest"
      ],
      "parameters": [
        {
          "name": "request",
          "type": "ContentsViewedAfterViewingContentRequest\r\n        | ContentsViewedAfterViewingMultipleContentsRequest\r\n        | ContentsViewedAfterViewingMultipleProductsRequest\r\n        | ContentsViewedAfterViewingProductRequest\r\n        | PersonalContentRecommendationRequest\r\n        | PopularContentsRequest",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "requireDistinctContentsAcrossResults",
      "parent": "ContentsRecommendationCollectionBuilder",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": [
        {
          "name": "distinctContentsAcrossResults",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "true",
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "build",
      "parent": "ContentsRecommendationCollectionBuilder",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": [],
      "returnType": "ContentRecommendationRequestCollection",
      "isAsync": false
    },
    {
      "kind": "Class",
      "name": "ContentsRecommendationCollectionBuilder",
      "dependencies": [],
      "isAbstract": false,
      "isDefault": false,
      "properties": [],
      "extends": null
    },
    {
      "kind": "Method",
      "name": "setContentId",
      "parent": "ContentsViewedAfterViewingContentBuilder",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": [
        {
          "name": "contentId",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "build",
      "parent": "ContentsViewedAfterViewingContentBuilder",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": [],
      "isAsync": false
    },
    {
      "kind": "Constructor",
      "name": "constructor",
      "parent": "ContentsViewedAfterViewingContentBuilder",
      "parentKind": "Class",
      "dependencies": [
        "Settings"
      ],
      "parameters": [
        {
          "name": "settings",
          "type": "Settings",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ]
    },
    {
      "kind": "Class",
      "name": "ContentsViewedAfterViewingContentBuilder",
      "dependencies": [],
      "isAbstract": false,
      "isDefault": false,
      "properties": [],
      "extends": [
        "ContentSettingsRecommendationBuilder"
      ]
    },
    {
      "kind": "Method",
      "name": "setContentIds",
      "parent": "ContentsViewedAfterViewingMultipleContentsBuilder",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": [
        {
          "name": "ids",
          "type": "string[]",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "build",
      "parent": "ContentsViewedAfterViewingMultipleContentsBuilder",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": [],
      "isAsync": false
    },
    {
      "kind": "Constructor",
      "name": "constructor",
      "parent": "ContentsViewedAfterViewingMultipleContentsBuilder",
      "parentKind": "Class",
      "dependencies": [
        "Settings"
      ],
      "parameters": [
        {
          "name": "settings",
          "type": "Settings",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ]
    },
    {
      "kind": "Class",
      "name": "ContentsViewedAfterViewingMultipleContentsBuilder",
      "dependencies": [],
      "isAbstract": false,
      "isDefault": false,
      "properties": [],
      "extends": [
        "ContentSettingsRecommendationBuilder"
      ]
    },
    {
      "kind": "Method",
      "name": "addProduct",
      "parent": "ContentsViewedAfterViewingMultipleProductsBuilder",
      "parentKind": "Class",
      "dependencies": [
        "{ productId: string; variantId?: string; }"
      ],
      "parameters": [
        {
          "name": "product",
          "type": "{ productId: string; variantId?: string; }",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addProducts",
      "parent": "ContentsViewedAfterViewingMultipleProductsBuilder",
      "parentKind": "Class",
      "dependencies": [
        "{ productId: string; variantId?: string; }[]"
      ],
      "parameters": [
        {
          "name": "products",
          "type": "{ productId: string; variantId?: string; }[]",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "build",
      "parent": "ContentsViewedAfterViewingMultipleProductsBuilder",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": [],
      "isAsync": false
    },
    {
      "kind": "Constructor",
      "name": "constructor",
      "parent": "ContentsViewedAfterViewingMultipleProductsBuilder",
      "parentKind": "Class",
      "dependencies": [
        "Settings"
      ],
      "parameters": [
        {
          "name": "settings",
          "type": "Settings",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ]
    },
    {
      "kind": "Class",
      "name": "ContentsViewedAfterViewingMultipleProductsBuilder",
      "dependencies": [],
      "isAbstract": false,
      "isDefault": false,
      "properties": [],
      "extends": [
        "ContentSettingsRecommendationBuilder"
      ]
    },
    {
      "kind": "Method",
      "name": "product",
      "parent": "ContentsViewedAfterViewingProductBuilder",
      "parentKind": "Class",
      "dependencies": [
        "{ productId: string; variantId?: string; }"
      ],
      "parameters": [
        {
          "name": "product",
          "type": "{ productId: string; variantId?: string; }",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "build",
      "parent": "ContentsViewedAfterViewingProductBuilder",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": [],
      "isAsync": false
    },
    {
      "kind": "Constructor",
      "name": "constructor",
      "parent": "ContentsViewedAfterViewingProductBuilder",
      "parentKind": "Class",
      "dependencies": [
        "Settings"
      ],
      "parameters": [
        {
          "name": "settings",
          "type": "Settings",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ]
    },
    {
      "kind": "Class",
      "name": "ContentsViewedAfterViewingProductBuilder",
      "dependencies": [],
      "isAbstract": false,
      "isDefault": false,
      "properties": [],
      "extends": [
        "ContentSettingsRecommendationBuilder"
      ]
    },
    {
      "kind": "Method",
      "name": "build",
      "parent": "PersonalContentRecommendationBuilder",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": [],
      "isAsync": false
    },
    {
      "kind": "Constructor",
      "name": "constructor",
      "parent": "PersonalContentRecommendationBuilder",
      "parentKind": "Class",
      "dependencies": [
        "Settings"
      ],
      "parameters": [
        {
          "name": "settings",
          "type": "Settings",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ]
    },
    {
      "kind": "Class",
      "name": "PersonalContentRecommendationBuilder",
      "dependencies": [],
      "isAbstract": false,
      "isDefault": false,
      "properties": [],
      "extends": [
        "ContentSettingsRecommendationBuilder"
      ]
    },
    {
      "kind": "Method",
      "name": "sinceMinutesAgo",
      "parent": "PopularContentsBuilder",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": [
        {
          "name": "sinceMinutesAgo",
          "type": "number",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "build",
      "parent": "PopularContentsBuilder",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": [],
      "isAsync": false
    },
    {
      "kind": "Constructor",
      "name": "constructor",
      "parent": "PopularContentsBuilder",
      "parentKind": "Class",
      "dependencies": [
        "Settings"
      ],
      "parameters": [
        {
          "name": "settings",
          "type": "Settings",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ]
    },
    {
      "kind": "Class",
      "name": "PopularContentsBuilder",
      "dependencies": [],
      "isAbstract": false,
      "isDefault": false,
      "properties": [],
      "extends": [
        "ContentSettingsRecommendationBuilder"
      ]
    },
    {
      "kind": "Method",
      "name": "sinceMinutesAgo",
      "parent": "PersonalProductCategoryRecommendationBuilder",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": [
        {
          "name": "sinceMinutesAgo",
          "type": "number",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "setWeights",
      "parent": "PersonalProductCategoryRecommendationBuilder",
      "parentKind": "Class",
      "dependencies": [
        "ProductCategoryRecommendationWeights"
      ],
      "parameters": [
        {
          "name": "weights",
          "type": "ProductCategoryRecommendationWeights",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "build",
      "parent": "PersonalProductCategoryRecommendationBuilder",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": [],
      "isAsync": false
    },
    {
      "kind": "Constructor",
      "name": "constructor",
      "parent": "PersonalProductCategoryRecommendationBuilder",
      "parentKind": "Class",
      "dependencies": [
        "Settings"
      ],
      "parameters": [
        {
          "name": "settings",
          "type": "Settings",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ]
    },
    {
      "kind": "Class",
      "name": "PersonalProductCategoryRecommendationBuilder",
      "dependencies": [],
      "isAbstract": false,
      "isDefault": false,
      "properties": [],
      "extends": [
        "ProductCategorySettingsRecommendationBuilder"
      ]
    },
    {
      "kind": "Method",
      "name": "sinceMinutesAgo",
      "parent": "PopularProductCategoriesRecommendationBuilder",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": [
        {
          "name": "sinceMinutesAgo",
          "type": "number",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "setWeights",
      "parent": "PopularProductCategoriesRecommendationBuilder",
      "parentKind": "Class",
      "dependencies": [
        "ProductCategoryRecommendationWeights"
      ],
      "parameters": [
        {
          "name": "weights",
          "type": "ProductCategoryRecommendationWeights",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "build",
      "parent": "PopularProductCategoriesRecommendationBuilder",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": [],
      "isAsync": false
    },
    {
      "kind": "Constructor",
      "name": "constructor",
      "parent": "PopularProductCategoriesRecommendationBuilder",
      "parentKind": "Class",
      "dependencies": [
        "Settings"
      ],
      "parameters": [
        {
          "name": "settings",
          "type": "Settings",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ]
    },
    {
      "kind": "Class",
      "name": "PopularProductCategoriesRecommendationBuilder",
      "dependencies": [],
      "isAbstract": false,
      "isDefault": false,
      "properties": [],
      "extends": [
        "ProductCategorySettingsRecommendationBuilder"
      ]
    },
    {
      "kind": "Interface",
      "name": "ProductCategoriesRecommendationBuilder",
      "extends": [],
      "properties": []
    },
    {
      "kind": "Method",
      "name": "addRequest",
      "parent": "ProductCategoriesRecommendationCollectionBuilder",
      "parentKind": "Class",
      "dependencies": [
        "(PersonalProductCategoryRecommendationRequest | PopularProductCategoriesRecommendationRequest)"
      ],
      "parameters": [
        {
          "name": "request",
          "type": "(PersonalProductCategoryRecommendationRequest | PopularProductCategoriesRecommendationRequest)",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "requireDistinctCategoriesAcrossResults",
      "parent": "ProductCategoriesRecommendationCollectionBuilder",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": [
        {
          "name": "distinctCategoriesAcrossResults",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "true",
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "build",
      "parent": "ProductCategoriesRecommendationCollectionBuilder",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": [],
      "returnType": "ProductCategoryRecommendationRequestCollection",
      "isAsync": false
    },
    {
      "kind": "Class",
      "name": "ProductCategoriesRecommendationCollectionBuilder",
      "dependencies": [],
      "isAbstract": false,
      "isDefault": false,
      "properties": [],
      "extends": null
    },
    {
      "kind": "Method",
      "name": "setProductCategoryProperties",
      "parent": "ProductCategorySettingsRecommendationBuilder",
      "parentKind": "Class",
      "dependencies": [
        "Partial<SelectedProductCategoryPropertiesSettings>"
      ],
      "parameters": [
        {
          "name": "ProductCategoryProperties",
          "type": "Partial<SelectedProductCategoryPropertiesSettings>",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "setNumberOfRecommendations",
      "parent": "ProductCategorySettingsRecommendationBuilder",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": [
        {
          "name": "count",
          "type": "number",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "allowFillIfNecessaryToReachNumberOfRecommendations",
      "parent": "ProductCategorySettingsRecommendationBuilder",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": [
        {
          "name": "allowed",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "true",
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "allowReplacingOfRecentlyShownRecommendations",
      "parent": "ProductCategorySettingsRecommendationBuilder",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": [
        {
          "name": "allowed",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "true",
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "prioritizeDiversityBetweenRequests",
      "parent": "ProductCategorySettingsRecommendationBuilder",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": [
        {
          "name": "prioritize",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "true",
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Constructor",
      "name": "constructor",
      "parent": "ProductCategorySettingsRecommendationBuilder",
      "parentKind": "Class",
      "dependencies": [
        "Settings"
      ],
      "parameters": [
        {
          "name": "settings",
          "type": "Settings",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ]
    },
    {
      "kind": "Class",
      "name": "ProductCategorySettingsRecommendationBuilder",
      "dependencies": [],
      "isAbstract": false,
      "isDefault": false,
      "properties": [],
      "extends": [
        "RecommendationRequestBuilder"
      ]
    },
    {
      "kind": "Method",
      "name": "product",
      "parent": "BySingleProductRecommendationBuilder",
      "parentKind": "Class",
      "dependencies": [
        "{ productId: string; variantId?: string; }"
      ],
      "parameters": [
        {
          "name": "product",
          "type": "{ productId: string; variantId?: string; }",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Constructor",
      "name": "constructor",
      "parent": "BySingleProductRecommendationBuilder",
      "parentKind": "Class",
      "dependencies": [
        "Settings"
      ],
      "parameters": [
        {
          "name": "settings",
          "type": "Settings",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ]
    },
    {
      "kind": "Class",
      "name": "BySingleProductRecommendationBuilder",
      "dependencies": [],
      "isAbstract": false,
      "isDefault": false,
      "properties": [],
      "extends": [
        "ProductSettingsRecommendationBuilder"
      ]
    },
    {
      "kind": "Method",
      "name": "build",
      "parent": "PersonalProductRecommendationBuilder",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": [],
      "isAsync": false
    },
    {
      "kind": "Constructor",
      "name": "constructor",
      "parent": "PersonalProductRecommendationBuilder",
      "parentKind": "Class",
      "dependencies": [
        "Settings"
      ],
      "parameters": [
        {
          "name": "settings",
          "type": "Settings",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ]
    },
    {
      "kind": "Class",
      "name": "PersonalProductRecommendationBuilder",
      "dependencies": [],
      "isAbstract": false,
      "isDefault": false,
      "properties": [],
      "extends": [
        "ProductSettingsRecommendationBuilder"
      ]
    },
    {
      "kind": "Method",
      "name": "setDataKeyPopularityMultiplierSelector",
      "parent": "PopularityMultiplierBuilder",
      "parentKind": "Class",
      "dependencies": [
        "{ key?: string | null }"
      ],
      "parameters": [
        {
          "name": "selector",
          "type": "{ key?: string | null }",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "build",
      "parent": "PopularityMultiplierBuilder",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": [],
      "returnType": "PopularityMultiplierSelector | null",
      "isAsync": false
    },
    {
      "kind": "Class",
      "name": "PopularityMultiplierBuilder",
      "dependencies": [],
      "isAbstract": false,
      "isDefault": false,
      "properties": [],
      "extends": null
    },
    {
      "kind": "Method",
      "name": "basedOn",
      "parent": "PopularProductsBuilder",
      "parentKind": "Class",
      "dependencies": [
        "'MostPurchased' | 'MostViewed'"
      ],
      "parameters": [
        {
          "name": "basedOn",
          "type": "'MostPurchased' | 'MostViewed'",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "sinceMinutesAgo",
      "parent": "PopularProductsBuilder",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": [
        {
          "name": "sinceMinutesAgo",
          "type": "number",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "setPopularityMultiplier",
      "parent": "PopularProductsBuilder",
      "parentKind": "Class",
      "dependencies": [
        "(popularityMultiplierBuilder: PopularityMultiplierBuilder) => void"
      ],
      "parameters": [
        {
          "name": "popularityMultiplierBuilder",
          "type": "(popularityMultiplierBuilder: PopularityMultiplierBuilder) => void",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "build",
      "parent": "PopularProductsBuilder",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": [],
      "isAsync": false
    },
    {
      "kind": "Constructor",
      "name": "constructor",
      "parent": "PopularProductsBuilder",
      "parentKind": "Class",
      "dependencies": [
        "Settings"
      ],
      "parameters": [
        {
          "name": "settings",
          "type": "Settings",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ]
    },
    {
      "kind": "Class",
      "name": "PopularProductsBuilder",
      "dependencies": [],
      "isAbstract": false,
      "isDefault": false,
      "properties": [],
      "extends": [
        "ProductSettingsRecommendationBuilder"
      ]
    },
    {
      "kind": "Method",
      "name": "setSelectedProductProperties",
      "parent": "ProductSettingsRecommendationBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Select the properties of the product to be returned, by default only the product id is returned.\r\n     * @param productProperties  \r\n     */",
      "dependencies": [
        "Partial<SelectedProductPropertiesSettings> | null"
      ],
      "parameters": [
        {
          "name": "productProperties",
          "type": "Partial<SelectedProductPropertiesSettings> | null",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "setSelectedVariantProperties",
      "parent": "ProductSettingsRecommendationBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n    * Select the properties of the variant to be returned, by default only the variant id is returned.  \r\n    * @param variantProperties  \r\n    */",
      "dependencies": [
        "Partial<SelectedVariantPropertiesSettings> | null"
      ],
      "parameters": [
        {
          "name": "variantProperties",
          "type": "Partial<SelectedVariantPropertiesSettings> | null",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "setSelectedBrandProperties",
      "parent": "ProductSettingsRecommendationBuilder",
      "parentKind": "Class",
      "docs": "/**\r\n     * Select the properties of the brand to be returned, by default only the brand id is returned.\r\n     * @param brandProperties  \r\n     */",
      "dependencies": [
        "Partial<SelectedBrandPropertiesSettings> | null"
      ],
      "parameters": [
        {
          "name": "brandProperties",
          "type": "Partial<SelectedBrandPropertiesSettings> | null",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "setNumberOfRecommendations",
      "parent": "ProductSettingsRecommendationBuilder",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": [
        {
          "name": "count",
          "type": "number",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "allowFillIfNecessaryToReachNumberOfRecommendations",
      "parent": "ProductSettingsRecommendationBuilder",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": [
        {
          "name": "allowed",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "true",
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "allowReplacingOfRecentlyShownRecommendations",
      "parent": "ProductSettingsRecommendationBuilder",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": [
        {
          "name": "allowed",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "true",
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "allowProductsCurrentlyInCart",
      "parent": "ProductSettingsRecommendationBuilder",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": [
        {
          "name": "allowed",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "true",
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "prioritizeDiversityBetweenRequests",
      "parent": "ProductSettingsRecommendationBuilder",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": [
        {
          "name": "prioritize",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "true",
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "recommendVariant",
      "parent": "ProductSettingsRecommendationBuilder",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": [
        {
          "name": "recommend",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "true",
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Constructor",
      "name": "constructor",
      "parent": "ProductSettingsRecommendationBuilder",
      "parentKind": "Class",
      "dependencies": [
        "Settings"
      ],
      "parameters": [
        {
          "name": "settings",
          "type": "Settings",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ]
    },
    {
      "kind": "Class",
      "name": "ProductSettingsRecommendationBuilder",
      "dependencies": [],
      "isAbstract": false,
      "isDefault": false,
      "properties": [],
      "extends": [
        "RecommendationRequestBuilder"
      ]
    },
    {
      "kind": "Interface",
      "name": "ProductsRecommendationBuilder",
      "extends": [],
      "properties": []
    },
    {
      "kind": "Method",
      "name": "addRequest",
      "parent": "ProductsRecommendationCollectionBuilder",
      "parentKind": "Class",
      "dependencies": [
        "CustomProductRecommendationRequest\r\n        | PersonalProductRecommendationRequest\r\n        | PopularProductsRequest\r\n        | ProductsViewedAfterViewingContentRequest\r\n        | ProductsViewedAfterViewingProductRequest\r\n        | PurchasedWithCurrentCartRequest\r\n        | PurchasedWithMultipleProductsRequest\r\n        | PurchasedWithProductRequest\r\n        | RecentlyViewedProductsRequest\r\n        | SearchTermBasedProductRecommendationRequest\r\n        | SimilarProductsRequest\r\n        | SortProductsRequest\r\n        | SortVariantsRequest"
      ],
      "parameters": [
        {
          "name": "request",
          "type": "CustomProductRecommendationRequest\r\n        | PersonalProductRecommendationRequest\r\n        | PopularProductsRequest\r\n        | ProductsViewedAfterViewingContentRequest\r\n        | ProductsViewedAfterViewingProductRequest\r\n        | PurchasedWithCurrentCartRequest\r\n        | PurchasedWithMultipleProductsRequest\r\n        | PurchasedWithProductRequest\r\n        | RecentlyViewedProductsRequest\r\n        | SearchTermBasedProductRecommendationRequest\r\n        | SimilarProductsRequest\r\n        | SortProductsRequest\r\n        | SortVariantsRequest",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "requireDistinctProductsAcrossResults",
      "parent": "ProductsRecommendationCollectionBuilder",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": [
        {
          "name": "distinctProductsAcrossResults",
          "type": "boolean",
          "nullable": false,
          "defaultValue": "true",
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "build",
      "parent": "ProductsRecommendationCollectionBuilder",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": [],
      "returnType": "ProductRecommendationRequestCollection",
      "isAsync": false
    },
    {
      "kind": "Class",
      "name": "ProductsRecommendationCollectionBuilder",
      "dependencies": [],
      "isAbstract": false,
      "isDefault": false,
      "properties": [],
      "extends": null
    },
    {
      "kind": "Method",
      "name": "setContentId",
      "parent": "ProductsViewedAfterViewingContentBuilder",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": [
        {
          "name": "contentId",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "build",
      "parent": "ProductsViewedAfterViewingContentBuilder",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": [],
      "isAsync": false
    },
    {
      "kind": "Constructor",
      "name": "constructor",
      "parent": "ProductsViewedAfterViewingContentBuilder",
      "parentKind": "Class",
      "dependencies": [
        "Settings"
      ],
      "parameters": [
        {
          "name": "settings",
          "type": "Settings",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ]
    },
    {
      "kind": "Class",
      "name": "ProductsViewedAfterViewingContentBuilder",
      "dependencies": [],
      "isAbstract": false,
      "isDefault": false,
      "properties": [],
      "extends": [
        "ProductSettingsRecommendationBuilder"
      ]
    },
    {
      "kind": "Method",
      "name": "build",
      "parent": "ProductsViewedAfterViewingProductBuilder",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": [],
      "isAsync": false
    },
    {
      "kind": "Constructor",
      "name": "constructor",
      "parent": "ProductsViewedAfterViewingProductBuilder",
      "parentKind": "Class",
      "dependencies": [
        "Settings"
      ],
      "parameters": [
        {
          "name": "settings",
          "type": "Settings",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ]
    },
    {
      "kind": "Class",
      "name": "ProductsViewedAfterViewingProductBuilder",
      "dependencies": [],
      "isAbstract": false,
      "isDefault": false,
      "properties": [],
      "extends": [
        "BySingleProductRecommendationBuilder"
      ]
    },
    {
      "kind": "Method",
      "name": "build",
      "parent": "PurchasedWithCurrentCartBuilder",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": [],
      "isAsync": false
    },
    {
      "kind": "Constructor",
      "name": "constructor",
      "parent": "PurchasedWithCurrentCartBuilder",
      "parentKind": "Class",
      "dependencies": [
        "Settings"
      ],
      "parameters": [
        {
          "name": "settings",
          "type": "Settings",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ]
    },
    {
      "kind": "Class",
      "name": "PurchasedWithCurrentCartBuilder",
      "dependencies": [],
      "isAbstract": false,
      "isDefault": false,
      "properties": [],
      "extends": [
        "ProductSettingsRecommendationBuilder"
      ]
    },
    {
      "kind": "Method",
      "name": "addProduct",
      "parent": "PurchasedWithMultipleProductsBuilder",
      "parentKind": "Class",
      "dependencies": [
        "{ productId: string; variantId?: string; }"
      ],
      "parameters": [
        {
          "name": "product",
          "type": "{ productId: string; variantId?: string; }",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addProducts",
      "parent": "PurchasedWithMultipleProductsBuilder",
      "parentKind": "Class",
      "dependencies": [
        "{ productId: string; variantId?: string; }[]"
      ],
      "parameters": [
        {
          "name": "products",
          "type": "{ productId: string; variantId?: string; }[]",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "build",
      "parent": "PurchasedWithMultipleProductsBuilder",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": [],
      "isAsync": false
    },
    {
      "kind": "Constructor",
      "name": "constructor",
      "parent": "PurchasedWithMultipleProductsBuilder",
      "parentKind": "Class",
      "dependencies": [
        "Settings"
      ],
      "parameters": [
        {
          "name": "settings",
          "type": "Settings",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ]
    },
    {
      "kind": "Class",
      "name": "PurchasedWithMultipleProductsBuilder",
      "dependencies": [],
      "isAbstract": false,
      "isDefault": false,
      "properties": [],
      "extends": [
        "ProductSettingsRecommendationBuilder"
      ]
    },
    {
      "kind": "Method",
      "name": "build",
      "parent": "PurchasedWithProductBuilder",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": [],
      "isAsync": false
    },
    {
      "kind": "Constructor",
      "name": "constructor",
      "parent": "PurchasedWithProductBuilder",
      "parentKind": "Class",
      "dependencies": [
        "Settings"
      ],
      "parameters": [
        {
          "name": "settings",
          "type": "Settings",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ]
    },
    {
      "kind": "Class",
      "name": "PurchasedWithProductBuilder",
      "dependencies": [],
      "isAbstract": false,
      "isDefault": false,
      "properties": [],
      "extends": [
        "BySingleProductRecommendationBuilder"
      ]
    },
    {
      "kind": "Method",
      "name": "build",
      "parent": "RecentlyViewedProductsBuilder",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": [],
      "isAsync": false
    },
    {
      "kind": "Constructor",
      "name": "constructor",
      "parent": "RecentlyViewedProductsBuilder",
      "parentKind": "Class",
      "dependencies": [
        "Settings"
      ],
      "parameters": [
        {
          "name": "settings",
          "type": "Settings",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ]
    },
    {
      "kind": "Class",
      "name": "RecentlyViewedProductsBuilder",
      "dependencies": [],
      "isAbstract": false,
      "isDefault": false,
      "properties": [],
      "extends": [
        "ProductSettingsRecommendationBuilder"
      ]
    },
    {
      "kind": "Method",
      "name": "setTerm",
      "parent": "SearchTermBasedProductRecommendationBuilder",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": [
        {
          "name": "term",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "build",
      "parent": "SearchTermBasedProductRecommendationBuilder",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": [],
      "isAsync": false
    },
    {
      "kind": "Constructor",
      "name": "constructor",
      "parent": "SearchTermBasedProductRecommendationBuilder",
      "parentKind": "Class",
      "dependencies": [
        "Settings"
      ],
      "parameters": [
        {
          "name": "settings",
          "type": "Settings",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ]
    },
    {
      "kind": "Class",
      "name": "SearchTermBasedProductRecommendationBuilder",
      "dependencies": [],
      "isAbstract": false,
      "isDefault": false,
      "properties": [],
      "extends": [
        "ProductSettingsRecommendationBuilder"
      ]
    },
    {
      "kind": "Method",
      "name": "setSimilarProductsEvaluationSettings",
      "parent": "SimilarProductsProductBuilder",
      "parentKind": "Class",
      "docs": "/** @deprecated\r\n     * Use setEvaluationSettings instead\r\n     */",
      "dependencies": [
        "SimilarProductsEvaluationSettings"
      ],
      "parameters": [
        {
          "name": "settings",
          "type": "SimilarProductsEvaluationSettings",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "setEvaluationSettings",
      "parent": "SimilarProductsProductBuilder",
      "parentKind": "Class",
      "dependencies": [
        "(settings: Partial<SimilarProductsEvaluationSettings>) => void"
      ],
      "parameters": [
        {
          "name": "builder",
          "type": "(settings: Partial<SimilarProductsEvaluationSettings>) => void",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "build",
      "parent": "SimilarProductsProductBuilder",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": [],
      "isAsync": false
    },
    {
      "kind": "Constructor",
      "name": "constructor",
      "parent": "SimilarProductsProductBuilder",
      "parentKind": "Class",
      "dependencies": [
        "Settings"
      ],
      "parameters": [
        {
          "name": "settings",
          "type": "Settings",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ]
    },
    {
      "kind": "Class",
      "name": "SimilarProductsProductBuilder",
      "dependencies": [],
      "isAbstract": false,
      "isDefault": false,
      "properties": [],
      "extends": [
        "BySingleProductRecommendationBuilder"
      ]
    },
    {
      "kind": "Method",
      "name": "setProductIds",
      "parent": "SortProductsBuilder",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": [
        {
          "name": "productIds",
          "type": "string[]",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "build",
      "parent": "SortProductsBuilder",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": [],
      "isAsync": false
    },
    {
      "kind": "Constructor",
      "name": "constructor",
      "parent": "SortProductsBuilder",
      "parentKind": "Class",
      "dependencies": [
        "Settings"
      ],
      "parameters": [
        {
          "name": "settings",
          "type": "Settings",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ]
    },
    {
      "kind": "Class",
      "name": "SortProductsBuilder",
      "dependencies": [],
      "isAbstract": false,
      "isDefault": false,
      "properties": [],
      "extends": [
        "ProductSettingsRecommendationBuilder"
      ]
    },
    {
      "kind": "Method",
      "name": "setProductId",
      "parent": "SortVariantsBuilder",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": [
        {
          "name": "productId",
          "type": "string",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "build",
      "parent": "SortVariantsBuilder",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": [],
      "isAsync": false
    },
    {
      "kind": "Constructor",
      "name": "constructor",
      "parent": "SortVariantsBuilder",
      "parentKind": "Class",
      "dependencies": [
        "Settings"
      ],
      "parameters": [
        {
          "name": "settings",
          "type": "Settings",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ]
    },
    {
      "kind": "Class",
      "name": "SortVariantsBuilder",
      "dependencies": [],
      "isAbstract": false,
      "isDefault": false,
      "properties": [],
      "extends": [
        "ProductSettingsRecommendationBuilder"
      ]
    },
    {
      "kind": "Method",
      "name": "setTerm",
      "parent": "PopularSearchTermsRecommendationBuilder",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": [
        {
          "name": "term",
          "type": "string | null | undefined",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "addEntityType",
      "parent": "PopularSearchTermsRecommendationBuilder",
      "parentKind": "Class",
      "dependencies": [
        "('Product' | 'Variant' | 'ProductCategory' | 'Brand' | 'Content' | 'ContentCategory')[]"
      ],
      "parameters": [
        {
          "name": "types",
          "type": "('Product' | 'Variant' | 'ProductCategory' | 'Brand' | 'Content' | 'ContentCategory')[]",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ],
      "returnType": "this",
      "isAsync": false
    },
    {
      "kind": "Method",
      "name": "build",
      "parent": "PopularSearchTermsRecommendationBuilder",
      "parentKind": "Class",
      "dependencies": [],
      "parameters": [],
      "isAsync": false
    },
    {
      "kind": "Constructor",
      "name": "constructor",
      "parent": "PopularSearchTermsRecommendationBuilder",
      "parentKind": "Class",
      "dependencies": [
        "Settings"
      ],
      "parameters": [
        {
          "name": "settings",
          "type": "Settings",
          "nullable": false,
          "defaultValue": null,
          "isReadonly": false
        }
      ]
    },
    {
      "kind": "Class",
      "name": "PopularSearchTermsRecommendationBuilder",
      "dependencies": [
        "string | null | undefined",
        "RecommendPopularSearchTermSettings"
      ],
      "isAbstract": false,
      "isDefault": false,
      "properties": [
        {
          "name": "term",
          "type": "string | null | undefined",
          "nullable": false,
          "defaultValue": null
        },
        {
          "name": "recommendationSettings",
          "type": "RecommendPopularSearchTermSettings",
          "nullable": false,
          "defaultValue": "{\r\n        numberOfRecommendations: 10,\r\n    }"
        }
      ],
      "extends": [
        "RecommendationRequestBuilder"
      ]
    }
  ]
}